[{"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\reports\\ReportQuantityProductsSale.jsx":"1","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\orders\\listaOrders.js":"2","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\index.js":"3","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Navbar.js":"4","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\reportWebVitals.js":"5","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutos.js":"6","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\ListarFornecedores.js":"7","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\orders\\addNewOrder.js":"8","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\category\\ListCategories.js":"9","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\EcommercePage\\NavCenter\\NavCenter.js":"10","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\EcommercePage\\Carousel\\Carousel.js":"11","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\EcommercePage\\ProdutosEmAlta\\ProdutosEmAlta.js":"12","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProviderController.js":"13","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ClientController.js":"14","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Tables\\DataTableDefault.js":"15","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\ducks\\categories\\index.js":"16","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\services\\serviceCep.js":"17","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Home.js":"18","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\CadastrarProdutos.js":"19","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutosViaNota.js":"20","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\category\\AddCategory.js":"21","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\EcommercePage\\Promocoes\\Promocoes.js":"22","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\NavBar\\NavBar.js":"23","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\CategoryController.js":"24","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\SizeClothesController.js":"25","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\fetchActions\\index.js":"26","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\ducks\\user\\index.js":"27","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\UsersController.js":"28","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\enviroments\\enviroment-homolg.js":"29","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\EcommercePage\\EcommercePage.js":"30","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\SaidaDeProdutos.js":"31","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\clients\\listClients.js":"32","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\saleman\\listarVendedores.js":"33","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\category\\EditCategory.js":"34","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProductController.js":"35","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\ducks\\loadingSpinner\\index.js":"36","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\SalesmanController.js":"37","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\ViewProduct\\index.js":"38","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\App.js":"39","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\ListForCategory\\SearchForCategory\\index.js":"40","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\CadastrarFornecedores.js":"41","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Modals\\index.jsx":"42","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Modals\\TesteModal.js":"43","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\ducks\\ecommercefunctions\\shoppingcart\\index.js":"44","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Tables\\DataTableSoppingCart\\index.js":"45","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\orders\\detalhesDoPedido.js":"46","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\config\\index.js":"47","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\ListHighProducts\\ListHighProducts.js":"48","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\clients\\cadastroClients.js":"49","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\OrdersController.js":"50","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Tables\\DataTableDefaultCategories.js":"51","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\Footer\\Footer.js":"52","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\ducks\\sales\\index.js":"53","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\Sale\\FinishimSale.jsx":"54","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\index.js":"55","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\saleman\\cadastrarVendedores.js":"56","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\Stepper\\index.js":"57","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\Order\\index.js":"58","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\ListProducts.js":"59"},{"size":1965,"mtime":1616261015243,"results":"60","hashOfConfig":"61"},{"size":2318,"mtime":1615433722393,"results":"62","hashOfConfig":"61"},{"size":757,"mtime":1614651676868,"results":"63","hashOfConfig":"61"},{"size":2013,"mtime":1616551835731,"results":"64","hashOfConfig":"61"},{"size":362,"mtime":1606175593111,"results":"65","hashOfConfig":"61"},{"size":8329,"mtime":1614925905130,"results":"66","hashOfConfig":"61"},{"size":2806,"mtime":1607261929807,"results":"67","hashOfConfig":"61"},{"size":15334,"mtime":1614925845493,"results":"68","hashOfConfig":"61"},{"size":257,"mtime":1614925060477,"results":"69","hashOfConfig":"61"},{"size":2306,"mtime":1616352085139,"results":"70","hashOfConfig":"61"},{"size":2124,"mtime":1614650735992,"results":"71","hashOfConfig":"61"},{"size":3237,"mtime":1615166189803,"results":"72","hashOfConfig":"61"},{"size":861,"mtime":1610499272954,"results":"73","hashOfConfig":"61"},{"size":2582,"mtime":1610499122916,"results":"74","hashOfConfig":"61"},{"size":4359,"mtime":1615099179918,"results":"75","hashOfConfig":"61"},{"size":304,"mtime":1614924657421,"results":"76","hashOfConfig":"61"},{"size":378,"mtime":1614693814543,"results":"77","hashOfConfig":"61"},{"size":12612,"mtime":1617070470911,"results":"78","hashOfConfig":"61"},{"size":31426,"mtime":1616354888527,"results":"79","hashOfConfig":"61"},{"size":10332,"mtime":1611096219015,"results":"80","hashOfConfig":"61"},{"size":6077,"mtime":1615168922702,"results":"81","hashOfConfig":"61"},{"size":5782,"mtime":1612922731031,"results":"82","hashOfConfig":"61"},{"size":5395,"mtime":1616976583738,"results":"83","hashOfConfig":"61"},{"size":1699,"mtime":1615180597919,"results":"84","hashOfConfig":"61"},{"size":373,"mtime":1610499312070,"results":"85","hashOfConfig":"61"},{"size":1083,"mtime":1615429293261,"results":"86","hashOfConfig":"61"},{"size":833,"mtime":1614650289867,"results":"87","hashOfConfig":"61"},{"size":677,"mtime":1617071033899,"results":"88","hashOfConfig":"61"},{"size":99,"mtime":1616983571054,"results":"89","hashOfConfig":"61"},{"size":2845,"mtime":1615232694618,"results":"90","hashOfConfig":"61"},{"size":10635,"mtime":1614693826722,"results":"91","hashOfConfig":"61"},{"size":4629,"mtime":1609481259350,"results":"92","hashOfConfig":"61"},{"size":645,"mtime":1609807586726,"results":"93","hashOfConfig":"61"},{"size":15407,"mtime":1615182840512,"results":"94","hashOfConfig":"61"},{"size":5752,"mtime":1616353464680,"results":"95","hashOfConfig":"61"},{"size":360,"mtime":1614801613231,"results":"96","hashOfConfig":"61"},{"size":287,"mtime":1610499289342,"results":"97","hashOfConfig":"61"},{"size":1352,"mtime":1616355345251,"results":"98","hashOfConfig":"61"},{"size":1488,"mtime":1616983030566,"results":"99","hashOfConfig":"61"},{"size":10607,"mtime":1616636641601,"results":"100","hashOfConfig":"61"},{"size":7188,"mtime":1607266090664,"results":"101","hashOfConfig":"61"},{"size":9810,"mtime":1617071421146,"results":"102","hashOfConfig":"61"},{"size":1234,"mtime":1616364377585,"results":"103","hashOfConfig":"61"},{"size":649,"mtime":1616552945636,"results":"104","hashOfConfig":"61"},{"size":2829,"mtime":1616642566991,"results":"105","hashOfConfig":"61"},{"size":16661,"mtime":1616545976476,"results":"106","hashOfConfig":"61"},{"size":2708,"mtime":1610420520800,"results":"107","hashOfConfig":"61"},{"size":378,"mtime":1612922731036,"results":"108","hashOfConfig":"61"},{"size":8240,"mtime":1614925809983,"results":"109","hashOfConfig":"61"},{"size":1197,"mtime":1614405612983,"results":"110","hashOfConfig":"61"},{"size":3698,"mtime":1615182996821,"results":"111","hashOfConfig":"61"},{"size":1853,"mtime":1612922731032,"results":"112","hashOfConfig":"61"},{"size":970,"mtime":1615429451797,"results":"113","hashOfConfig":"61"},{"size":2673,"mtime":1616822785161,"results":"114","hashOfConfig":"61"},{"size":566,"mtime":1616372829543,"results":"115","hashOfConfig":"61"},{"size":3547,"mtime":1610410968455,"results":"116","hashOfConfig":"61"},{"size":5136,"mtime":1616823523025,"results":"117","hashOfConfig":"61"},{"size":535,"mtime":1616824024472,"results":"118","hashOfConfig":"61"},{"size":25230,"mtime":1615257229178,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},"9q6md4",{"filePath":"124","messages":"125","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"123"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"143"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"143"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"123"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"143"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"143"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"136"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"136"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"123"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"129"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"123"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"143"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"136"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"143"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"250","usedDeprecatedRules":"123"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"123"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"123"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"136"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"247"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"140"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\reports\\ReportQuantityProductsSale.jsx",["279","280","281","282"],"import React , {useState , useEffect} from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\n\r\n\r\n\r\nexport const QuantityProductsSale = (props : any)=>{\r\n    const [chartData , setChartData] = useState({})\r\n\r\n\r\n    const quantidadeDeProdutos = props.products\r\n\r\n\r\n    console.log('LISTADEQUANTIDADE')\r\n    console.log(quantidadeDeProdutos)\r\n\r\n\r\n    let labelProdutos = [];\r\n    let quantidade = [];\r\n\r\n\r\n    if(quantidadeDeProdutos[1] != undefined)\r\n    {\r\n        for(var i = 0; i < quantidadeDeProdutos[1].length ; i++)\r\n        {\r\n            labelProdutos.push(\"Produto : \" + quantidadeDeProdutos[1][i].idproduct)\r\n            quantidade.push(quantidadeDeProdutos[1][i].quantidade)\r\n        }\r\n        console.log(labelProdutos)\r\n        console.log(quantidade)\r\n\r\n    }\r\n    const chart = () => {\r\n        setChartData({\r\n            labels : labelProdutos,\r\n            datasets : [\r\n                {\r\n                    label : \"Produtos\",\r\n                    data : quantidade,\r\n                    backgroundColor : [\r\n                        \"blue\",\r\n                        \"darkslategray\",\r\n                        \"lightblue\",\r\n                        'cyan'\r\n                    ],\r\n                    hoverBackgroundColor : \"gray\",\r\n                    borderWidth : 1,\r\n                    hoverBorderWidth : 4,\r\n                    weight : 1\r\n                },\r\n            ]\r\n        })\r\n    }\r\n    \r\n    \r\n    \r\n    useEffect(() => {\r\n        chart()\r\n    }, [])\r\n\r\n    if(chartData.labels != undefined )\r\n    {\r\n        if(chartData.length != 0)\r\n        {\r\n            return (\r\n                <div style={{width : \"35%\" , height : \"35%\"}}>\r\n                    <Doughnut\r\n                        data={chartData}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return(<h4>Carregando ...</h4>)\r\n        }\r\n    }\r\n    else {\r\n        return(<h4>Carregando ...</h4>)\r\n    }\r\n}",["283","284"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\orders\\listaOrders.js",["285","286","287","288","289","290","291","292","293","294"],"import React , {useEffect , useState} from 'react'\r\nimport {Table , Card , Accordion , Button,ListGroup} from 'react-bootstrap';\r\nimport {useDispatch , useSelector} from 'react-redux'\r\nimport {updateListOrders} from '../../../store/ducks/sales'\r\nimport { getAllSales , getAllProductsMoreSale } from '../../../store/fetchActions';\r\nimport {QuantityProductsSale} from '../products/reports/ReportQuantityProductsSale.jsx'\r\nimport {TableDefault} from \"../Tables/DataTableDefault\"\r\nimport orderscontroller from '../../../Controller/OrdersController';\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\n\r\nimport \"./style.css\"\r\n\r\n\r\nconst retornoDeProdutos = (quantidadeProdutos)=>{\r\n    console.log(quantidadeProdutos)\r\n        let produtos = []\r\n        for(var i = 1; i <= quantidadeProdutos ; i++){\r\n            \r\n            produtos.push(<ListGroup>{\"Produto : \" + i}</ListGroup>)\r\n            \r\n        }\r\n        console.log(produtos)\r\n}\r\n\r\n\r\n\r\nexport default ()=>{\r\n\r\n    const [isLoading , setIsLoading] = useState(true)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getAllSales())\r\n        dispatch(getAllProductsMoreSale())\r\n    } , [])\r\n    \r\n    const orders = useSelector(store => store.orders)\r\n\r\n\r\n\r\n        if(!orders.listOrders[0])\r\n        {\r\n            return <Spinner style={{display : isLoading ? \"block\" : \"none\" , marginBottom : \"2%\"}} animation=\"border\"  />\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <div className=\"container-fluid\" style={{alignItems : \"left\" , justifyContent: \"left\" , textAlign : \"left\"}}>\r\n                    <h5>Pedidos</h5> \r\n                <div className=\"container-fluid\">\r\n                    <div className=\"col-md-12\" style={{display : \"flex\",justifyContent : \"space-between\"}}>\r\n                        <QuantityProductsSale products={orders.quantityProductsMoreOnSale}/>\r\n                        <QuantityProductsSale products={orders.quantityProductsMoreOnSale}/>\r\n                        <QuantityProductsSale products={orders.quantityProductsMoreOnSale}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container-fluid\">\r\n                    <TableDefault orders={orders.listOrders[0]}/>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n    }","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\index.js",[],["295","296"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Navbar.js",["297","298","299","300","301","302","303","304","305","306","307","308","309"],"import React from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Navbar, Nav,DropdownButton,Dropdown,Figure, NavDropdown,SplitButton} from 'react-bootstrap';\r\nimport {Link , Switch , Route , BrowserRouter} from \"react-router-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./indexComponents.css\"\r\nimport {useDispatch} from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport {changeAuthenticated} from '../store/ducks/user';\r\nimport {PropagateLoader} from 'react-spinners';\r\nimport { MdStoreMallDirectory } from \"react-icons/md\";\r\nimport {MDBIcon} from 'mdbreact';\r\n\r\n\r\nimport {\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBBtn\r\n}\r\nfrom 'mdbreact'\r\n\r\nconst redirectToEcommerce = () => window.location.href=\"/\"\r\n\r\n\r\n\r\nexport default function(props){\r\n\r\n  \r\n  const user = useSelector(state => state.user[0])\r\n  const modalSpinner = useSelector(store => store.spinnerModal.showModal)\r\n\r\n    return(\r\n        <div>\r\n\r\n              <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n              <Navbar.Brand><Link to=\"/admin\" className=\"whiteTextMrsGringa\">Mrs.Gringa</Link></Navbar.Brand>  \r\n              <Nav className=\"mr-auto navbar-nav\" style={{}}>\r\n                    \r\n              </Nav>\r\n              <Nav style={{marginLeft:\"auto\"  , display:\"flex\" , justifyContent: \"center\" , alignItens : \"center\"}} className={!user.authenticated ? \"displayNoneGeral\" : \"navbar-nav\"}>\r\n              \r\n              <div style={{width : \"100%\",display:\"flex\" , justifyContent: \"center\" , alignItems:\"center\"}}>\r\n                <PropagateLoader id=\"LoadingLoader\" size=\"12\" color=\"white\" loading={modalSpinner}></PropagateLoader>\r\n              </div>\r\n              <MDBNavbarNav className=\"ml-auto mr-0\" right>\r\n                <MDBNavItem>\r\n                <MDBBtn onClick={redirectToEcommerce} color=\"elegant\"><MDBIcon size=\"lg\" icon=\"store\" /></MDBBtn>\r\n                </MDBNavItem>\r\n              </MDBNavbarNav>\r\n              </Nav>\r\n          </Navbar>\r\n        </div>\r\n\r\n\r\n    )\r\n}",["310","311"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\reportWebVitals.js",[],["312","313"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutos.js",["314"],"import { expr } from 'jquery'\r\nimport React from 'react'\r\nimport {Form , Button , Table} from \"react-bootstrap\"\r\nimport product from '../../../Controller/ProductController'\r\nimport \"./Products.css\"\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst Product = new product();\r\n\r\n\r\n\r\nexport default class EntradaDeProduto extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            product: {},\r\n            idProduct : 0,\r\n            quantidadeASeAdd : 0\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.handleSubmitAddQuantity = this.handleSubmitAddQuantity.bind(this);\r\n    }\r\n\r\n\r\n    async componentDidMount(){}\r\n\r\n\r\n    handleQuantity(event){\r\n        this.setState({quantidadeASeAdd : event.target.value})\r\n    }\r\n\r\n\r\n    handleSubmitAddQuantity(event)\r\n    {\r\n        var stateProduct = this.state.product\r\n        Product.EnterProductQuantity(stateProduct.idproduct , parseInt(this.state.quantidadeASeAdd) , stateProduct.quantity)\r\n        .then(res => {\r\n            if(res.success){\r\n                Swal.fire({\r\n                    title:  \"Sucesso ! \",\r\n                    text : \"Quantidade Adicionada com Sucesso ! \",\r\n                    icon : \"success\",\r\n                    timer : 1500,\r\n                    showConfirmButton : false,\r\n                    willClose : ()=>{\r\n                        window.location.href = \"/controlpainel/admin/listarProdutos\"\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                Swal.fire({\r\n                    title:  \"ERRO : \",\r\n                    text : \"Quantidade Adicionada com Sucesso ! \",\r\n                    icon : \"success\",\r\n                    showConfirmButton:  false,\r\n                    timer : 1500,\r\n                    willClose : ()=>{\r\n                        window.location.href = \"/controlpainel/admin/listarProdutos\"\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            Swal.fire({\r\n                title : \"ERRO : \" , \r\n                text : err,\r\n                icon : \"error\",\r\n                willClose : ()=>{\r\n                    window.location.href = \"/controlpainel/admin/listarProdutos\"\r\n                }\r\n            })\r\n        })\r\n        this.setState({product : stateProduct})\r\n    }\r\n\r\n    handleSubmit(event){\r\n\r\n\r\n        if(this.state.idProduct === 0 || this.state.idProduct === null || this.state.idProduct === undefined)\r\n        {\r\n            Swal.fire({\r\n                title: \"Erro\" , \r\n                text : \"Preencha o campo De Pesquisa\",\r\n                icon : \"error\",\r\n                timer : 1500\r\n            })\r\n            return\r\n        }\r\n\r\n        let timerInterval\r\n        Swal.fire({\r\n        title: 'Carregando Conteudo',\r\n        html: 'Listando Produto, Aguarde...',\r\n        timer: 12000,\r\n        timerProgressBar: true,\r\n        showConfirmButton : false,\r\n        willOpen: () => {\r\n            Swal.showLoading()\r\n            timerInterval = setInterval(() => {\r\n            const content = Swal.getContent()\r\n            if (content) {\r\n                const b = content.querySelector('b')\r\n                if (b) {\r\n                b.textContent = Swal.getTimerLeft()\r\n                }\r\n            }\r\n            }, 100)\r\n            Product.ListProductForId(this.state.idProduct)\r\n            .then(res => {\r\n                document.getElementById('produtoPesquisado').innerHTML = \"\"\r\n                console.log(res)\r\n                this.setState({product : res[0]})\r\n                Swal.close()\r\n\r\n\r\n                let linhaProduto = \r\n                \"<tr>\"+\r\n                    \"<td><input name='idProdutoSelecionado' readonly className='form-control' value=\"+res[0].idproduct+\" /></td>\"+\r\n                    \"<td><input name='nomeProdutoSelecionado' readonly className='form-control' value=\"+res[0].name+\" /></td>\"+\r\n                    \"<td><input name='referenciaProdutoSelecionado' readonly className='form-control' value=\"+res[0].reference+\" /></td>\"+\r\n                    \"<td><input name='corProdutoSelecionado' readonly className='form-control' value=\"+res[0].color+\" /></td>\"+\r\n                    \"<td><input name='quantidadeProdutoSelecionado' readonly className='form-control' value=\"+res[0].quantity+\" /></td>\"+\r\n                \"</tr>\"\r\n                document.getElementById('produtoPesquisado').innerHTML += linhaProduto\r\n            })\r\n        },\r\n        willClose: () => {\r\n            clearInterval(timerInterval)\r\n        }\r\n        }).then((result) => {\r\n        /* Read more about handling dismissals below */\r\n        if (result.dismiss === Swal.DismissReason.timer) {\r\n            \r\n        }\r\n        })\r\n    }\r\n\r\n\r\n    handleChange(event){\r\n        this.setState({idProduct : event.target.value})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <Form>  \r\n                <div className=\"row\">\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3 mb-1 PainelDePesquisa\">\r\n                            <label>Pesquise por ID</label>\r\n                            <Form.Control onChange={this.handleChange} value={this.state.idProduct} type=\"text\" id=\"idOrReference\" placeholder=\"\" />\r\n                            {/* <Form.Check \r\n                                name=\"radiopesquisa\"\r\n                                type=\"radio\"\r\n                                id=\"radioId\"\r\n                                value=\"id\"\r\n                                onChange={this.handleChange}\r\n                                label=\"Pesquisa por ID\"\r\n                            />\r\n                            <Form.Check \r\n                                name=\"radiopesquisa\"\r\n                                type=\"radio\"\r\n                                value=\"reference\"\r\n                                onChange={this.handleChange}\r\n                                id=\"radioReference\"\r\n                                label=\"Pesquisa por Referência\"\r\n                            /> */}\r\n                            <Button variant=\"outline-dark\" onClick={this.handleSubmit} className=\"mt-2\">Pesquisar</Button>\r\n                        </div>\r\n                        <h2>Produto Pesquisado</h2>\r\n                        <div className=\"col-md-2 mt-4\"></div>\r\n                        <div className=\"col-md-4\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"><hr></hr></div>\r\n                <div className=\"row\">\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-6 mt-4\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12 mt-4\">\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>Código</td>\r\n                                    <td>Nome</td>\r\n                                    <td>Referencia</td>\r\n                                    <td>Cor</td>\r\n                                    <td>Quantidade</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"produtoPesquisado\">\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <div className=\"row col-md-12 mt-4\">\r\n                        <div className=\"col-md-4\"></div>\r\n                        <div className=\"col-md-4 painelAddQuantity\">\r\n                            <label>Quantidade a Se Adicionar</label>\r\n                            <Form.Control onChange={this.handleQuantity} value={this.state.quantidadeASeAdd}  />\r\n                            <Button variant=\"outline-dark\" onClick={this.handleSubmitAddQuantity}>Adicionar ✓</Button>\r\n                        </div>\r\n                        <div className=\"col-md-4 mt-4\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n        )\r\n    }\r\n\r\n }",["315","316"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\ListarFornecedores.js",[],["317","318"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\orders\\addNewOrder.js",["319","320","321","322","323"],"import React from 'react'\r\nimport {Table} from 'react-bootstrap'\r\nimport Swal from 'sweetalert2'\r\nimport clientscontroller from '../../../Controller/ClientController'\r\nimport productscontroller from '../../../Controller/ProductController'\r\nimport orderscontroller from '../../../Controller/OrdersController'\r\nimport salesmancontroller from '../../../Controller/SalesmanController'\r\n\r\n\r\n\r\nconst OrdersController = new orderscontroller();\r\nconst SalesmanController = new salesmancontroller();\r\nconst ClientsController = new clientscontroller();\r\nconst ProductsController = new productscontroller();\r\n\r\nexport default class AddNewOrder extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n\r\n        this.state = {\r\n            newOrder : {\r\n                numberOfOrder : 0,\r\n                paymant : '',\r\n                idclient : 0,\r\n                products : [],\r\n                totalValueForProducts : 0,\r\n                subTotalValueForProducts : 0,\r\n                freteTotal:0,\r\n                formaPagamento:'',\r\n                idsaleman : 0\r\n            },\r\n            salesman : [],\r\n            quantityProductForAdd : 1,\r\n            haveProducts : false,\r\n            referenceForAdd : \"\",\r\n            quantityForDiscount: 0,\r\n            clients : [],\r\n            clientSelected : {\r\n                adress : \"\",\r\n                bairro : \"\",\r\n                numero : 0,\r\n                tel2 : \"(00) 00000-0000\"\r\n            }\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.finalizarVenda = this.finalizarVenda.bind(this)\r\n        this.changeClient = this.changeClient.bind(this)\r\n        this.changeSaleman = this.changeSaleman.bind(this)\r\n        this.testeDeAlteracao = this.testeDeAlteracao.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        ClientsController.listAllClients().then(response => {\r\n            window.scrollTo(2,200)\r\n            this.setState({clients : response})})\r\n        SalesmanController.listAllSalesman()\r\n        .then(resp => this.setState({salesman : resp}))\r\n    }\r\n\r\n\r\n\r\n\r\n    changeSaleman = (event)=>{\r\n        let newOrder = this.state.newOrder\r\n        let idsaleman = event.target.value\r\n        newOrder.idsaleman = idsaleman\r\n        this.setState({newOrder})\r\n    }\r\n    generateOrderNumber = ()=>\r\n    {\r\n        var state = this.state\r\n        var dataAtualFormatada = this.state.newOrder.idclient + \"\" + new Date().getFullYear() + \"\" + new Date().getMonth()+ \"\" + new Date().getDate() + \"\"+ new Date().getHours() + \"\" + new Date().getMinutes()+ \"\" + new Date().getSeconds()\r\n        state.newOrder.numberOfOrder = dataAtualFormatada\r\n        this.setState({state})\r\n    }\r\n    \r\n    changeClient = (event)=>{\r\n        let idClienteSelecionado = parseInt(event.target.value)\r\n        let state = this.state\r\n        state.newOrder.idclient = idClienteSelecionado\r\n\r\n        this.state.clients.map(index =>{\r\n            if(index.idclient === idClienteSelecionado)\r\n            {\r\n                state.clientSelected = index\r\n            }\r\n        })\r\n        \r\n\r\n\r\n\r\n        this.setState({state})\r\n    }\r\n\r\n    handleChange = (event)=>{\r\n        var state = this.state\r\n        state[event.target.name] = event.target.value\r\n        this.setState({state});\r\n    }\r\n    \r\n    finalizarVenda = async ()=>{\r\n\r\n        this.generateOrderNumber();\r\n\r\n        if(this.state.newOrder.idclient == 0)\r\n        {\r\n            Swal.fire({\r\n                title : \"ERROR !\",\r\n                html: \"<p><strong>SELECIONE O CLIENTE</strong></p>\",\r\n                icon : \"error\",\r\n                showConfirmButton : true,\r\n            })\r\n            return\r\n        }\r\n        if(this.state.newOrder.products.length ==0)\r\n        {\r\n            Swal.fire({\r\n                title : \"ERROR !\",\r\n                html: \"<p><strong>ADICIONE AO MENOS 1 PRODUTO PARA REALIZAR A VENDA</strong></p>\",\r\n                icon : \"error\",\r\n                showConfirmButton : true,\r\n            })\r\n            return\r\n        }\r\n\r\n        const { value: formValues } = await Swal.fire({\r\n            title: 'Finalizar Venda',\r\n            html:\r\n            \"<div>\"+\r\n              \"<label>SubTotal</label>\"+\r\n              '<input id=\"subTotal\" value='+this.state.newOrder.totalValueForProducts+' readonly className=\"swal2-input\">' +\r\n              \"<label>Frete</label>\"+\r\n              '<input id=\"freteTotal\" onchange=\"document.getElementById(`valorTotal`).value +=  parseFloat(parseFloat(document.getElementById(`freteTotal`).value) + parseFloat(document.getElementById(`subTotal`).value)).toFixed(2)\" className=\"swal2-input\">'+\r\n              \"<label>Forma de Pagamento</label>\"+\r\n              '<select id=\"formaPagamento\" className=\"swal2-input\">'+\r\n                    '<option value=\"debito\">Débito</option>'+\r\n                    '<option value=\"credito\">Crédito</option>'+\r\n                    '<option value=\"dinheiro\">Dinheiro</option>'+\r\n              '</select>'+\r\n              '<hr>'+\r\n              \"<label><strong>Valor Total</strong></label>\"+\r\n              '<input id=\"valorTotal\" readonly className=\"swal2-input\">'+\r\n            \"</div>\",\r\n            focusConfirm: false,\r\n            preConfirm: () => {\r\n                    let subTotal = document.getElementById('subTotal').value\r\n                    let freteTotal = document.getElementById('freteTotal').value\r\n                    let valorTotal = document.getElementById('valorTotal').value\r\n                    let formPagamento = document.getElementById('formaPagamento').value\r\n                    let state = this.state\r\n\r\n                    state.newOrder.subTotalValueForProducts = subTotal\r\n                    state.newOrder.totalValueForProducts = valorTotal\r\n                    state.newOrder.freteTotal = freteTotal\r\n                    state.newOrder.formaPagamento = formPagamento\r\n\r\n                    OrdersController.addNewOrder(state.newOrder)\r\n                    .then(response => {\r\n                        if(response.success)\r\n                        {\r\n                            Swal.fire({\r\n                                title : \"Sucesso !\",\r\n                                html: \"<p>Venda Gerada com Sucesso !</p>\",\r\n                                icon : \"success\",\r\n                                timer : 2000,\r\n                                showConfirmButton : false,\r\n                                onClose : ()=>{\r\n                                    window.location.href = \"/controlpainel/admin\"\r\n                                }\r\n                            })\r\n                        }\r\n                        else if(response.errno != \"\")\r\n                        {\r\n                            Swal.fire({\r\n                                title : \"ERROR !\",\r\n                                html: \"<p>\"+response.sqlMessage+\"</p>\",\r\n                                icon : \"error\",\r\n                                showConfirmButton : true,\r\n                            })\r\n                        }\r\n                    })\r\n\r\n                    \r\n                    // this.setState({state})\r\n            }\r\n          })\r\n\r\n\r\n    }\r\n\r\n    testeDeAlteracao = (element)=>{\r\n        console.log(element)\r\n  }\r\n    handleSubmit = (eve)=>{\r\n\r\n        eve.preventDefault();\r\n\r\n        const idForSearch = this.state.referenceForAdd\r\n\r\n        ProductsController.ListProductForId(idForSearch)\r\n        .then(response => {\r\n            var state = this.state\r\n\r\n            if(!response){\r\n                return\r\n            }\r\n            state.newOrder.products.push(response[0])\r\n            state.newOrder.totalValueForProducts += parseFloat(response[0].sellvalue)\r\n            state.haveProducts = true\r\n            state.referenceForAdd = \"\"\r\n            \r\n            console.log(state)\r\n            this.setState({state})\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <span>Status:</span><h2>Caixa</h2><h2>{this.state.haveProducts ? 'Ocupado' : \"Disponível\"}</h2>\r\n                <div className=\"row\" style={{padding: 10,border : '1px solid darkslategray' , borderRadius: \"5px\"}}>\r\n                    <div className=\"col-md-2\" style={{background : \"#f5f5f5\" , padding : \"20px\"}}>\r\n                        <div className=\"mb-2\">\r\n                            <span><strong>Inserir Produto</strong></span>\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div>\r\n                                    <input  className=\"form-control mt-2\" onChange={this.handleChange} value={this.state.referenceForAdd} name=\"referenceForAdd\"></input>\r\n                                    <button style={{display:\"none\"}} className=\"btn btn-outline-success\" type=\"submit\"> + </button>\r\n                                </div>\r\n                                <span><strong>Quantidade</strong></span>\r\n                                <input className=\"form-control mt-2\" onChange={this.handleChange} placeholder=\"Quantidade\" value={this.state.quantityProductForAdd} name=\"quantityProductForAdd\"></input>\r\n                                <span><strong>Desconto?</strong></span>\r\n                                <input className=\"form-control mt-2\" onChange={this.handleChange} placeholder=\"Desconto\" value={this.state.quantityForDiscount} name=\"quantityProductForAdd\"></input>\r\n                            </form>\r\n                        </div>\r\n                        <hr style={{background:  \"black\"}}></hr>\r\n                        <div className=\"mt-4\">\r\n                                <p>Vendedor</p>\r\n                                <select onChange={this.changeSaleman} className=\"form-control mt-2\">\r\n                                    <option value=\"\" className=\"form-control\">\r\n                                        Selecione o Vendedor\r\n                                    </option>\r\n                                    {this.state.salesman.map(index => {\r\n                                        return(\r\n                                            <option value={index.idsaleman} className=\"form-control\">\r\n                                                {index.name}\r\n                                            </option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                        </div>\r\n                        <hr style={{background:  \"black\"}}></hr>\r\n                        <div className=\"mt-4\">\r\n                            <div>\r\n                                <p>Cliente</p>\r\n                                <select onChange={this.changeClient} className=\"form-control mt-2\">\r\n                                    <option value=\"0\">Selecione o Cliente</option>\r\n                                    {this.state.clients.map(index => {\r\n                                        return (\r\n                                            <option value={index.idclient} className=\"form-control\">\r\n                                                {index.name} {index.lastname}\r\n                                            </option>\r\n                                        )\r\n                                    })}\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <p>Endereço Cliente</p>\r\n                                <input className=\"form-control\" value={this.state.clientSelected.adress} readOnly={true}></input>\r\n                            </div>\r\n                            <div>\r\n                                <p>Bairro</p>\r\n                                <input className=\"form-control\" value={this.state.clientSelected.bairro} readOnly={true}></input>\r\n                            </div>\r\n                            <div>\r\n                                <p>Numero Cliente</p>\r\n                                <input className=\"form-control\" value={this.state.clientSelected.numero} readOnly={true}></input>\r\n                            </div>\r\n                            <div>\r\n                                <p>WhatsApp Cliente</p>\r\n                                <input className=\"form-control\" value={this.state.clientSelected.tel2} readOnly={true}></input>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{padding : 10,background : \"#FFF\", borderRadius:  \"5px\"}} className=\"col-md-10\">\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Nome Produto</th>\r\n                                <th>Quantidade</th>\r\n                                <th>Referencia</th>\r\n                                <th>Modelo</th>\r\n                                <th>Cor</th>\r\n                                <th>Tamanho</th>\r\n                                <th>Preço</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>{\r\n                        this.state.newOrder.products.map(index =>{\r\n                                    return(\r\n                                        <tr key={index.idproduct} id={index.idproduct}>\r\n                                            <td>{index.idproduct}</td>\r\n                                            <td>{index.name}</td>\r\n                                            <td>{this.state.quantityProductForAdd}</td>\r\n                                            <td>{index.reference}</td>\r\n                                            <td>{index.idcategory}</td>\r\n                                            <td>{index.color}</td>\r\n                                            <td>{index.idsizeclothes}</td>\r\n                                            <td>{index.sellvalue}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                    <div className=\"col-md-4\" style={{top : \"75%\" , left : \"60%\" , background : \"#f5f5f5\",position : \"absolute\"}}>\r\n                        <label>Valor Total</label>\r\n                        <input className=\"form-control\" name=\"totalBuy\" value={this.state.newOrder.totalValueForProducts.toFixed(2)} id=\"totalBuy\" ></input>\r\n                        <div className=\"mt-4\">\r\n                            <button onClick={this.finalizarVenda} className=\"btn btn-success\">Finalizar Venda</button>\r\n                            <button className=\"btn btn-danger\">Cancelar Venda</button>\r\n                            <button className=\"btn btn-warning\">Limpar Venda</button>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"row\" style={{padding: 10,border : '1px solid darkslategray', display: \"flex\" , justifyContent : \"space-between\" , borderRadius: \"5px\"}}>\r\n\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\category\\ListCategories.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\EcommercePage\\NavCenter\\NavCenter.js",["324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341"],"import React , {useState , useEffect} from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardFooter, MDBIcon, MDBTooltip,  MDBBadge, MDBCarousel, MDBCarouselInner, MDBCarouselItem, MDBBtn, MDBLink } from \"mdbreact\";\r\nimport \"./navcenter.css\";\r\n\r\nconst EcommercePage = (props) => {\r\n\r\n\r\n  if(props.categories.length > 0)\r\n  {\r\n    return (\r\n      <section style={{height : \"2%\" , backgroundColor: \"white\" , borderRadius : \"5px\"}} id=\"sectionCategorias\" className=\"text-center my-5 w-5 shadow-box-example z-depth-1\">\r\n        <h4 className=\"text-left\" style={{backgroundColor:\"#eceff1\" , padding : \"10px\" , borderRadius : \"10px\"}}> \r\n          Categorias\r\n        </h4>\r\n        <MDBRow className=\"\">\r\n          {\r\n              props.categories.map(index => \r\n                {\r\n                  if(index.ecommerceHome != \"false\" && index.active !=\"false\")\r\n                  {\r\n                    let linkParaRedirecionamento = \"/listFor/Category/\"+index.idcategory+\"/listAll\"\r\n                    return(\r\n                    <MDBCol key={index.id} lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-4\">\r\n                      <MDBCard collection className=\"z-depth-5-half\">\r\n                        <div className=\"view zoom\">\r\n                        <MDBLink to={linkParaRedirecionamento}>\r\n                          <img\r\n                            src={index.image1}\r\n                            className=\"img-fluid imgCategory\"\r\n                            alt=\"\"\r\n                            style={{height : \"180px\" , width:\"180px\" , maxHeight: \"180px\" , maxWidth : \"180px\" , marginRight : \"auto\" , marginLeft : \"auto\"}}\r\n                          />\r\n                          <div className=\"stripe dark\">\r\n                              <p>\r\n                                {index.name}\r\n                              </p>\r\n                          </div>\r\n                            </MDBLink>\r\n                        </div>\r\n                      </MDBCard>\r\n                    </MDBCol>\r\n                    )\r\n                  }\r\n                }          \r\n            )\r\n          }\r\n        </MDBRow>\r\n      </section>\r\n    );\r\n  }\r\n  else\r\n  {\r\n    return (<h1>Carregando...</h1>)\r\n  }\r\n}\r\n\r\nexport default EcommercePage;\r\n","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\EcommercePage\\Carousel\\Carousel.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\EcommercePage\\ProdutosEmAlta\\ProdutosEmAlta.js",["342"],"import React from \"react\";\r\nimport { MDBCarousel, MDBCarouselInner, MDBCarouselItem, MDBView, MDBContainer,MDBCol ,MDBCard ,MDBCardImage,MDBCardBody, MDBRow } from\r\n\"mdbreact\";\r\nimport \"./produtosemalta.css\"\r\n\r\nconst CarouselPage = (props) => {\r\n\r\n\r\n    console.log(props.products)\r\n\r\n\r\n  return (\r\n    <MDBContainer className=\"shadow-box-example z-depth-1\" fluid style={{ borderRadius :\"5px\",backgroundColor: \"#FFF\", padding : \"25px\"}}>\r\n        <MDBRow fluid style={{backgroundColor: \"#eceff1\", borderRadius: \"10px\"}}>\r\n            <MDBCol>\r\n                <h4 className=\"text-left\">\r\n                    Produtos em Alta\r\n                </h4>\r\n            </MDBCol>\r\n        </MDBRow>\r\n      <MDBCarousel\r\n        activeItem={1}\r\n        length={1}\r\n        showControls={true}\r\n        showIndicators={true}\r\n        className=\"LinhaExataCarrousell\"\r\n      >\r\n        <MDBCarouselInner>\r\n          <MDBCarouselItem  style={{display:\"flex\"}} itemId=\"1\">\r\n            <MDBView className=\"linhaCarrousel\">\r\n                {\r\n                    props.products.map(index => {\r\n                      if(index.active === \"true\" && index.ecommerceHome === \"true\")\r\n                      {\r\n                          return (\r\n                            <MDBCol style={{height : \"260px\"}} lg=\"2\" md=\"2\" className=\"mb-lg-0 mb-2\">\r\n                                <MDBCard style={{height : \"260px\"}} className=\"align-items-center\">\r\n                                    <MDBCardImage\r\n                                    src={index.image1}\r\n                                    top\r\n                                    alt=\"sample photo\"\r\n                                    overlay=\"white-slight\"\r\n                                    style={{height : \"100px\" , width:\"100px\" , maxHeight: \"100px\" , maxWidth : \"100px\" , marginRight : \"auto\" , marginLeft : \"auto\" ,marginTop : \"10%\"}}\r\n                                    />\r\n                                    <MDBCardBody className=\"text-center\">\r\n                                    <a href=\"#!\" className=\"grey-text\">\r\n                                        <h5>{index.name}</h5>\r\n                                    </a>\r\n                                    <h5>\r\n                                        <strong>\r\n                                        <a href=\"#!\" className=\"dark-grey-text\">\r\n                                            {index.color}\r\n                                        </a>\r\n                                        </strong>\r\n                                    </h5>\r\n                                    <h4 className=\"font-weight-bold grey-text\">\r\n                                        <strong style={{color : \"black\"}}>R$ {parseFloat(index.sellvalue).toLocaleString('pt-br' , {minimumFractionDigits:2})}</strong>\r\n                                    </h4>\r\n                                    </MDBCardBody>\r\n                                </MDBCard>\r\n                            </MDBCol>\r\n                          )\r\n                      }\r\n                    })\r\n                }\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n        </MDBCarouselInner>\r\n      </MDBCarousel>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default CarouselPage;","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProviderController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ClientController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Tables\\DataTableDefault.js",["343","344","345","346","347","348","349","350","351"],"import React , {useEffect} from 'react';\r\nimport { Button , Form } from 'react-bootstrap';\r\nimport {useDispatch , useSelector} from 'react-redux';\r\nimport DataTable from 'react-data-table-component';\r\nimport { getAllSales } from '../../../store/fetchActions';\r\n\r\n\r\n\r\n  export const TableDefault = (props) => {\r\n\r\n    const orders = props.orders\r\n    const tableDefaultTest = ({ filterText, onFilter, onClear }) => (\r\n        <>\r\n          <input id=\"search\" type=\"text\" className=\"form-control\" placeholder=\"Filter By Name\" aria-label=\"Search Input\" value={filterText} onChange={onFilter} />\r\n          <Button variant=\"dark\" type=\"button\" onClick={onClear}>X</Button>\r\n        </>\r\n      )\r\n\r\n\r\n      const testeClick = (ev)=>{\r\n        console.log(ev.target)\r\n      }\r\n\r\n      const columns = [\r\n        {\r\n          name: 'ID',\r\n          selector: 'idsale',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Código da Venda',\r\n          selector: 'codesale',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Data da Venda',\r\n          selector: 'datesale',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Cliente',\r\n          selector: 'clientname',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Forma de Pagamento',\r\n          selector: 'formapagamento',\r\n          sortable: true,\r\n          cell: row => <div data-tag=\"allowRowEvents\"><div style={{ }}>{row.formapagamento.toUpperCase()}</div></div>,\r\n        },\r\n        {\r\n          name: 'Vendedor',\r\n          selector: 'nomevendedor',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Comissão',\r\n          selector: 'porcent_comissao_vendedor',\r\n          sortable: true,\r\n          cell: row => <div data-tag=\"allowRowEvents\"><div style={{ }}>{row.porcent_comissao_vendedor + \"%\"}</div></div>,\r\n        },\r\n        {\r\n          name: 'Cupom da Venda',\r\n          selector: 'cupomname',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'SubTotal',\r\n          selector: 'subtotalvalue',\r\n          sortable: true,\r\n          cell: row => <div data-tag=\"allowRowEvents\"><div style={{ }}>{row.subtotalvalue.toLocaleString('pt-br' , {minimumFractionDigits : 2})}</div></div>,\r\n        },\r\n        {\r\n          name: 'Desconto por Cupom',\r\n          selector: 'porcent_desconto',\r\n          sortable: true,\r\n          cell: row => <div data-tag=\"allowRowEvents\"><div style={{ }}>{row.porcent_desconto + \"%\"}</div></div>,\r\n        },\r\n        {\r\n          name: 'Total',\r\n          selector: 'totalvalue',\r\n          sortable: true,\r\n          cell: row => <div data-tag=\"allowRowEvents\"><div style={{ }}>{row.totalvalue.toLocaleString('pt-br' , {minimumFractionDigits : 2})}</div></div>,\r\n        },\r\n        {\r\n          cell: (row) => <Button variant=\"primary\" id={row.codesale} onClick={handleAction}>Detalhes</Button>,\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n          button: true,\r\n        },\r\n\r\n      ];\r\n    const [thing, setThing] = React.useState()\r\n    const handleAction = value => {\r\n\r\n      if(value.target.id !== \"\"){\r\n          window.location.href = \"/controlpainel/admin/listarPedidos/details/sale/\" + value.target.id\r\n      }\r\n\r\n    }\r\n    const [filterText, setFilterText] = React.useState('');\r\n    const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n    const filteredItems = orders ? orders.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase())) : []\r\n  \r\n    const subHeaderComponentMemo = React.useMemo(() => {\r\n      const handleClear = () => {\r\n        if (filterText) {\r\n          setResetPaginationToggle(!resetPaginationToggle);\r\n          setFilterText('');\r\n        }\r\n      };\r\n  \r\n      return (<tableDefaultTest onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />)\r\n    }, [filterText, resetPaginationToggle]);\r\n  \r\n    return (\r\n      <DataTable\r\n        title=\"Lista de Vendas Realizadas\"\r\n        columns={columns}\r\n        data={orders}\r\n        pagination\r\n        paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n        subHeader\r\n        subHeaderComponent={subHeaderComponentMemo}\r\n        selectableRows\r\n        persistTableHead\r\n      />\r\n    );\r\n  };","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\ducks\\categories\\index.js",[],["352","353"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\services\\serviceCep.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Home.js",["354","355","356"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\CadastrarProdutos.js",["357"],"import {React , Component} from \"react\";\r\nimport {Form,Button} from \"react-bootstrap\"\r\nimport \"./Products.css\"\r\nimport sizeclothes from  \"../../../Controller/SizeClothesController\"\r\nimport category from  \"../../../Controller/CategoryController\"\r\nimport provider from  \"../../../Controller/ProviderController\"\r\nimport product from  \"../../../Controller/ProductController\"\r\nimport Swal from \"sweetalert2\";\r\nimport noImagePng from \"../../../images/no-photo.png\"\r\n\r\nconst Category = new category()\r\nconst SizeClothes = new sizeclothes()\r\nconst Provider = new provider()\r\nconst Product = new product()\r\n\r\n\r\nexport default class CadastrarProdutos extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            newProduct: {\r\n                name : \"\",\r\n                description : \"\",\r\n                reference : \"\",\r\n                color : \"\",\r\n                idsizeclothes : 0,\r\n                idcategory : 0,\r\n                buyvalue : 0,\r\n                sellvalue : 0,\r\n                idprovider : 0,\r\n                ecommerceHome : 'false',\r\n                active : 'false',\r\n                quantity : 0\r\n            },\r\n            images : {\r\n                image1 : noImagePng,\r\n                image2 : noImagePng,\r\n                image3 : noImagePng,\r\n                image4 : noImagePng,\r\n                image5 : noImagePng,\r\n            },\r\n            providers : [],\r\n            sizeclothes : [],\r\n            categories : []\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleImageChange = this.handleImageChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        SizeClothes.listAllSizeClothes().then(res => {this.setState({sizeclothes : res})})\r\n        Category.listAllCategories().then(res => {this.setState({categories : res})})\r\n        Provider.listAllProviders().then(res => {this.setState({providers : res})})\r\n    }\r\n\r\n\r\n\r\n    handleImageChange(event) {\r\n\r\n        let subiu = 0;\r\n\r\n        let timerInterval;\r\n            Swal.fire({\r\n            title: 'Carregando Imagem ...',\r\n            timer: 12000,\r\n            timerProgressBar: true,\r\n            didOpen: () => {\r\n\r\n                Swal.showLoading()\r\n                   Product.PostProductImage(event.target.files[0])\r\n                   .then(data => {\r\n                        console.log(data.data)\r\n                        if(event.target.id === \"fotoProdutoCapa\")\r\n                        {\r\n                            if(data.data.error)\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image1 = noImagePng\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Erro\",\r\n                                    icon : \"error\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<p>Erro de Upload Tente Novamente mais tarde</p>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n                            else\r\n                            {\r\n                                Swal.close();\r\n                                const Toast = Swal.mixin({\r\n                                    toast: true,\r\n                                    position: 'top-end',\r\n                                    showConfirmButton: false,\r\n                                    timer: 500,\r\n                                    timerProgressBar: true,\r\n                                    didOpen: (toast) => {\r\n                                      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                                      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                                    },\r\n                                    didClose : ()=>{\r\n                                      \r\n                                        let state = this.state\r\n                                        state.images.image1 = data.data.url\r\n                                        this.setState(state)\r\n                                    }\r\n                                  })\r\n                                  Toast.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Upload Realizado com Sucesso ! '\r\n                                  })\r\n                            }\r\n                        }\r\n                        else if(event.target.id === \"fotoProduto2\")\r\n                        {\r\n                            if(data.data.error)\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image2 = noImagePng\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Erro\",\r\n                                    icon : \"error\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<p>Erro de Upload Tente Novamente mais tarde</p>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n                            else\r\n                            {\r\n                                Swal.close();\r\n                                const Toast = Swal.mixin({\r\n                                    toast: true,\r\n                                    position: 'top-end',\r\n                                    showConfirmButton: false,\r\n                                    timer: 500,\r\n                                    timerProgressBar: true,\r\n                                    didOpen: (toast) => {\r\n                                      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                                      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                                    },\r\n                                    didClose : ()=>{\r\n                                        let state = this.state\r\n                                        state.images.image2 = data.data.url\r\n                                        this.setState(state)\r\n                                    }\r\n                                  })\r\n                                  Toast.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Upload Realizado com Sucesso ! '\r\n                                  })\r\n                            }\r\n                        }\r\n                        else if(event.target.id === \"fotoProduto3\")\r\n                        {\r\n                            if(data.data.error)\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image3 = noImagePng\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Erro\",\r\n                                    icon : \"error\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<p>Erro de Upload Tente Novamente mais tarde</p>\",\r\n                                    timer : 500\r\n                                })\r\n                            }\r\n                            else\r\n                            {\r\n                                Swal.close();\r\n                                const Toast = Swal.mixin({\r\n                                    toast: true,\r\n                                    position: 'top-end',\r\n                                    showConfirmButton: false,\r\n                                    timer: 500,\r\n                                    timerProgressBar: true,\r\n                                    didOpen: (toast) => {\r\n                                      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                                      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                                    },\r\n                                    didClose : ()=>{\r\n                                        let state = this.state\r\n                                        state.images.image3 = data.data.url\r\n                                        this.setState(state)\r\n                                    }\r\n                                  })\r\n                                  Toast.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Upload Realizado com Sucesso ! '\r\n                                  })\r\n                            }\r\n                        }\r\n                        else if(event.target.id === \"fotoProduto4\")\r\n                        {\r\n                            if(data.data.error)\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image4 = noImagePng\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Erro\",\r\n                                    icon : \"error\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<p>Erro de Upload Tente Novamente mais tarde</p>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n                            else\r\n                            {\r\n                                Swal.close()\r\n                                const Toast = Swal.mixin({\r\n                                    toast: true,\r\n                                    position: 'top-end',\r\n                                    showConfirmButton: false,\r\n                                    timer: 500,\r\n                                    timerProgressBar: true,\r\n                                    didOpen: (toast) => {\r\n                                      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                                      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                                    },\r\n                                    didClose : ()=>{\r\n                                        let state = this.state\r\n                                        state.images.image4 = data.data.url\r\n                                        this.setState(state)\r\n                                    }\r\n                                  })\r\n                                  Toast.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Upload Realizado com Sucesso ! '\r\n                                  })\r\n                                \r\n                            }\r\n                        }\r\n                        else if(event.target.id === \"fotoProduto5\")\r\n                        {\r\n                            if(data.data.error)\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image5 = noImagePng\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Erro\",\r\n                                    icon : \"error\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<p>Erro de Upload Tente Novamente mais tarde</p>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n                            else\r\n                            {\r\n                                Swal.close()\r\n                                const Toast = Swal.mixin({\r\n                                    toast: true,\r\n                                    position: 'top-end',\r\n                                    showConfirmButton: false,\r\n                                    timer: 500,\r\n                                    timerProgressBar: true,\r\n                                    didOpen: (toast) => {\r\n                                      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                                      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                                    },\r\n                                    didClose : ()=>{\r\n                                        let state = this.state\r\n                                        state.images.image5 = data.data.url\r\n                                        this.setState(state)\r\n                                    }\r\n                                  })\r\n                                  Toast.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Upload Realizado com Sucesso ! '\r\n                                  })\r\n                            }\r\n\r\n                        }\r\n                   })\r\n                   .catch(err=>{\r\n                       alert(err)\r\n                   })\r\n            },\r\n            willClose: () => {\r\n                clearInterval(timerInterval)\r\n            }\r\n            })\r\n\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n\r\n        let products = this.state.newProduct\r\n\r\n        if(event.target.id === \"formGroupnameProduct\"){products.name = event.target.value}\r\n        if(event.target.id === \"formGroupDescriptionProduct\"){products.description = event.target.value}\r\n        if(event.target.id === \"formGroupReference\"){products.reference = event.target.value}\r\n        if(event.target.id === \"formColorProduct\"){products.color = event.target.value}\r\n        if(event.target.id === \"formSizeProduct\"){products.idsizeclothes = event.target.value}\r\n        if(event.target.id === \"formCategoryProduct\"){products.idcategory = event.target.value}\r\n        if(event.target.id === \"formGroupBuyValue\"){products.buyvalue = event.target.value}\r\n        if(event.target.id === \"formGroupSellValue\"){products.sellvalue = event.target.value}\r\n        if(event.target.id === \"formProviderProduct\"){products.idprovider = event.target.value}\r\n        if(event.target.id === \"formGroupQuantityValue\"){products.quantity = event.target.value}\r\n        if(event.target.id === \"formGroupActiveProduct\"){products.active = event.target.value}\r\n        if(event.target.id === \"formGroupHighProduct\"){products.ecommerceHome = event.target.value}\r\n\r\n        this.setState({newProduct : products})\r\n      }\r\n\r\n    handleSubmit(event) {\r\n    \r\n\r\n        if(this.verifyForm())\r\n        {\r\n            Product.RegisterNewProduct(this.state.newProduct , this.state.images)\r\n            .then(res => {\r\n                if(res.success)\r\n                {\r\n\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: 'top-center',\r\n                        showConfirmButton: false,\r\n                        timer: 500,\r\n                        timerProgressBar: true,\r\n                        didOpen: (toast) => {\r\n                          toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                          toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                        },\r\n                        didClose : ()=>{\r\n                            window.location.href = \"/controlpainel/admin/listarProdutos\"\r\n                        }\r\n                      })\r\n                      Toast.fire({\r\n                        icon: 'success',\r\n                        title: 'Produto Cadastrado com Sucesso! Redirecionando...'\r\n                      })\r\n                }\r\n            })\r\n        }\r\n        event.preventDefault();\r\n      }\r\n\r\n\r\n      verifyForm = ()=>\r\n      {\r\n          const {newProduct , images} = this.state;\r\n\r\n        if(newProduct.name === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Nome\" , icon : \"error\"})\r\n        else if(newProduct.description === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Descrição\" , icon : \"error\"})\r\n        else if(this.state.newProduct.reference === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Referencia\" , icon : \"error\"})\r\n        else if(newProduct.color === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Cor\" , icon : \"error\"})\r\n        else if(newProduct.idsizeclothes === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Tamanho\" , icon : \"error\"})\r\n        else if(newProduct.idcategory === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Categoria\" , icon : \"error\"})\r\n        else if(newProduct.buyvalue === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Preço de Compra\" , icon : \"error\"})\r\n        else if(newProduct.sellvalue === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Preço de Venda\" , icon : \"error\"})\r\n        else if(newProduct.idprovider === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Fornecedor\" , icon : \"error\"})\r\n        else if(newProduct.quantity === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Quantidade\" , icon : \"error\"})\r\n        else if(newProduct.ecommerceHome === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Produto em Alta ?\" , icon : \"error\"})\r\n        else if(newProduct.active === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Produto Ativo ?\" , icon : \"error\"})\r\n        else if(images.image1 === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Selecione a Imagem de Capa\" , icon : \"error\"})\r\n        else if(images.image2 === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Selecione a Imagem 2\" , icon : \"error\"})\r\n        else if(images.image3 === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Selecione a Imagem 3\" , icon : \"error\"})\r\n        else if(images.image4 === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Selecione a Imagem 4\" , icon : \"error\"})\r\n        else if(images.image5 === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Selecione a Imagem 5\" , icon : \"error\"})\r\n        else{return true}\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row col-md-12 caixadeBotoes\">\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Button size=\"md\" className=\"btn btn-danger\">Cancelar X</Button>\r\n                            <Button type=\"submit\" size=\"md\" className=\"btn btn-success\">Cadastrar ✓</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupnameProduct\">\r\n                                <Form.Label>Nome do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.name} onChange={this.handleChange} type=\"text\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupDescriptionProduct\">\r\n                                <Form.Label>Descrição do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.description} onChange={this.handleChange} type=\"text\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupReference\">\r\n                                <Form.Label>Referencia do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.reference} onChange={this.handleChange} type=\"text\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group className=\"alignCenter\" controlId=\"formColorProduct\">\r\n                                <Form.Label>Cor do Produto</Form.Label>\r\n                                <Form.Control  value={this.state.newProduct.color} onChange={this.handleChange} as=\"select\" defaultValue=\"Choose...\">\r\n                                    <option>Selecione a Cor Do Produto</option>\r\n                                    <option>Preto</option>\r\n                                    <option>Branco</option>\r\n                                    <option>Bege</option>\r\n                                    <option>Sem Cores</option>\r\n                                    <option>Amarelo</option>\r\n                                    <option>Azul</option>\r\n                                    <option>Roxo</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3\">\r\n                                <Form.Group className=\"alignCenter\" controlId=\"formSizeProduct\">\r\n                                    <Form.Label>Tamanho do Produto/Peça</Form.Label>\r\n                                    <Form.Control value={this.state.newProduct.idsizeclothes} onChange={this.handleChange}  as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Selecione o Tamanho da Peça</option>\r\n                                        {\r\n                                        this.state.sizeclothes.map((index)=>{\r\n                                            return (\r\n                                            <option key={index.idsizeclothes} value={index.idsizeclothes}>{index.idsizeclothes}-{index.description}</option>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                                <Form.Group className=\"alignCenter\" controlId=\"formCategoryProduct\">\r\n                                    <Form.Label>Categoria do Produto</Form.Label>\r\n                                    <Form.Control value={this.state.newProduct.idcategory} onChange={this.handleChange}  as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Selecione a Categoria do Produto/Peça</option>\r\n                                        {\r\n                                            this.state.categories.map(index => {\r\n                                                return(\r\n                                                <option key={index.idcategory} value={index.idcategory}>{index.idcategory} - {index.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupBuyValue\">\r\n                                <Form.Label>Preço de COMPRA do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.buyvalue} onChange={this.handleChange} type=\"number\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupSellValue\">\r\n                                <Form.Label>Preço de VENDA do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.sellvalue} onChange={this.handleChange} type=\"number\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3\">\r\n                                <Form.Group className=\"alignCenter\" controlId=\"formProviderProduct\">\r\n                                    <Form.Label>Fornecedor</Form.Label>\r\n                                    <Form.Control value={this.state.newProduct.idprovider} onChange={this.handleChange}  as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Selecione o Fornecedor do produto/peça</option>\r\n                                        {\r\n                                            this.state.providers.map(index => {\r\n                                                return (\r\n                                                    <option key={index.idprovider} value={index.idprovider}>{index.idprovider} - {index.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupQuantityValue\">\r\n                                <Form.Label>Quantidade</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.quantity} onChange={this.handleChange} type=\"number\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupActiveProduct\">\r\n                                <Form.Label>Produto Ativo?</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.active} onChange={this.handleChange} as=\"select\" custom>\r\n                                    <option value=\"true\" >Sim</option>\r\n                                    <option value=\"false\">Não</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupHighProduct\">\r\n                                <Form.Label>Produto em Alta ?</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.ecommerceHome} onChange={this.handleChange} as=\"select\" custom>\r\n                                    <option value=\"true\" >Sim</option>\r\n                                    <option value=\"false\">Não</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\" style={{padding : \"20px\" , border : \"solid 1px lightgray\" , borderRadius : \"5px\" , display:\"flex\" , justifyContent:\"space-between\"}}>\r\n                        <div className=\"multiple_upload\">\r\n                            <input type=\"file\" name=\"fotoProdutoCapa\" onChange={this.handleImageChange} id=\"fotoProdutoCapa\"  className=\"uploadChange\" />\r\n                            <div className=\"message\"><span for=\"fotoProdutoCapa\">Selecionar Foto da Capa</span></div>\r\n                            <input type=\"button\" className=\"botao\" value=\"Upload\" />\r\n                            <div className=\"lista\">\r\n                                <img src={this.state.images.image1} alt=\"ImagemProduto1\" width=\"290px\" height=\"250px\"></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple_upload\">\r\n                            <input type=\"file\" onChange={this.handleImageChange} id=\"fotoProduto2\"  className=\"uploadChange\" />\r\n                            <div className=\"message\"><span>Selecionar Foto 2</span></div>\r\n                            <input type=\"button\" className=\"botao\" value=\"Upload\" />\r\n                            <div className=\"lista\">\r\n                                <img src={this.state.images.image2} alt=\"ImagemProduto2\" width=\"290px\" height=\"250px\"></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple_upload\">\r\n                            <input type=\"file\" onChange={this.handleImageChange} id=\"fotoProduto3\"  className=\"uploadChange\" />\r\n                            <div className=\"message\"><span>Selecionar Foto 3</span></div>\r\n                            <input type=\"button\" className=\"botao\" value=\"Upload\" />\r\n                            <div className=\"lista\">\r\n                                <img src={this.state.images.image3} alt=\"ImagemProduto3\" width=\"290px\" height=\"250px\"></img>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\" style={{padding : \"20px\" , border : \"solid 1px lightgray\" , borderRadius : \"5px\" , display:\"flex\" , justifyContent:\"center\"}}>\r\n                        <div className=\"multiple_upload\">\r\n                            <input type=\"file\" onChange={this.handleImageChange} id=\"fotoProduto4\"  className=\"uploadChange\" />\r\n                            <div className=\"message\"><span>Selecionar Foto 4</span></div>\r\n                            <input type=\"button\" className=\"botao\" value=\"Upload\" />\r\n                            <div className=\"lista\">\r\n                                <img src={this.state.images.image4} alt=\"ImagemProduto4\" width=\"290px\" height=\"250px\"></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple_upload\">\r\n                            <input type=\"file\" onChange={this.handleImageChange} id=\"fotoProduto5\"  className=\"uploadChange\" />\r\n                            <div className=\"message\"><span>Selecionar Foto 5</span></div>\r\n                            <input type=\"button\" className=\"botao\" value=\"Upload\" />\r\n                            <div className=\"lista\">\r\n                                <img src={this.state.images.image5} alt=\"ImagemProduto5\" width=\"290px\" height=\"250px\"></img>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutosViaNota.js",["358","359","360","361"],"import React from 'react'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport \"./Products.css\"\r\nimport product from \"../../../Controller/ProductController\"\r\nimport sizeclothes from \"../../../Controller/SizeClothesController\"\r\nimport provider from \"../../../Controller/ProviderController\"\r\nimport category from \"../../../Controller/CategoryController\"\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst SizeClothes = new sizeclothes()\r\nconst Provider = new provider()\r\nconst Category = new category()\r\n\r\nlet Tamanhos = '<option value=\"default\" >Selecione</option>'\r\nlet Fornecedores = '<option value=\"default\" >Selecione</option>'\r\nlet Categorias = '<option value=\"default\" >Selecione</option>'\r\nvar tr = ''\r\nexport default class EntradaDeProdutosViaNota extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            params : {\r\n                numeroDaNota : this.props.match.params.numeroNota,\r\n                quantidadeDeProdutos : this.props.match.params.quantidadeProdutos,\r\n                fornecedor : this.props.match.params.fornecedor,\r\n            },\r\n            fornecedores : [],\r\n            categorias : [],\r\n            tamanho : []\r\n        }\r\n        this.handleSend = this.handleSend.bind(this)\r\n        this.verifyFieldsForLaunch = this.verifyFieldsForLaunch.bind(this)\r\n    }\r\n\r\n\r\n    handleSend(event)\r\n    {\r\n        if(this.verifyFieldsForLaunch())\r\n        {\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    verifyFieldsForLaunch()\r\n    {\r\n       var quantidadeProdutos = this.state.params.quantidadeDeProdutos\r\n\r\n       for(var i = 0 ; i <= quantidadeProdutos ; i++)\r\n       {\r\n           if(i>0)\r\n           {\r\n                if(document.getElementById('nomeProduto'+i).value === \"\"){return Swal.fire({title:\"ERRO\" , text: \"Preencha o Nome do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('descricaoProduto'+i).value === \"\"){return  Swal.fire({title:\"ERRO\" , text: \"Preencha o Descrição do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('referencia'+i).value === \"\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha a Referência do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('sizeClothes'+i).value === \"\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha o Tamanho do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('corProduto'+i).value === \"\" || document.getElementById('corProduto'+i).value === \"default\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha a Cor do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('category'+i).value === \"\" || document.getElementById('category'+i).value === \"defeault\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha a Categoria do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('precoCompra'+i).value === \"\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha o Preço de Compra do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('precoVenda'+i).value === \"\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha o Preço de Venda do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('forncedor'+i).value === \"\" || document.getElementById('forncedor'+i).value === \"defeault\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha o Fornecedor do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('quantidade'+i).value === \"\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha a Quantidade do Produto\" + i , icon : \"error\"})}\r\n                else{return true}\r\n            }\r\n       }\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n\r\n        await Provider.listAllProviders().then(res => {\r\n            this.setState({fornecedores : res})\r\n\r\n            res.map(index => {\r\n                Fornecedores += \"<option value=\"+index.idprovider+\">\"+index.idprovider+\" - \"+index.name+\"</option>\"\r\n            })\r\n        })\r\n        SizeClothes.listAllSizeClothes().then(res => {\r\n            this.setState({tamanho : res})\r\n\r\n            res.map(index => {\r\n                Tamanhos += \"<option value=\"+index.idsizeclothes+\">\"+index.size+\"</option>\"\r\n            })\r\n        })\r\n        await Category.listAllCategories().then(res => {\r\n            this.setState({categorias : res})\r\n            res.map(index => {\r\n                Categorias += \"<option value=\"+index.idcategory+\">\"+index.idcategory+\" - \"+index.name+\"</option>\"\r\n            })\r\n\r\n\r\n        })\r\n\r\n        await this.montagemDaTabela(Fornecedores , Tamanhos , Categorias)\r\n\r\n    }\r\n\r\n\r\n    async montagemDaTabela(Fornecedores , Tamanhos , Categorias) {\r\n        if(this.state.params.quantidadeDeProdutos > 0)\r\n        {\r\n            for(var i = 0 ; i <= this.state.params.quantidadeDeProdutos ; i++)\r\n            {\r\n                if(i > 0)\r\n                {\r\n                    var tr = \"<tr key='linhaProduto\"+i+\"' id='linhaProduto\"+i+\"'>\" +\r\n                    \"<td><input type='text' className='form-control' id='nomeProduto\"+i+\"'/></td>\"+\r\n                    \"<td><input type='text' className='form-control' id='descricaoProduto\"+i+\"'/></td>\"+\r\n                    \"<td><input type='text' className='form-control' id='referencia\"+i+\"'/></td>\"+\r\n                    \"<td><select className='form-control' id='corProduto\"+i+\"'>\"+\r\n                            \"<option value='default'>Selecione</option>\"+\r\n                            \"<option>Preto</option>\"+\r\n                            \"<option>Branco</option>\"+\r\n                            \"<option>Bege</option>\"+\r\n                            \"<option>Sem Cores</option>\"+\r\n                            \"<option>Amarelo</option>\"+\r\n                            \"<option>Azul</option>\"+\r\n                            \"<option>Roxo</option>\"+\r\n                    \"</select></td>\"+\r\n                    \"<td><select className='form-control' id='sizeClothes\"+i+\"'>\"+\r\n                        Tamanhos +\r\n                    \"</select></td>\"+\r\n                    \"<td><select className='form-control' id='category\"+i+\"'>\"+\r\n                        Categorias +\r\n                    \"</select></td>\"+\r\n                    \"<td><input type='number' className='form-control' id='precoCompra\"+i+\"'/></td>\"+\r\n                    \"<td><input type='number' className='form-control' id='precoVenda\"+i+\"'/></td>\"+\r\n                    \"<td><select type='text' className='form-control' id='forncedor\"+i+\"'>\"+\r\n                    Fornecedores + \r\n                    \"</select></td>\"+\r\n                    \"<td><input type='number' className='form-control' id='quantidade\"+i+\"'/></td>\"+\r\n                \"</tr>\"\r\n                    document.getElementById('corpoLancamentos').innerHTML += tr\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"containerParametros\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\"></div>\r\n                        <div className=\"col-md-4\">\r\n                            <h2>\r\n                                Informações da Nota\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\"></div>\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-md-4\">\r\n                            <label>Numero da Nota</label>\r\n                            <input className=\"form-control\" readOnly={true} value={this.state.params.numeroDaNota} />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <label>Quantidade de Produtos da Nota</label>\r\n                            <input className=\"form-control\" readOnly={true} value={this.state.params.quantidadeDeProdutos} />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <label>Fornecedor da Nota</label>\r\n                            <input className=\"form-control\" readOnly={true} value={this.state.params.fornecedor} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"tabelaDeLançamentos\">\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-md-4\"></div>\r\n                        <div className=\"col-md-4\">\r\n                            <h2>\r\n                                Lançamentos\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\"></div>\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <Table bordered hover size=\"sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Nome</th>\r\n                                    <th>Descrição</th>\r\n                                    <th>Referencia</th>\r\n                                    <th className=\"colunasSelectEntradaViaNota\">Cor</th>\r\n                                    <th className=\"colunasSelectEntradaViaNota\">Tamanho</th>\r\n                                    <th className=\"colunasSelectEntradaViaNota\">Categoria</th>\r\n                                    <th>Preço de Compra</th>\r\n                                    <th>Preço de Venda</th>\r\n                                    <th className=\"colunasSelectEntradaViaNota\">Fornecedor</th>\r\n                                    <th>Quantidade</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"corpoLancamentos\">\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-md-6\">\r\n                            <Button onClick={this.handleSend}  variant=\"outline-success\">Lançar ✓</Button>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Button variant=\"outline-danger\">Cancelar X </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\category\\AddCategory.js",[],["362","363"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\EcommercePage\\Promocoes\\Promocoes.js",["364","365"],"import {  MDBRow, MDBCol, MDBCard, MDBCardImage, MDBCardBody, MDBBadge } from \"mdbreact\";\r\nimport \"./Promocoes.css\"\r\n\r\nexport default()=>{\r\n\r\n    return(\r\n        <MDBRow style={{marginBottom: \"2%\",backgroundColor: \"white\", padding:\"20px\"}} className=\"text-center my-5 w-5 shadow-box-example z-depth-1\">\r\n\r\n                <MDBCol lg=\"12\" md=\"12\" className=\"text-left\" > \r\n                    <h4 style={{backgroundColor:\"#eceff1\" , padding : \"10px\" , borderRadius : \"10px\"}}>\r\n                        Promoções\r\n                    </h4>\r\n                </MDBCol>\r\n                <MDBCol style={{height : \"260px\"}} lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-4\">\r\n                <MDBCard style={{height : \"260px\"}} className=\"align-items-center\">\r\n                    <MDBCardImage\r\n                    src=\"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/12.jpg\"\r\n                    top\r\n                    alt=\"sample photo\"\r\n                    overlay=\"white-slight\"\r\n                    style={{height : \"auto\" , width:\"auto\" , maxHeight: \"100px\" , maxWidth : \"100px\" , marginRight : \"auto\" , marginLeft : \"auto\" ,marginTop : \"10%\"}}\r\n                    />\r\n                    <MDBCardBody className=\"text-center\">\r\n                    <a href=\"#!\" className=\"grey-text\">\r\n                        <h5>Shirt</h5>\r\n                    </a>\r\n                    <h5>\r\n                        <strong>\r\n                        <a href=\"#!\" className=\"dark-grey-text\">\r\n                            Denim shirt{\" \"}\r\n                        </a>\r\n                        </strong>\r\n                    </h5>\r\n                    <h4 className=\"font-weight-bold blue-text\">\r\n                        <strong>120$</strong>\r\n                    </h4>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n                </MDBCol>\r\n                <MDBCol style={{height : \"260px\"}} lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-4\">\r\n                <MDBCard style={{height : \"260px\"}} className=\"align-items-center\">\r\n                    <MDBCardImage\r\n                    src=\"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/12.jpg\"\r\n                    top\r\n                    alt=\"sample photo\"\r\n                    overlay=\"white-slight\"\r\n                    style={{height : \"auto\" , width:\"auto\" , maxHeight: \"100px\" , maxWidth : \"100px\" , marginRight : \"auto\" , marginLeft : \"auto\" ,marginTop : \"10%\"}}\r\n                    />\r\n                    <MDBCardBody className=\"text-center\">\r\n                    <a href=\"#!\" className=\"grey-text\">\r\n                        <h5>Shirt</h5>\r\n                    </a>\r\n                    <h5>\r\n                        <strong>\r\n                        <a href=\"#!\" className=\"dark-grey-text\">\r\n                            Denim shirt{\" \"}\r\n                        </a>\r\n                        </strong>\r\n                    </h5>\r\n                    <h4 className=\"font-weight-bold blue-text\">\r\n                        <strong>120$</strong>\r\n                    </h4>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n                </MDBCol>\r\n                <MDBCol style={{height : \"260px\"}} lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-4\">\r\n                <MDBCard style={{height : \"260px\"}} className=\"align-items-center\">\r\n                    <MDBCardImage\r\n                    src=\"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/12.jpg\"\r\n                    top\r\n                    alt=\"sample photo\"\r\n                    overlay=\"white-slight\"\r\n                    style={{height : \"auto\" , width:\"auto\" , maxHeight: \"100px\" , maxWidth : \"100px\" , marginRight : \"auto\" , marginLeft : \"auto\" ,marginTop : \"10%\"}}\r\n                    />\r\n                    <MDBCardBody className=\"text-center\">\r\n                    <a href=\"#!\" className=\"grey-text\">\r\n                        <h5>Shirt</h5>\r\n                    </a>\r\n                    <h5>\r\n                        <strong>\r\n                        <a href=\"#!\" className=\"dark-grey-text\">\r\n                            Denim shirt{\" \"}\r\n                        </a>\r\n                        </strong>\r\n                    </h5>\r\n                    <h4 className=\"font-weight-bold blue-text\">\r\n                        <strong>120$</strong>\r\n                    </h4>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n                </MDBCol>\r\n                <MDBCol style={{height : \"260px\"}} lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-4\">\r\n                <MDBCard style={{height : \"260px\"}} className=\"align-items-center\">\r\n                    <MDBCardImage\r\n                    src=\"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Vertical/12.jpg\"\r\n                    top\r\n                    alt=\"sample photo\"\r\n                    overlay=\"white-slight\"\r\n                    style={{height : \"auto\" , width:\"auto\" , maxHeight: \"100px\" , maxWidth : \"100px\" , marginRight : \"auto\" , marginLeft : \"auto\" ,marginTop : \"10%\"}}\r\n                    />\r\n                    <MDBCardBody className=\"text-center\">\r\n                    <a href=\"#!\" className=\"grey-text\">\r\n                        <h5>Shirt</h5>\r\n                    </a>\r\n                    <h5>\r\n                        <strong>\r\n                        <a href=\"#!\" className=\"dark-grey-text\">\r\n                            Denim shirt{\" \"}\r\n                        </a>\r\n                        </strong>\r\n                    </h5>\r\n                    <h4 className=\"font-weight-bold blue-text\">\r\n                        <strong>120$</strong>\r\n                    </h4>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n                </MDBCol>\r\n                \r\n            </MDBRow>\r\n    )\r\n\r\n}\r\n\r\n\r\n","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\NavBar\\NavBar.js",["366","367","368","369"],"import React from 'react';\r\nimport { MDBNavbar,MDBBtn , MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler,MDBBadge, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon,MDBDropdown, MDBDropdownToggle,MDBDropdownMenu,MDBDropdownItem, MDBContainer } from 'mdbreact';\r\nimport \"./navbar.css\"\r\nimport {Link , BrowserRouter as Router , Route} from 'react-router-dom';\r\nimport {ShowModal} from '../../Modals/index.jsx'\r\nimport ModalPage from '../../Modals/TesteModal'\r\n\r\n\r\n\r\nclass NonFixedNavbarExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleShowShoppingCart = this.handleShowShoppingCart.bind(this);\r\n    this.closeModalShoppingCart = this.closeModalShoppingCart.bind(this);\r\n    this.handleLoginModal = this.handleLoginModal.bind(this);\r\n    this.closeModalLogin = this.closeModalLogin.bind(this);\r\n\r\n\r\n    this.state = {\r\n      collapse: false,\r\n      authenticated : this.props.authenticated,\r\n      user : this.props.user,\r\n      showShoppingCart : false,\r\n      showLoginModal : false,\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({\r\n      collapse: !this.state.collapse,\r\n    });\r\n  }\r\n\r\n\r\n  handleShowShoppingCart()\r\n  {\r\n    this.setState({showShoppingCart : this.state.showShoppingCart ? false : true})\r\n  }\r\n  handleLoginModal()\r\n  {\r\n    console.log(this.state)\r\n    this.setState({showLoginModal : this.state.showLoginModal ? false : true})\r\n  }\r\n  closeModalShoppingCart()\r\n  {\r\n    this.setState({showShoppingCart : false})\r\n  }\r\n  closeModalLogin()\r\n  {\r\n    this.setState({showLoginModal : false})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div>\r\n          <header>\r\n            <MDBNavbar color=\"elegant-color-dark dark lighten-5\" fixed=\"top\" expand=\"md\">\r\n                <MDBNavbarBrand className=\"botaoNavBarTitle\"> \r\n                  <Link className=\"Link\" to=\"/\">\r\n                    <strong>Mrs.Gringa</strong>\r\n                  </Link> \r\n                </MDBNavbarBrand>\r\n              <MDBNavbarToggler onClick={this.onClick} />\r\n              <MDBCollapse isOpen={this.state.collapse} navbar>\r\n                <MDBNavbarNav right>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"/\" className=\"botaoNavBar mr-3 ml-3\">Inicio</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink className=\"botaoNavBar mr-3 ml-3\" to=\"#\">Produtos</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink className=\"botaoNavBar mr-3 ml-3\" to=\"#\">Promoçoes</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink className=\"botaoNavBar mr-3 ml-3\" to=\"#\">Produtos em Alta</MDBNavLink>\r\n                  </MDBNavItem>\r\n                </MDBNavbarNav>\r\n                <MDBNavbarNav right>\r\n                    <MDBNavItem>\r\n\r\n                      {\r\n                        this.state.authenticated ? (\r\n                          <MDBNavItem>\r\n                            <MDBNavLink to=\"/controlpainel/admin/\" className=\"botaoNavBar mr-3 ml-3 mt-2\">Central do Vendedor</MDBNavLink>\r\n                          </MDBNavItem>\r\n                        ) : (\r\n                          <MDBNavItem>\r\n                            <MDBBtn color=\"dark\" onClick={this.handleLoginModal} className=\"mr-3 ml-3 mt-2\">Login</MDBBtn>\r\n                          </MDBNavItem>\r\n                        )\r\n                      }\r\n                      \r\n                    </MDBNavItem>\r\n                    <MDBNavItem>\r\n                    <MDBNavLink onClick={this.handleShowShoppingCart} className=\"waves-effect mt-2 align-items-center\" to=\"#!\">\r\n                        <MDBIcon className=\"botaoNavBar w-20\" icon=\"shopping-cart\" />\r\n                        <MDBBadge color=\"primary\" className=\"ml-2\">9</MDBBadge>\r\n                    </MDBNavLink>\r\n                    </MDBNavItem>\r\n                    {\r\n                      this.state.authenticated ? (\r\n                      <MDBNavItem>\r\n                        <MDBDropdown>\r\n                            <MDBDropdownToggle className=\"dopdown-toggle\" nav>\r\n                            <img src=\"https://mdbootstrap.com/img/Photos/Avatars/avatar-2.jpg\" className=\"rounded-circle z-depth-0\"\r\n                                style={{ height: \"35px\", padding: 0 }} alt=\"\" />\r\n                            </MDBDropdownToggle>\r\n                            <MDBDropdownMenu className=\"dropdown-default\" right>\r\n                            <MDBDropdownItem href=\"#!\">Minha Conta</MDBDropdownItem>\r\n                            <MDBDropdownItem href=\"#!\">Minhas Compras</MDBDropdownItem>\r\n                            <MDBDropdownItem href=\"#!\">Sair</MDBDropdownItem>\r\n                            </MDBDropdownMenu>\r\n                        </MDBDropdown>\r\n                      </MDBNavItem>\r\n                      ) : \"\"\r\n                    }\r\n                </MDBNavbarNav>\r\n              </MDBCollapse>\r\n            </MDBNavbar>\r\n          </header>\r\n          <ShowModal  show={this.state.showShoppingCart} closeModal={this.closeModalShoppingCart} whatModal={\"ShoppingCartModal\"}/>\r\n          <ShowModal  show={this.state.showLoginModal} closeModal={this.closeModalLogin} whatModal={\"loginModal\"}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NonFixedNavbarExample;","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\CategoryController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\SizeClothesController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\fetchActions\\index.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\ducks\\user\\index.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\UsersController.js",["370","371"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\enviroments\\enviroment-homolg.js",["372"],"export default {\r\n    URL : \"http://192.168.1.170:8081\",\r\n    USER : \"admin\",\r\n    PASS :  \"adm\"\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\EcommercePage\\EcommercePage.js",["373"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\SaidaDeProdutos.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\clients\\listClients.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\saleman\\listarVendedores.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\category\\EditCategory.js",["374","375","376","377","378","379","380","381","382"],"import React , {useState , useEffect} from 'react';\r\nimport noFoundPicture from '../../../images/no-photo.png';\r\nimport productcontroller from '../../../Controller/ProductController'\r\nimport {useDispatch} from 'react-redux';\r\nimport {changeViewModal} from '../../../store/ducks/loadingSpinner'\r\nimport categorycontroller from '../../../Controller/CategoryController';\r\nimport {Button , Spinner} from 'react-bootstrap' \r\nimport {FiArrowLeft} from 'react-icons/fi' \r\nimport {MDBTable,MDBTableHead,MDBTableBody} from 'mdbreact'\r\nimport Swal from 'sweetalert2';\r\n\r\nconst ProductsController = new productcontroller();\r\nconst CategoryController = new categorycontroller();\r\n\r\nexport const EditCategory = (props)=>{\r\nconst dispatch = useDispatch()\r\n\r\n\r\n    const [category , setCategory] = useState({\r\n        active: \"\",\r\n        dateregister: \"\",\r\n        description: \"\",\r\n        ecommerceHome: \"\",\r\n        idcategory: 1,\r\n        image1: \"\",\r\n        name: \"\"\r\n    })\r\n\r\n    const [isLoading , setIsLoading] = useState(true)\r\n    const [productsButHaveCategory , setproductsButHaveCategory] = useState([])\r\n\r\n\r\n    useEffect( async ()=>{\r\n\r\n        await CategoryController.ListCategoryForId(props.match.params.idcategory)\r\n        .then(res => setCategory(res[0]))\r\n        .catch(err => alert(err))\r\n        await CategoryController.searchProductsButHaveCategory(props.match.params.idcategory)\r\n        .then(res => {\r\n            setproductsButHaveCategory(res)\r\n            setIsLoading(false)\r\n        })\r\n        .catch(err => alert(err))\r\n    },[])\r\n\r\n\r\n    const handleChange = (event)=>{\r\n        if(event.target.id === \"description\")\r\n        {\r\n            setCategory({\r\n                active: category.active,\r\n                dateregister: category.dateregister,\r\n                description: event.target.value,\r\n                ecommerceHome: category.ecommerceHome,\r\n                idcategory: category.idcategory,\r\n                image1: category.image1,\r\n                name: category.name\r\n            })\r\n        }\r\n        else if(event.target.id === \"name\")\r\n        {\r\n            setCategory({\r\n                active: category.active,\r\n                dateregister: category.dateregister,\r\n                description: category.description,\r\n                ecommerceHome: category.ecommerceHome,\r\n                idcategory: category.idcategory,\r\n                image1: category.image1,\r\n                name: event.target.value\r\n            })\r\n        }\r\n        else if(event.target.id === \"active\")\r\n        {\r\n            setCategory({\r\n                active: event.target.value,\r\n                dateregister: category.dateregister,\r\n                description: category.description,\r\n                ecommerceHome: category.ecommerceHome,\r\n                idcategory: category.idcategory,\r\n                image1: category.image1,\r\n                name: category.name\r\n            })\r\n        }\r\n        else if(event.target.id === \"ecommerceHome\")\r\n        {\r\n            setCategory({\r\n                active: category.active,\r\n                dateregister: category.dateregister,\r\n                description: category.description,\r\n                ecommerceHome: event.target.value,\r\n                idcategory: category.idcategory,\r\n                image1: category.image1,\r\n                name: category.name\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleSubmit = ()=>{\r\n        if(category.active === \"\" || category.active === null || category.active === undefined)\r\n        {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                  toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                  toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                },\r\n                didClose : ()=>{\r\n                }\r\n              })\r\n              Toast.fire({\r\n                icon: 'error',\r\n                title: 'Preencha o Campo \"Categoria Ativa?\"'\r\n              })\r\n              return\r\n        }\r\n        else if(category.description === \"\" || category.description === null || category.description === undefined)\r\n        {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                  toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                  toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                },\r\n                didClose : ()=>{\r\n                }\r\n              })\r\n              Toast.fire({\r\n                icon: 'error',\r\n                title: 'Preencha o Campo \"Descrição\"'\r\n              })\r\n              return\r\n        }\r\n        else if(category.name === \"\" || category.name === null || category.name === undefined)\r\n        {\r\n                const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                  toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                  toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                },\r\n                didClose : ()=>{\r\n                }\r\n              })\r\n              Toast.fire({\r\n                icon: 'error',\r\n                title: 'Preencha o Campo \"Nome\"'\r\n              })\r\n              return\r\n        }\r\n        else if(category.ecommerceHome === \"\" || category.ecommerceHome === null || category.ecommerceHome === undefined)\r\n        {\r\n                        const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                  toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                  toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                },\r\n                didClose : ()=>{\r\n                }\r\n              })\r\n              Toast.fire({\r\n                icon: 'error',\r\n                title: 'Preencha o Campo \"Aparece na Home?\"'\r\n              })\r\n              return\r\n        }\r\n        else if(category.image1 === \"\" || category.image1 === null || category.image1 === undefined)\r\n        {\r\n                const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n                timerProgressBar: true,\r\n                didOpen: (toast) => {\r\n                  toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                  toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                },\r\n                didClose : ()=>{\r\n                }\r\n              })\r\n              Toast.fire({\r\n                icon: 'error',\r\n                title: 'Preencha o Campo \"Imagem da Categoria\"'\r\n              })\r\n              return\r\n        }\r\n        else\r\n        {\r\n            CategoryController.updateCategory({categoryObj : category}).then(res => {\r\n                    if(res.success)\r\n                    {\r\n                        const Toast = Swal.mixin({\r\n                            toast: true,\r\n                            position: 'top-end',\r\n                            showConfirmButton: false,\r\n                            timer: 1500,\r\n                            timerProgressBar: true,\r\n                            didOpen: (toast) => {\r\n                              toast.addEventListener('mouseenter', Swal.stopTimer)\r\n                              toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n                            },\r\n                            didClose : ()=>{\r\n                                window.location.href = \"/controlpainel/admin/listarCategorias\"\r\n                            }\r\n                          })\r\n                          Toast.fire({\r\n                            icon: 'success',\r\n                            title: 'Categoria Editada com Sucesso !'\r\n                          })\r\n                    }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const handleImageChange = (event)=>{\r\n        ProductsController.PostProductImage(event.target.files[0])\r\n        .then(res => {\r\n            setCategory({\r\n                idcategory : category.idcategory,\r\n                name : category.name,\r\n                description : category.description,\r\n                dateregister : category.dateregister,\r\n                active : category.active,\r\n                ecommerceHome : category.ecommerceHome,\r\n                image1 : res.data.url\r\n            })\r\n        })\r\n        .catch(err => alert(err))\r\n    }\r\n    return(\r\n        <div className=\"container-fluid mt-4\">\r\n            <div className=\"row col-md-12 mt-3\">\r\n                <div className=\"col-md-4\"><Spinner style={{display : isLoading ? \"block\" : \"none\" }} animation=\"border\" /></div>\r\n                <div className=\"col-md-4\"></div>\r\n                <div className=\"col-md-4\">\r\n                    <Button onClick={handleSubmit} variant=\"outline-dark\">Salvar ✓</Button>\r\n                    <Button variant=\"outline-dark\"><FiArrowLeft/>  Voltar</Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"row col-md-12 mt-3\">\r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-6\">\r\n                    <h4>Detalhes da Categoria : {category.idcategory} - { category.name}</h4>\r\n                </div>\r\n                <div className=\"col-md-3\"></div>\r\n            </div>\r\n            <div className=\"row col-md-12 mt-4\">\r\n                <div className=\"col-md-1\">\r\n                    <label>ID</label>\r\n                    <input className=\"form-control\" readOnly={true} value={category.idcategory} id=\"idCategoria\" name=\"idCategoria\" />\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <label>Nome da Categoria</label>\r\n                    <input className=\"form-control\" onChange={handleChange} value={category.name} id=\"name\" name=\"nomeCategoria\" />\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <label>Descrição da Categoria</label>\r\n                    <input className=\"form-control\" onChange={handleChange} value={category.description} id=\"description\" name=\"descCategoria\" />\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <label>Data de Registro</label>\r\n                    <input className=\"form-control\" value={new Date(category.dateregister).toLocaleDateString()} readOnly={true} id=\"dataDeRegistro\" name=\"dataDeRegistro\" />\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <label>Categoria Ativa ?</label>\r\n                    <select className=\"form-control\" value={category.active} onChange={handleChange} id=\"active\" name=\"active\">\r\n                        <option value=\"\" >Selecione</option>\r\n                        <option selected={category.active === \"true\" ? \"true\" : \"false\"} value=\"true\" >Sim</option>\r\n                        <option selected={category.active === \"false\" ? \"false\" : \"true\"} value=\"false\" >Não</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <label>Aparece na Home ?</label>\r\n                    <select className=\"form-control\" value={category.ecommerceHome} onChange={handleChange} id=\"ecommerceHome\" name=\"ecommerceHome\">\r\n                        <option value=\"\"  >Selecione</option>\r\n                        <option selected={category.ecommerceHome === \"true\" ? \"true\" : \"false\"} value=\"true\" >Sim</option>\r\n                        <option selected={category.ecommerceHome === \"false\" ? \"false\" : \"true\"} value=\"false\" >Não</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"row col-md-12 mt-3\">\r\n                <div className=\"col-md-3\"></div>\r\n                <div className='col-md-6' style={{alignItens : \"center\",justifyContent : \"center\"  , padding : \"10px\"}} >\r\n                    <label style={{width:\"50%\" , marginLeft : \"auto\" , marginRight : \"auto\"}} className='labelimage' for='imagem5'>Alterar Imagem</label>\r\n                    <input name='imagem5' id='imagem5' style={{display:\"none\"}} onChange={handleImageChange} type='file' />\r\n                    <img  width='200px'  height='200px' src={category.image1}>\r\n                    </img>\r\n                    <input className='hidden' type='hidden' value=\"\" id='image5'/>\r\n                </div>\r\n                <div className=\"col-md-3\"></div>\r\n            </div>\r\n            <div className=\"row col-md-12 mt-4 mb-4\">\r\n                <hr className=\"mt-2 mb-2\" style={{backgroundColor: \"lightgray\" , width : \"100%\"}}/>\r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-6\">\r\n                    <h4>Movimentações com essa Categoria</h4>\r\n                </div>\r\n                <div className=\"col-md-3\"></div>\r\n            </div>\r\n            <div className=\"row col-md-12 mt-4\">\r\n                <div style={{padding : \"10px\" , border : \"1px solid darkslategray\" , borderRadius : \"10px\"}} className=\"col-md-12\">\r\n                        <div className=\"row col-md-12\">\r\n                            <div className=\"col-md-4\"></div>\r\n                            <div className=\"col-md-4\">\r\n                                <h5>Produtos</h5>\r\n                            </div>\r\n                            <div className=\"col-md-4\"></div>\r\n                        </div>\r\n                        <div style={{display : \"flex\"}} className=\"row col-md-12 mt-2\">\r\n                        <table hovered style={{width : \"100%\"}} className=\"table table-responsive-lg\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th>ID</th>\r\n                                <th>Nome</th>\r\n                                <th>Descrição</th>\r\n                                <th>Referência</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {productsButHaveCategory.map(index=>{\r\n                                    return(\r\n                                        <tr>\r\n                                            <td>{index.idproduct}</td>\r\n                                            <td>{index.name}</td>\r\n                                            <td>{index.description}</td>\r\n                                            <td>{index.reference}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProductController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\ducks\\loadingSpinner\\index.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\SalesmanController.js",[],["383","384"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\ViewProduct\\index.js",["385"],"import React from 'react'\r\nimport { GoSearch } from \"react-icons/go\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nexport default ()=>{\r\n\r\n\r\n    return (\r\n        <div className=\"containet-fluid\">\r\n\r\n            <div className=\"row mt-2\">\r\n\r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-6\">\r\n                    <h4>\r\n                        Detalhes do Produto : 1111111\r\n                    </h4>\r\n                </div>\r\n                <div className=\"col-md-3\" style={{padding : \"10px\",border : \"1px solid gray\" , borderRadius:\"10px\"}}>\r\n                    <form>\r\n                        <label>\r\n                            Pesquise o Produto\r\n                        </label>\r\n                        <input className=\"form-control\" placeholder=\"Digite o Nome, Código ou até mesmo a Descrição\" />\r\n                        <Button type=\"submit\" vaiant=\"outline-dark\">\r\n                            <GoSearch/>\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                <form>\r\n                    <div className=\"col-md-3\">\r\n                        <label>KKKKK</label>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\App.js",["386","387"],"import Navbar from \"./components/Navbar\"\nimport {BrowserRouter as Router , Route} from 'react-router-dom'\nimport \"./index.css\"\nimport MultiCarouselPage from \"./components/ecommerce/EcommercePage/EcommercePage\"\nimport Products from \"./components/ecommerce/ViewProduct/index.js\"\nimport {SearchForCategory} from \"./components/ecommerce/ListForCategory/SearchForCategory\"\nimport HighProducts from \"./components/ecommerce/ListHighProducts/ListHighProducts\"\nimport {useSelector} from 'react-redux';\nimport Home from \"./components/principal/Home\"\nimport FinishimSale from './components/ecommerce/Sale/FinishimSale'\n\n\n\n\n\nfunction App() {\n\n  const user = useSelector(state => state.user[0])\n\n\n  return (\n    <Router  basename=\"/\">\n        <div id=\"principalContent\">\n           {/* Div principal de navegação */}\n          <Route exact path=\"/\" component={MultiCarouselPage}></Route>\n          <Route path=\"/products/listproduct/:idproduct\" component={Products}></Route>\n          <Route path=\"/controlpainel\" component={Home}></Route>\n          {/* PesquisaPorCategorias MenuPrincipal */}\n          <Route exact path=\"/listFor/Category/:idcategory/listAll\" component={SearchForCategory}></Route>\n          {/* Pesquisa pelo Carousel de Produtos em Alta */}\n          <Route exact path=\"/listFor/HighProducts/forId/:id\" component={HighProducts}></Route>\n          <Route exact path=\"/sale/finishimSale/\" component={FinishimSale}></Route>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\ListForCategory\\SearchForCategory\\index.js",["388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409"],"import React , {useEffect , useState} from \"react\";\r\nimport productcontroller from '../../../../Controller/ProductController';\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBCard,\r\n    MDBCardImage,\r\n    MDBCardBody,\r\n    MDBCardTitle,\r\n    MDBCardText,\r\n    MDBCardFooter,\r\n    MDBTooltip,\r\n    MDBCarousel,\r\n    MDBCarouselInner,\r\n    MDBCarouselItem,\r\n    MDBIcon,\r\n    MDBBtn,\r\n    MDBContainer,\r\n    MDBTreeview, \r\n    MDBTreeviewItem,\r\n    MDBTreeviewList ,\r\n    MDBInput,\r\n    MDBBtnGroup,\r\n    MDBCloseIcon,\r\n    MDBPagination,\r\n    MDBPageItem,\r\n    MDBPageNav,\r\n  } from 'mdbreact';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Navbar from '../../NavBar/NavBar';\r\nimport \"./Acessorios.css\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {ShowModal} from '../../../Modals/index.jsx'\r\n\r\n\r\n\r\nimport {BiCaretRight , BiCaretLeft} from 'react-icons/bi'\r\nimport { addProductsOnTheCart , updateProductsOnTheCart } from \"../../../../store/ducks/ecommercefunctions/shoppingcart\";\r\n\r\n\r\nexport const SearchForCategory = (props)=>{\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    let productsOnCart = useSelector(store => store.shoppingCart)\r\n\r\n\r\n    //teste\r\n    const idcategory = props.match.params.idcategory\r\n\r\n    const ProductController = new productcontroller();\r\n\r\n    const user = useSelector(store => store.user[0])\r\n\r\n    const [isLoading , setIsLoading] = useState(true)\r\n    const [currentPage , setCurrentPage] = useState(1)\r\n    const [products , setProducts] = useState([])\r\n    const [pages , setPages] = useState({\r\n        previous : {page : \"\"},\r\n        next : {page : \"\"}\r\n    })\r\n\r\n\r\n    const [showProductModal , setShowProductModal] = useState(false)\r\n    const [showAddProductSuccessModal , setshowAddProductSuccessModal] = useState(false)\r\n    const [showShoppingCarts , setShowShoppingCarts] = useState(false)\r\n    const [product , setAddProduct] = useState({})\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        ProductController.searchAllProductsPaginated(currentPage , idcategory)\r\n        .then((response)=> {\r\n            setPages({\r\n                currentPage: response.page,\r\n                next : {page : response.next ? response.next.page : \"\"},\r\n                previous : {page : response.previous ? response.previous.page : \"\"}\r\n            })\r\n            setProducts(response.list)\r\n            setIsLoading(false)\r\n        })\r\n    },[currentPage])\r\n\r\n\r\n\r\nconst backChangeCurrentPage = (event)=>{\r\n        const pagina = (currentPage - 1)\r\n        setCurrentPage(pagina)\r\n}\r\n\r\nconst handleClickActionProduct = (product)=>{\r\n    setAddProduct(product)\r\n    if(products.length !== 0)\r\n    {\r\n        const IndexSearch = products.findIndex((index) => {\r\n            return index.idproduct === product.idproduct\r\n        })\r\n\r\n        if(IndexSearch !== -1)\r\n        {\r\n            dispatch(addProductsOnTheCart(product))\r\n            openModalAndCloseAddProductSuccessModal(products)\r\n            return\r\n        }\r\n        else\r\n        {\r\n            dispatch(addProductsOnTheCart(product))\r\n            openModalAndCloseAddProductSuccessModal(product)\r\n            return\r\n        }\r\n    }else\r\n    {\r\n        dispatch(addProductsOnTheCart(product))\r\n        openModalAndCloseAddProductSuccessModal(product)\r\n    }\r\n}\r\n\r\n\r\nconst openModalAndCloseAddProductSuccessModal = (product)=>{\r\n    setshowAddProductSuccessModal(true)\r\n    setTimeout(()=>{\r\n        setshowAddProductSuccessModal(false)\r\n    },1500)\r\n}\r\n\r\n\r\nconst advanceChangeCurrentPage = (event)=>{\r\n    const pagina = (currentPage + 1)\r\n    setCurrentPage(pagina)\r\n}\r\n\r\n    return (\r\n        <>\r\n            <ShowModal product={product} show={showAddProductSuccessModal} whatModal={\"AddProductSuccess\"}/>\r\n            <Navbar  authenticated={user.authenticated} user={user} />\r\n            <div style={{backgroundColor : \"white\",marginTop: \"5%\",border : \"1px solid lightgray\" ,borderRadius : '10px', display: \"flex\" , padding : \"25px\" , width : \"90%\" , marginLeft : \"auto\" , marginRight : \"auto\"}}>\r\n            <div className=\"container-fluid\" style={{borderRadius : \"10px\" ,width : \"20%\"}} header='Animated'>\r\n            <Spinner style={{display : isLoading ? \"block\" : \"none\" , marginBottom : \"2%\"}} animation=\"border\"  />\r\n                    \r\n                    <div className='col-md-3'>\r\n                    <MDBTreeview header='Pesquisa/Categorias/Acessorios' className='w-20'>\r\n                        <MDBTreeviewList icon='gem' title='Bijuterias' far open>\r\n                        <MDBTreeviewItem icon='gem' title='Pulseiras' far />\r\n                        <MDBTreeviewItem icon='gem' title='Brincos' far />\r\n                        <MDBTreeviewList icon='gem' title='Colares' far open>\r\n                            <MDBTreeviewItem icon='gem' title='Colares de Concha' far />\r\n                            <MDBTreeviewItem icon='gem' title='Colares de Pedras' opened />\r\n                            <MDBTreeviewItem icon='gem' title='Correntes Banhado a Prata' opened />\r\n                            <MDBTreeviewItem icon='gem' title='Correntes Banhado a Ouro' opened />\r\n                        </MDBTreeviewList>\r\n                        </MDBTreeviewList>\r\n                            <MDBTreeviewList title='Material Legitimo' icon=\"gem\" far>\r\n                            <MDBTreeviewItem icon='gem' title='Pulseiras' far />\r\n                            <MDBTreeviewItem icon='gem' title='Brincos' far />\r\n                            <MDBTreeviewList icon='gem' title='Colares' far open>\r\n                                <MDBTreeviewItem icon='gem' title='Colares de Concha' far />\r\n                                <MDBTreeviewItem icon='gem' title='Colares de Pedras'  />\r\n                                <MDBTreeviewItem icon='gem' title='Correntes Banhado a Prata'  />\r\n                                <MDBTreeviewItem icon='gem' title='Correntes Banhado a Ouro'  />\r\n                            </MDBTreeviewList>\r\n                        </MDBTreeviewList>\r\n                        <MDBInput label=\"Pesquisar por Nome\" /> \r\n                        <MDBBtn color=\"elegant\"><MDBIcon icon=\"search\" size=\"md\" /></MDBBtn>\r\n                        <MDBBtn color=\"elegant\"><MDBIcon far icon=\"window-close\" /></MDBBtn>\r\n                    </MDBTreeview>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3\"></div>\r\n                        <div className=\"col-md-6\">\r\n                                <MDBPagination style={{textAlign: \"center\", display: \"flex\", justifyContent: \"space-between\" , backgroundColor : \"#F5F5F5\" , color:\"gray\"}} color=\"dark\">\r\n                                <MDBPageItem onClick={backChangeCurrentPage} disabled={pages.previous.page ? false : true}>\r\n                                    <MDBPageNav aria-label=\"Previous\">\r\n                                        <span  aria-hidden=\"true\"><BiCaretLeft/> Anterior</span>\r\n                                    </MDBPageNav>\r\n                                </MDBPageItem>\r\n                                <MDBPageItem onClick={advanceChangeCurrentPage} disabled={pages.next.page ? false : true}>\r\n                                    <MDBPageNav>\r\n                                        <span  aria-hidden=\"true\">Proxima <BiCaretRight/></span>\r\n                                    </MDBPageNav>\r\n                                </MDBPageItem>\r\n                                </MDBPagination>\r\n                        </div>\r\n                        <div className=\"col-md-3\"></div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\" style={{marginTop : \"2%\" , display : \"flex\"}}>\r\n                            {products.map(index => {\r\n                                return(\r\n                                    <div className=\"col-md-3\" style={{marginBottom : \"2%\", marginTop : \"2%\"}} >\r\n                                        <a>\r\n                                                <MDBCard style={{maxWidth : \"250px\",width : \"auto\" , borderRadius : \"10px\" , height : \"100%\" , maxHeight : \"100%\" , marginLeft:\"auto\" , marginRight : \"auto\"}} collection className=\"z-depth-1-half\">\r\n                                                <div className=\"view zoom\">\r\n                                                    <img\r\n                                                    src={index.image1}\r\n                                                    className=\"img-fluid\"\r\n                                                    alt=\"\"\r\n                                                    style={{maxWidth : \"100%\",width : \"100%\" , height : \"200px\" , maxHeight : \"200px\"}}\r\n                                                    />\r\n                                                </div>\r\n                                                <div style={{textAlign : \"center\" ,backgroundColor : \"#eceff1\"}}>\r\n                                                    <span className=\"responsive\">{index.name}</span>\r\n                                                    <h4  className=\"h5-responsive text-center\" style={{marginTop : \"16.2%\"}}>Por R$ <strong style={{color :'darkslategray'}}>{index.sellvalue}</strong></h4>\r\n                                                </div>\r\n                                                <div className=\"stripe dark spaceBeet\" style={{justifyContent : \"space-between\" , display : \"flex\"}} >\r\n                                                        \r\n                                                <MDBBtn id=\"BotaoVisualizar\" value={index.idproduct} style={{maxWidth : \"40px\",maxHeight : \"45px\",height : \"auto\", width : \"auto\",justifyContent:\"center\" , display : \"flex  \", borderRadius: \"10px\"}} color=\"elegant\"><MDBIcon size=\"2x\" far icon=\"eye\" /></MDBBtn>\r\n                                                <MDBBtn onClick={()=> handleClickActionProduct(index)} id=\"BotaoAddCarrinho\" style={{maxWidth : \"40px\",maxHeight : \"45px\",height : \"auto\", width : \"auto\",justifyContent:\"center\" , display : \"flex  \", borderRadius: \"10px\"}} color=\"elegant\"><MDBIcon icon=\"cart-plus\" size=\"2x\" /></MDBBtn>\r\n                                                </div>\r\n                                            </MDBCard>\r\n                                        </a>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                    </div>\r\n                <br/>\r\n            </div>\r\n            </div>\r\n            \r\n        </>\r\n        \r\n    )\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\CadastrarFornecedores.js",[],["410","411"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Modals\\index.jsx",["412","413","414","415","416","417"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Modals\\TesteModal.js",[],["418","419"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\ducks\\ecommercefunctions\\shoppingcart\\index.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Tables\\DataTableSoppingCart\\index.js",["420","421","422","423","424","425","426"],"import React , {useEffect} from 'react';\r\n\r\nimport DataTable from 'react-data-table-component';\r\nimport noImagePng from \"../../../../images/no-photo.png\"\r\nimport {MDBInput} from 'mdbreact'\r\nimport {FaRegMehRollingEyes , FaMoneyBillAlt} from 'react-icons/fa'\r\nimport \"./style.css\"\r\n\r\n  export const DataTableShoppingCart = ({shoppingCar}) => {\r\n\r\n\r\n      const columns = [\r\n        {\r\n          name: ' ',\r\n          cell : (row) => <img className=\"imagViewCart\" style={{borderRadius : '5px'}} width=\"64px\" height=\"64px\" src={!row.image1 ? noImagePng : row.image1} ></img>,\r\n          selector: 'image1',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Nome',\r\n          cell : (row) => <strong style={{color : \"black\",textAlign: \"center\"}}>{row.name}</strong>,\r\n          selector: 'name',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'QTD',\r\n          cell : (row) => <MDBInput min=\"1\" max={row.quantity} valueDefault=\"1\" type=\"number\" />,\r\n          selector: 'quantity',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: <FaMoneyBillAlt/>,\r\n          cell : (row) => <strong style={{color : \"black\",textAlign: \"center\"}}>{row.sellvalue}</strong>,\r\n          selector: 'sellvalue',\r\n          sortable: true,\r\n        },\r\n      ];\r\n    const [thing, setThing] = React.useState()\r\n    const handleAction = value => {\r\n\r\n\r\n    }\r\n    const [filterText, setFilterText] = React.useState('');\r\n    const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n    const filteredItems = shoppingCar.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()));\r\n  \r\n    const subHeaderComponentMemo = React.useMemo(() => {\r\n      const handleClear = () => {\r\n        if (filterText) {\r\n          setResetPaginationToggle(!resetPaginationToggle);\r\n          setFilterText('');\r\n        }\r\n      };\r\n  \r\n      return (<tableDefaultTest onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />)\r\n    }, [filterText, resetPaginationToggle]);\r\n  \r\n    return (\r\n      <DataTable\r\n        title=\"Produtos do Carrinho\"\r\n        columns={columns}\r\n        data={shoppingCar}\r\n        pagination\r\n        striped\r\n        hide=\"sm\"\r\n        responsive={true}\r\n        paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n        subHeader\r\n        paginationPerPage={4}\r\n        paginationRowsPerPageOptions={[2,4,6,8,10]}\r\n        subHeaderComponent={subHeaderComponentMemo}\r\n        noDataComponent={\"Sem produtos por Aqui :(\"}\r\n        paginationComponentOptions= {{ rowsPerPageText: ' ', rangeSeparatorText: 'of', noRowsPerPage: false, selectAllRowsItem: false, selectAllRowsItemText: 'All' }}\r\n        persistTableHead\r\n      />\r\n    );\r\n  };","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\orders\\detalhesDoPedido.js",["427","428","429","430","431"],"import React,{useState , useEffect}  from 'react';\r\nimport {getAllSales} from '../../../store/fetchActions/index' \r\nimport {useDispatch , useSelector} from 'react-redux';\r\nimport \"./style.css\"\r\n\r\n\r\n\r\nexport default (props)=>{\r\n    const orders = useSelector(store => store.orders.listOrders)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n       dispatch(getAllSales())\r\n    } , [dispatch])\r\n    const executeLoopProducts = ()=> Order.products.map(index => {\r\n    return (\r\n        <tr>\r\n            <td>{index.idproduct}</td>\r\n            <td>{index.productname}</td>\r\n            <td>{index.productreference}</td>\r\n            <td>{index.productcolor}</td>\r\n            <td>{parseFloat(index.valorunitario).toLocaleString('pt-br' , {minimumFractionDigits : 2})}</td>\r\n        </tr>\r\n    )})\r\n    function isEmpty(obj) {\r\n        for(var prop in obj) {\r\n            if(obj.hasOwnProperty(prop))\r\n                return false;\r\n        }\r\n    \r\n        return true;\r\n    }\r\n    const {match} = props\r\n    const {codesale} = match.params\r\n\r\n    let cont = 0\r\n    let Order = {}\r\n\r\n    if(orders[0])\r\n    {\r\n        orders[0].map(index => {\r\n            if(index.codesale === codesale)\r\n            {\r\n                if(cont == 0)\r\n                {\r\n                    Order = {\r\n                        idsale : index.idsale,\r\n                        datesale : index.datesale,\r\n                        idclient : index.idclient ,\r\n                        clientname : index.clientname,\r\n                        lastnameclient : index.lastnameclient,\r\n                        since : index.since,\r\n                        codesale : index.codesale,\r\n                        system : index.system,\r\n                        quantityitens :index.quantityitens,\r\n                        totalvalue :index.totalvalue,\r\n                        subtotalvalue :index.subtotalvalue,\r\n                        cupomname : index.cupomname,\r\n                        products : [],\r\n                        porcent_desconto :index.porcent_desconto,\r\n                        porcent_comissao_vendedor :index.porcent_comissao_vendedor,\r\n                        formapagamento : index.formapagamento,\r\n                        frete :index.frete,\r\n                        idvendedor :index.idvendedor,\r\n                        nomevendedor : index.nomevendedor,\r\n                        compania : index.compania,\r\n                        cepdeentrega : index.cepdeentrega,\r\n                        ruadeentrega : index.ruadeentrega,\r\n                        bairrodeentrega : index.bairrodeentrega,\r\n                        cidadedeentrega : index.cidadedeentrega,\r\n                        estadodeentrega : index.estadodeentrega,\r\n                        numerodeentrega : index.numerodeentrega,\r\n                        complementodeentrega : index.complementodeentrega,\r\n                        telefone1 : index.telefone1,\r\n                        telefone2 : index.telefone2,\r\n                        clientemail : index.clientemail,\r\n                    }\r\n                }\r\n                Order.products.push({\r\n                    idproduct : index.idproduct,\r\n                    productname : index.productname,\r\n                    productreference : index.productreference,\r\n                    productcolor : index.productcolor,\r\n                    valorunitario : index.valorunitario,\r\n                })\r\n                cont++\r\n            }\r\n                })\r\n                return (\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"col-md-12\" style={{display:\"flex\", justifyContent:'space-between' , marginBottom : \"2%\"}}>\r\n                            <h5 className=\"titluloCarsDetalhes\">Pedido : {Order.codesale}</h5>\r\n                            <h5 className=\"titluloCarsDetalhes\">Status do Pedido : Finalizado ✓</h5>\r\n                        </div>\r\n                        <div className=\"col-md-12\" style={{display:\"flex\" , justifyContent:\"space-between\"}}>\r\n                            <div className=\"col-md-4\" style={{textAlign:'left' , borderRadius : \"5px\" , padding : \"10px\" , backgroundColor : \"#F8F8FF\" , border : \"solid lightgray 1px\"}}>\r\n                            <label className=\"titluloCarsDetalhes\">Informações Gerais</label>\r\n                                <ul>\r\n                                    <li>Código da Venda :  <strong className=\"blackFont\">{Order.codesale}</strong></li>\r\n                                    <li>Data da Venda :  <strong className=\"blackFont\">{Order.datesale}</strong></li>\r\n                                    <li>Matricula do Cliente : <strong className=\"blackFont\">{Order.idclient}</strong></li>\r\n                                    <li>Nome do Cliente :  <strong className=\"blackFont\">{Order.clientname + \" \" + Order.lastnameclient}</strong></li>\r\n                                    <li>Sistema de Origem do Pedido : <strong className=\"blackFont\">{Order.system}</strong></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"col-md-4\" style={{ textAlign:'left' , borderRadius : \"5px\" , padding : \"10px\" , backgroundColor : \"#F8F8FF\" , border : \"solid lightgray 1px\"}}>\r\n                                <label className=\"titluloCarsDetalhes\">Area Fiscal</label>\r\n                                <ul>\r\n                                    <li>Quantidade de Produtos :  <strong className=\"blackFont\">{Order.products ? Order.products.length : false}</strong></li>\r\n                                    <li>SubTotal da Venda :  <strong className=\"blackFont\">{Order.subtotalvalue ? parseFloat(Order.subtotalvalue).toLocaleString('pt-br' , {minimumFractionDigits : 2}) : false}</strong></li>\r\n                                    <li>Total da Venda : <strong className=\"blackFont\">{Order.totalvalue ? parseFloat(Order.totalvalue).toLocaleString('pt-br' , {minimumFractionDigits : 2}) : false}</strong></li>\r\n                                    <li>Código do Cupom : <strong className=\"blackFont\">{Order.cupomname}</strong></li>\r\n                                    <li>Desconto : <strong className=\"blackFont\">{Order.porcent_desconto} %</strong></li>\r\n                                    <li>Forma de Pagamento : <strong className=\"blackFont\">{Order.formapagamento}</strong></li>\r\n                                    <li>Status Pagamento : <strong className=\"blackFont\">OK</strong></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"col-md-4\" style={{ textAlign:'left' , borderRadius : \"5px\" , padding : \"10px\" , backgroundColor : \"#F8F8FF\" , border : \"solid lightgray 1px\"}}>\r\n                                <label className=\"titluloCarsDetalhes\">Comissões/Vendedores e Afins</label>\r\n                                <ul>\r\n                                    <li>Procentagem de Comissão :  <strong className=\"blackFont\">{Order.porcent_comissao_vendedor} %</strong></li>\r\n                                    <li>Frete :  <strong className=\"blackFont\">{Order.frete}</strong></li>\r\n                                    <li>Matricula do Cliente : <strong className=\"blackFont\">{Order.idclient}</strong></li>\r\n                                    <li>Código Vendedor :  <strong className=\"blackFont\">{Order.idvendedor}</strong></li>\r\n                                    <li>Nome do Vendedor : <strong className=\"blackFont\">{Order.nomevendedor}</strong></li>\r\n                                    <li>Compania : <strong className=\"blackFont\">{Order.compania}</strong></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div className=\"col-md-12\" style={{display:\"flex\" , marginBottom : \"2%\"} }>\r\n                            <h5 className=\"titluloCarsDetalhes\">Produtos da Venda</h5>\r\n                        </div>\r\n                        <div className=\"col-md-12\" style={{display:\"flex\"}}>\r\n                            <div className=\"col-md-8\">\r\n                                <table className=\"table table-sm table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>\r\n                                                Código\r\n                                            </th>\r\n                                            <th>\r\n                                                Nome do Produto\r\n                                            </th>\r\n                                            <th>\r\n                                                Referencia\r\n                                            </th>\r\n                                            <th>\r\n                                                Cor\r\n                                            </th>\r\n                                            <th>\r\n                                                Valor Unitário\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Order.products ? executeLoopProducts() : false}\r\n                                    </tbody>\r\n                                    \r\n                                </table>\r\n                                <div style={{ textAlign:'left' , borderRadius : \"5px\" , padding : \"10px\" , backgroundColor : \"#F8F8FF\" , border : \"solid lightgray 1px\"}}>\r\n                                    <label className=\"titluloCarsDetalhes\">Total</label>\r\n                                    <ul>\r\n                                        <li>Quantidade de Itens :  <strong className=\"blackFont\">{Order.products ? Order.products.length : false}</strong></li>\r\n                                        <li>SubTotal :  <strong className=\"blackFont\">{Order.subtotalvalue ? parseFloat(Order.subtotalvalue).toLocaleString('pt-br' , {minimumFractionDigits : 2}) : false}</strong></li>\r\n                                        <li>Desconto :  <strong className=\"blackFont\">{Order.porcent_desconto + \"%\"}</strong></li>\r\n                                        <li>Frete : <strong className=\"blackFont\">{Order.frete}</strong></li>\r\n                                        <li>Forma de Pagamento : <strong className=\"blackFont\">{Order.formapagamento}</strong></li>\r\n                                        <li>Valor Total : <strong className=\"blackFont\">{Order.totalvalue ? parseFloat(Order.totalvalue).toLocaleString('pt-br' , {minimumFractionDigits : 2}) : false}</strong></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\" style={{ textAlign:'right' , borderRadius : \"5px\" , padding : \"10px\" , backgroundColor : \"#F8F8FF\" , border : \"solid lightgray 1px\"}}>\r\n                                <label className=\"titluloCarsDetalhes\">Dados do Cliente</label>\r\n                                <ul>\r\n                                    <li>Nome Completo :  <strong className=\"blackFont\">{Order.clientname + \" \" + Order.lastnameclient}</strong></li>\r\n                                    <li>Quantidade de Compras :  <strong className=\"blackFont\">157,92</strong></li>\r\n                                    <li>Saldo em Carteira :  <strong className=\"blackFont\">200,00</strong></li>\r\n                                    <li>Email de Contato : <strong className=\"blackFont\">{Order.clientemail}</strong></li>\r\n                                    <li>Telefone de Contato : <strong className=\"blackFont\">{Order.telefone1}</strong></li>\r\n                                    <li>Telefone 2 de Contato : <strong className=\"blackFont\">{Order.telefone2}</strong></li>\r\n                                    <li><hr></hr></li>\r\n                                    <li>Endereços</li>\r\n                                    <li>CEP : <strong className=\"blackFont\">{Order.cepdeentrega}</strong></li>\r\n                                    <li>Rua : <strong className=\"blackFont\">{Order.ruadeentrega}</strong></li>\r\n                                    <li>Nº : <strong className=\"blackFont\">{Order.numerodeentrega}</strong></li>\r\n                                    <li>Complemento : <strong className=\"blackFont\">{Order.complementodeentrega}</strong></li>\r\n                                    <li>Cidade : <strong className=\"blackFont\">{Order.cidadedeentrega}</strong></li>\r\n                                    <li>Estado : <strong className=\"blackFont\">{Order.estadodeentrega}</strong></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div className=\"col-md-12\" style={{display:\"flex\" , marginBottom : \"2%\"}}>\r\n                            <h5 className=\"titluloCarsDetalhes\">Pagamento / Entrega</h5>\r\n                        </div>\r\n                        <div className=\"col-md-12\" style={{display:\"flex\" , justifyContent:\"center\"}}>\r\n                            <div className=\"col-md-4\" style={{textAlign:'left' , borderRadius : \"5px\" , padding : \"10px\" , backgroundColor : \"#F8F8FF\" , border : \"solid lightgray 1px\"}}>\r\n                            <label className=\"titluloCarsDetalhes\">Pagamento</label>\r\n                                <ul>\r\n                                    <li>Status do Boleto :  <strong className=\"blackFont\">Enviado</strong></li>\r\n                                    <li>Data geradora do Boleto :  <strong className=\"blackFont\">11/02/2021</strong></li>\r\n                                    <li>Status : <strong className=\"blackFont\">Pago</strong></li>\r\n                                    <li>Nome do Cliente :  <strong className=\"blackFont\">{Order.clientname}</strong></li>\r\n                                    <li>Sistema de Origem do Pedido : <strong className=\"blackFont\">{Order.system}</strong></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"col-md-4\" style={{ textAlign:'left' , borderRadius : \"5px\" , padding : \"10px\" , backgroundColor : \"#F8F8FF\" , border : \"solid lightgray 1px\"}}>\r\n                                <label className=\"titluloCarsDetalhes\">Entrega</label>\r\n                                <ul>\r\n                                    <li>Quantidade de Produtos :  <strong className=\"blackFont\">{Order.products ? Order.products.length : false}</strong></li>\r\n                                    <li>SubTotal da Venda :  <strong className=\"blackFont\">{Order.subtotalvalue ? parseFloat(Order.subtotalvalue).toLocaleString('pt-br' , {minimumFractionDigits : 2}) : false}</strong></li>\r\n                                    <li>Total da Venda : <strong className=\"blackFont\">{Order.totalvalue ? parseFloat(Order.totalvalue).toLocaleString('pt-br' , {minimumFractionDigits : 2}) : false}</strong></li>\r\n                                    <li>Código do Cupom : <strong className=\"blackFont\">{Order.cupomname}</strong></li>\r\n                                    <li>Desconto : <strong className=\"blackFont\">{Order.porcent_desconto} %</strong></li>\r\n                                    <li>Frete : <strong className=\"blackFont\">{Order.frete} %</strong></li>\r\n                                    <li>Forma de Pagamento : <strong className=\"blackFont\">{Order.formapagamento}</strong></li>\r\n                                    <li><hr></hr></li>\r\n                                    <li>Endereço de Entrega</li>\r\n                                    <li>CEP : <strong className=\"blackFont\">{Order.cepdeentrega}</strong></li>\r\n                                    <li>Rua : <strong className=\"blackFont\">{Order.ruadeentrega}</strong></li>\r\n                                    <li>Nº : <strong className=\"blackFont\">{Order.numerodeentrega}</strong></li>\r\n                                    <li>Complemento : <strong className=\"blackFont\">{Order.complementodeentrega}</strong></li>\r\n                                    <li>Cidade : <strong className=\"blackFont\">{Order.cidadedeentrega}</strong></li>\r\n                                    <li>Estado : <strong className=\"blackFont\">{Order.estadodeentrega}</strong></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n            \r\n                    </div>\r\n                )\r\n    }\r\n    else{\r\n        return(<h4>Carregando...</h4>)\r\n    }\r\n    \r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\config\\index.js",["432","433","434"],"import React from 'react'\r\nimport {Tab , Nav , Col , Row , } from \"react-bootstrap\"\r\nimport \"./styleConfig.css\"\r\n\r\n\r\n\r\n\r\nfunction changeText(element){\r\n    console.log(element)\r\n}\r\n\r\nexport default ()=>{\r\n    return(\r\n        <div>\r\n                <Tab.Container id=\"left-tabs-example\" id=\"navLeft\" defaultActiveKey=\"first\">\r\n                    <Row>\r\n                        <Col className=\"menuLateral\" sm={2}>\r\n                        <Nav variant=\"dark\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                                <Nav.Link  className=\"botaoConfig\"  eventKey=\"first\">Produtos</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link  className=\"botaoConfig\"  eventKey=\"second\">Usuarios</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link  className=\"botaoConfig\"  eventKey=\"third\">Email</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link  className=\"botaoConfig\"  eventKey=\"fourth\">Correios</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link  className=\"botaoConfig\"  eventKey=\"fifth\">Sobre</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link  className=\"botaoConfig\"  eventKey=\"sixth\">Voltar</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        </Col>\r\n                        <Col sm={10}>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"first\">\r\n                            TESTE1\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"second\">\r\n                            TESTE2\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"third\">\r\n                            TESTE3\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"fourth\">\r\n                            TESTE4\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"fifth\">\r\n                            TESTE5\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"sixth\">\r\n                            TESTE6\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                        </Col>\r\n                    </Row>\r\n                </Tab.Container>\r\n        </div>\r\n    )\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\ListHighProducts\\ListHighProducts.js",[],["435","436"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\clients\\cadastroClients.js",["437"],"import React from 'react'\r\nimport {Form, Row , Col ,Button} from \"react-bootstrap\"\r\nimport Swal from 'sweetalert2'\r\nimport clientController from '../../../Controller/ClientController'\r\nimport servicecep from '../../../services/serviceCep'\r\n\r\n\r\nconst ServiceCep = new servicecep\r\n\r\n\r\nconst ClientController = new clientController()\r\n\r\nexport default class CadastroDeClientes extends React.Component\r\n{\r\n    \r\n    constructor(props)\r\n    {\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n            newClient : {\r\n                name : \"\",\r\n                lastname : \"\",\r\n                cpf : \"\",\r\n                rg : \"\",\r\n                registerdate : new Date().toLocaleDateString(),\r\n                tel1 : \"\",\r\n                tel2 : \"\",\r\n                email : \"\",\r\n                adress : \"\",\r\n                cep : \"\",\r\n                bairro : \"\",\r\n                cidade : \"\",\r\n                estado : \"\",\r\n                complemento : \"\",\r\n                numero : \"\",\r\n            }\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleBlur = this.handleBlur.bind(this)\r\n    }\r\n\r\n    handleSubmit(event){\r\n\r\n        event.preventDefault()\r\n        ClientController.addClient(this.state.newClient)\r\n        .then(response => {\r\n            if(!response.success)\r\n            {\r\n                Swal.fire({\r\n                    title : \"Erro ao Cadastrar Cliente\",\r\n                    html : response.msg,\r\n                    icon : \"error\"\r\n                })\r\n            }\r\n            else{\r\n                Swal.fire({\r\n                    title : \"Cliente Cadastrado com Sucesso !\",\r\n                    icon : \"success\",\r\n                    timer : 2000,\r\n                    showConfirmButton : false,\r\n                    onClose : ()=>{\r\n                        window.location.href = \"/controlpainel/admin\"\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    handleBlur(event){\r\n        ServiceCep.consultaCEP(event.target.value)\r\n        .then(response=>{\r\n\r\n            if(response.cep === undefined)\r\n            {\r\n                Swal.fire({\r\n                    title : \"Erro : \",\r\n                    html : \"<p>CEP INVÁLIDO</p>\",\r\n                    icon : \"error\"\r\n                })\r\n                let State = this.state.newClient\r\n\r\n                State.cep = \"\"\r\n                this.setState({newClient : State})\r\n                return\r\n            }\r\n            let estadoAplicacao = this.state.newClient\r\n            estadoAplicacao.adress = response.logradouro\r\n            estadoAplicacao.bairro = response.bairro\r\n            estadoAplicacao.cidade = response.localidade\r\n            estadoAplicacao.estado = response.uf\r\n\r\n            this.setState({newClient : estadoAplicacao})\r\n        })\r\n        .catch(err =>{\r\n            Swal.fire({\r\n                title : \"Erro : \",\r\n                html : \"<p>CEP INVÁLIDO</p>\",\r\n                icon : \"error\"\r\n            })\r\n        })\r\n    }\r\n    \r\n\r\n    handleChange(event)\r\n    {\r\n        var newClient = this.state.newClient\r\n        newClient[event.target.name] = event.target.value\r\n        this.setState({newClient : newClient});\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col>\r\n                        <h4>Cadastro de Clientes</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Row className=\"mt-4\">\r\n                        <Col>\r\n                            <label>Nome</label>\r\n                            <Form.Control name=\"name\" value={this.state.newClient.name} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>Sobrenome</label>\r\n                            <Form.Control name=\"lastname\" value={this.state.newClient.lastname}  onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>CPF</label>\r\n                            <Form.Control name=\"cpf\" value={this.state.newClient.cpf} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>RG</label>\r\n                            <Form.Control name=\"rg\" value={this.state.newClient.rg} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <Row className=\"mt-4\">\r\n                        <Col>\r\n                            <label>Telefone 1</label>\r\n                            <Form.Control name=\"tel1\" value={this.state.newClient.tel1} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>Telefone 2</label>\r\n                            <Form.Control name=\"tel2\" value={this.state.newClient.tel2} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>Email</label>\r\n                            <Form.Control name=\"email\" value={this.state.newClient.email} onChange={this.handleChange} type=\"email\" placeholder=\"\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <Row className=\"mt-4\">\r\n                        <Col md=\"2\">\r\n                            <label>CEP</label>\r\n                            <Form.Control name=\"cep\" onBlur={this.handleBlur} value={this.state.newClient.cep} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col md=\"7\">\r\n                            <label>Rua</label>\r\n                            <Form.Control name=\"adress\" value={this.state.newClient.adress} onChange={this.handleChange}   readOnly placeholder=\"\" />\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <label>Bairro</label>\r\n                            <Form.Control name=\"bairro\" value={this.state.newClient.bairro} onChange={this.handleChange}   readOnly placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>Nº</label>\r\n                            <Form.Control name=\"numero\" value={this.state.newClient.numero} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-4\">\r\n                        <Col>\r\n                            <label>Cidade</label>\r\n                            <Form.Control name=\"cidade\" value={this.state.newClient.cidade} onChange={this.handleChange} readOnly placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>Estado</label>\r\n                            <Form.Control name=\"estado\" value={this.state.newClient.estado} onChange={this.handleChange} readOnly placeholder=\"\" />\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                            <label>Complemento</label>\r\n                            <Form.Control name=\"complemento\" value={this.state.newClient.complemento} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-4\">\r\n                        \r\n                    </Row>\r\n                    <Row className=\"mt-4\" style={{justifyContent : \"space-between\"}}>\r\n                        <Col md=\"4\">\r\n                            <Button type=\"submit\" variant=\"outline-success\">Cadastrar ✓</Button>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <Button type=\"submit\" variant=\"outline-danger\">Cancelar Cadastro X</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\OrdersController.js",["438"],"import Enviroments from '../enviroments/enviroment-homolg'\r\nimport {useDispatch} from 'react-redux'\r\n\r\n\r\n\r\n\r\n\r\nexport default class orderscontroller{\r\n\r\n\r\n    addNewOrder = async (order) =>{\r\n\r\n        let data = order;\r\n        const newSale = {\r\n            \"newSale\" : data\r\n        }\r\n\r\n\r\n        return fetch(Enviroments.URL+'/admin/sale/addNewSale' , {\r\n                method : \"POST\",\r\n                headers: {\r\n                    \"Content-Type\" : \"application/json\"\r\n                },\r\n                body : JSON.stringify(newSale)\r\n        })\r\n        .then(res => res.json())\r\n\r\n    }\r\n\r\n    maintenanceInOrder = ()=>{\r\n\r\n    }\r\n\r\n    listAllOrders = async ()=>{\r\n        return fetch(Enviroments.URL+'/admin/listarVendasRealizadas' , {\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\"\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n    }\r\n\r\n\r\n\r\n    listProductsForTheOrders = async ()=>{\r\n        return fetch(Enviroments.URL + '/admin/listarVendasRealizadas' , {\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\"\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n    }\r\n\r\n\r\n}",["439","440"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Tables\\DataTableDefaultCategories.js",["441","442","443","444","445","446","447","448"],"import React , {useEffect} from 'react';\r\nimport { Button , Form } from 'react-bootstrap';\r\nimport {useDispatch , useSelector} from 'react-redux';\r\nimport DataTable from 'react-data-table-component';\r\nimport { getAllSales,getAllCategories } from '../../../store/fetchActions';\r\nimport noImagePng from \"../../../images/no-photo.png\"\r\nimport {GrConfigure} from 'react-icons/gr'\r\n\r\n\r\n\r\n  export const TableDefault = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n       dispatch(getAllCategories())\r\n    } , [])\r\n\r\n    const categories = useSelector(store => store.categories)\r\n\r\n    console.log(categories)\r\n    const tableDefaultTest = ({ filterText, onFilter, onClear }) => (\r\n        <>\r\n          <input id=\"search\" type=\"text\" className=\"form-control\" placeholder=\"Filter By Name\" aria-label=\"Search Input\" value={filterText} onChange={onFilter} />\r\n          <Button variant=\"dark\" type=\"button\" onClick={onClear}>X</Button>\r\n        </>\r\n      )\r\n\r\n\r\n      const testeClick = (ev)=>{\r\n        console.log(ev.target)\r\n      }\r\n\r\n      const columns = [\r\n        {\r\n          name: 'Image',\r\n          cell : (row) => <img src={!row.image1 ? noImagePng : row.image1} width=\"174px\" height=\"174px\"></img>,\r\n          selector: 'image1',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Nome Categoria',\r\n          selector: 'name',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Descrição da Categoria',\r\n          selector: 'description',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Data de Registro',\r\n          selector: 'dateregister',\r\n          sortable: true,\r\n          cell : (row) => new Date(row.dateregister).toLocaleDateString()\r\n        },\r\n        {\r\n          name: 'Ativa ?',\r\n          selector: 'active',\r\n          sortable: true,\r\n          cell : (row) => row.active === \"true\" ? \"Sim\" : \"Não\"\r\n        },\r\n        {\r\n          name: 'Aparece na Home ?',\r\n          selector: 'ecommerceHome',\r\n          sortable: true,\r\n          cell : (row) => row.ecommerceHome === \"true\" ? \"Sim\" : \"Não\"\r\n        },\r\n        {\r\n          cell: (row) => <Button variant=\"outline-dark\" id={row.idcategory} onClick={handleAction}><GrConfigure/></Button>,\r\n          ignoreRowClick: true,\r\n          allowOverflow: true,\r\n          button: true,\r\n        },\r\n      ];\r\n    const [thing, setThing] = React.useState()\r\n    const handleAction = value => {\r\n\r\n      if(value.target.id !== \"\"){\r\n          window.location.href = \"/controlpainel/admin/listarCategorias/details/category/\" + value.target.id\r\n      }\r\n\r\n    }\r\n    const [filterText, setFilterText] = React.useState('');\r\n    const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n    const filteredItems = categories.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()));\r\n  \r\n    const subHeaderComponentMemo = React.useMemo(() => {\r\n      const handleClear = () => {\r\n        if (filterText) {\r\n          setResetPaginationToggle(!resetPaginationToggle);\r\n          setFilterText('');\r\n        }\r\n      };\r\n  \r\n      return (<tableDefaultTest onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />)\r\n    }, [filterText, resetPaginationToggle]);\r\n  \r\n    return (\r\n      <DataTable\r\n        title=\"Categorias\"\r\n        columns={columns}\r\n        data={categories}\r\n        pagination\r\n        paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n        subHeader\r\n        subHeaderComponent={subHeaderComponentMemo}\r\n        selectableRows\r\n        persistTableHead\r\n      />\r\n    );\r\n  };","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\Footer\\Footer.js",["449","450","451","452","453","454","455"],"import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nimport \"./footer.css\"\r\n\r\n\r\nconst FooterPagePro = () => {\r\n  return (\r\n    <MDBFooter color=\"elegant-color-dark dark lighten-5\" className=\"font-large pt-0\">\r\n      <MDBContainer>\r\n        <MDBRow>\r\n          <MDBCol  md=\"12\" className=\"py-5\">\r\n            <div  className=\"mb-5 flex-center\">\r\n              <a  className=\"fb-ic botaoFooter\">\r\n                <i className=\"fab fa-facebook-f fa-lg elegant-color-dark-text mr-md-5 mr-3 fa-2x\">\r\n                </i>\r\n              </a>\r\n              <a className=\"tw-ic\">\r\n                <i className=\"fab fa-twitter fa-lg elegant-color-dark-text mr-md-5 mr-3 fa-2x\">\r\n                </i>\r\n              </a>\r\n              <a className=\"gplus-ic\">\r\n                <i className=\"fab fa-google-plus fa-lg elegant-color-dark-text mr-md-5 mr-3 fa-2x\">\r\n                </i>\r\n              </a>\r\n              <a className=\"li-ic\">\r\n                <i className=\"fab fa-linkedin-in fa-lg elegant-color-dark-text mr-md-5 mr-3 fa-2x\">\r\n                </i>\r\n              </a>\r\n              <a className=\"ins-ic\">\r\n                <i className=\"fab fa-instagram fa-lg elegant-color-dark-text mr-md-5 mr-3 fa-2x\">\r\n                </i>\r\n              </a>\r\n              <a className=\"pin-ic\">\r\n                <i className=\"fab fa-pinterest fa-lg elegant-color-dark-text fa-2x\"> </i>\r\n              </a>\r\n            </div>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()} Copyright:{\" \"}\r\n          <a className=\"fab fa-lg elegant-color-dark-text\">Mrs.Gringa</a>\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n}\r\n\r\nexport default FooterPagePro;","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\ducks\\sales\\index.js",["456"],"import orderscontroller from \"../../../Controller/OrdersController\";\r\nimport {createAction , createReducer} from '@reduxjs/toolkit'\r\n\r\nlet INICIAL_STATE_SALES = {\r\n    listOrders : [],\r\n    quantityProductsMoreOnSale : []\r\n}\r\n\r\n\r\nexport const addSaleForList = createAction('ADD_SALE')\r\nexport const addSales = createAction('ADD_SALES')\r\nexport const addSalesReportQuantityProducts = createAction(\"ADD_REPORT_OF_PRODUCTS\")\r\n\r\n\r\nexport default createReducer(INICIAL_STATE_SALES , {\r\n    [addSaleForList.type] : (state, action)=>[...state , action.payload],\r\n    [addSales.type] : (state , action) => ({\r\n        quantityProductsMoreOnSale : [...state.quantityProductsMoreOnSale],\r\n        listOrders : [...state.listOrders , action.payload]\r\n    }),\r\n    [addSalesReportQuantityProducts.type] : (state , action) => ({\r\n        listOrders : [...state.listOrders],\r\n        quantityProductsMoreOnSale : [state.quantityProductsMoreOnSale , action.payload]})  \r\n})\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\Sale\\FinishimSale.jsx",["457"],"import React from 'react';\r\nimport { DataTableShoppingCart } from '../../principal/Tables/DataTableSoppingCart';\r\nimport Navbar from '../NavBar/NavBar';\r\nimport HorizontalNonLinearAlternativeLabelStepper from '../Stepper'\r\n\r\n\r\nexport default ()=>{\r\n    const finalizatingSale = JSON.parse(localStorage.getItem('finalizatingSale'))\r\n    const loggedUser = JSON.parse(localStorage.getItem('user'))\r\n    if(finalizatingSale && loggedUser.authenticated)\r\n    {\r\n        return(\r\n            <div>\r\n                <Navbar authenticated={loggedUser ? loggedUser.authenticated : false} user={loggedUser} style={{marginBottom : \"5%\"}}></Navbar>\r\n                <div style={{background:\"white\"}} className=\"container-fluid mt-4\">\r\n                        <div className=\"row col-md-12 mt-4\">\r\n                            <div className=\"col-md-4 mt-4\">\r\n                                \r\n                            </div>\r\n                            <div className=\"col-md-4 mt-4\">\r\n                                Conclusão da Venda\r\n                            </div>\r\n                            <div style={{background:\"lightgray\" , padding : \"10px\" , border : \"1px solid darkslategray\" , borderRadius : \"10px\"}} className=\"col-md-4 mt-4\">\r\n                                <ul style={{listStyle: 'none'}} >\r\n                                    <li><span>Venda Numero : ######</span></li>\r\n                                    <li><span>Valor Total</span></li>\r\n                                    <li><span>Desconto : ######</span></li>\r\n                                    <li><span>Cupom : ######</span></li>\r\n                                    <li><span> : ######</span></li>\r\n                                    <li><span>Cupom : ######</span></li>\r\n                                    <li><span>Quantidade de Itens : ######</span></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-8\">\r\n                            <HorizontalNonLinearAlternativeLabelStepper></HorizontalNonLinearAlternativeLabelStepper>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <DataTableShoppingCart shoppingCar={finalizatingSale}></DataTableShoppingCart>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"row col-md-12\">\r\n\r\n                        </div>\r\n                        \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        window.location.href = \"/\"\r\n    }\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\store\\index.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\saleman\\cadastrarVendedores.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\Stepper\\index.js",["458","459"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {StepOne} from '../Order/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Dados de Entrega', 'Forma de Pagamento', 'Realizar Pagamento'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <StepOne/>\r\n    case 1:\r\n      return 'Passo 2 : Escolha a forma de pagamento';\r\n    case 2:\r\n      return 'Passo 3 : Realizar Pagamento';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalNonLinearAlternativeLabelStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState(new Set());\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  const totalSteps = () => {\r\n    return getSteps().length;\r\n  };\r\n\r\n\r\n  const handleSkip = () => {\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const skippedSteps = () => {\r\n    return skipped.size;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return completed.size;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps() - skippedSteps();\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !completed.has(i))\r\n        : activeStep + 1;\r\n\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = new Set(completed);\r\n    newCompleted.add(activeStep);\r\n    setCompleted(newCompleted);\r\n\r\n    /**\r\n     * Sigh... it would be much nicer to replace the following if conditional with\r\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\r\n     * thus we have to resort to not being very DRY.\r\n     */\r\n    if (completed.size !== totalSteps() - skippedSteps()) {\r\n      handleNext();\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted(new Set());\r\n    setSkipped(new Set());\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  function isStepComplete(step) {\r\n    return completed.has(step);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const buttonProps = {};\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepButton\r\n                onClick={handleStep(index)}\r\n                completed={isStepComplete(index)}\r\n                {...buttonProps}\r\n              >\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              Todos os passos foram concluidos, Gerando pedido ...\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n            \r\n              {activeStep !== steps.length &&\r\n                (completed.has(activeStep)) ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1 ? 'Finalizar' : 'Completar Etapa'}\r\n                  </Button>\r\n                )\r\n            }\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\ecommerce\\Order\\index.js",["460","461"],"import React from 'react';\r\nimport { transpileModule } from 'typescript';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nexport const StepOne = ()=>{\r\n    return(\r\n        <form>\r\n            <div>\r\n                <TextField\r\n                error={false}\r\n                id=\"standard-error-helper-text\"\r\n                label=\"CEP\"\r\n                defaultValue=\"\"\r\n                helperText=\"\"\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\ListProducts.js",["462","463","464","465","466"],{"ruleId":"467","severity":1,"message":"468","line":23,"column":32,"nodeType":"469","messageId":"470","endLine":23,"endColumn":34},{"ruleId":"471","severity":1,"message":"472","line":60,"column":8,"nodeType":"473","endLine":60,"endColumn":10,"suggestions":"474"},{"ruleId":"467","severity":1,"message":"468","line":62,"column":25,"nodeType":"469","messageId":"470","endLine":62,"endColumn":27},{"ruleId":"467","severity":1,"message":"468","line":64,"column":29,"nodeType":"469","messageId":"470","endLine":64,"endColumn":31},{"ruleId":"475","replacedBy":"476"},{"ruleId":"477","replacedBy":"478"},{"ruleId":"479","severity":1,"message":"480","line":2,"column":9,"nodeType":"481","messageId":"482","endLine":2,"endColumn":14},{"ruleId":"479","severity":1,"message":"483","line":2,"column":17,"nodeType":"481","messageId":"482","endLine":2,"endColumn":21},{"ruleId":"479","severity":1,"message":"484","line":2,"column":24,"nodeType":"481","messageId":"482","endLine":2,"endColumn":33},{"ruleId":"479","severity":1,"message":"485","line":2,"column":36,"nodeType":"481","messageId":"482","endLine":2,"endColumn":42},{"ruleId":"479","severity":1,"message":"486","line":4,"column":9,"nodeType":"481","messageId":"482","endLine":4,"endColumn":25},{"ruleId":"479","severity":1,"message":"487","line":8,"column":8,"nodeType":"481","messageId":"482","endLine":8,"endColumn":24},{"ruleId":"479","severity":1,"message":"488","line":15,"column":7,"nodeType":"481","messageId":"482","endLine":15,"endColumn":24},{"ruleId":"489","severity":1,"message":"490","line":28,"column":1,"nodeType":"491","endLine":65,"endColumn":6},{"ruleId":"479","severity":1,"message":"492","line":30,"column":24,"nodeType":"481","messageId":"482","endLine":30,"endColumn":36},{"ruleId":"471","severity":1,"message":"493","line":37,"column":9,"nodeType":"473","endLine":37,"endColumn":11,"suggestions":"494"},{"ruleId":"475","replacedBy":"495"},{"ruleId":"477","replacedBy":"496"},{"ruleId":"479","severity":1,"message":"497","line":3,"column":22,"nodeType":"481","messageId":"482","endLine":3,"endColumn":36},{"ruleId":"479","severity":1,"message":"498","line":3,"column":37,"nodeType":"481","messageId":"482","endLine":3,"endColumn":45},{"ruleId":"479","severity":1,"message":"499","line":3,"column":46,"nodeType":"481","messageId":"482","endLine":3,"endColumn":52},{"ruleId":"479","severity":1,"message":"500","line":3,"column":54,"nodeType":"481","messageId":"482","endLine":3,"endColumn":65},{"ruleId":"479","severity":1,"message":"501","line":3,"column":66,"nodeType":"481","messageId":"482","endLine":3,"endColumn":77},{"ruleId":"479","severity":1,"message":"502","line":4,"column":16,"nodeType":"481","messageId":"482","endLine":4,"endColumn":22},{"ruleId":"479","severity":1,"message":"503","line":4,"column":25,"nodeType":"481","messageId":"482","endLine":4,"endColumn":30},{"ruleId":"479","severity":1,"message":"504","line":4,"column":33,"nodeType":"481","messageId":"482","endLine":4,"endColumn":46},{"ruleId":"479","severity":1,"message":"505","line":7,"column":9,"nodeType":"481","messageId":"482","endLine":7,"endColumn":20},{"ruleId":"479","severity":1,"message":"506","line":8,"column":8,"nodeType":"481","messageId":"482","endLine":8,"endColumn":12},{"ruleId":"479","severity":1,"message":"507","line":9,"column":9,"nodeType":"481","messageId":"482","endLine":9,"endColumn":28},{"ruleId":"479","severity":1,"message":"508","line":11,"column":10,"nodeType":"481","messageId":"482","endLine":11,"endColumn":30},{"ruleId":"489","severity":1,"message":"509","line":26,"column":1,"nodeType":"491","endLine":56,"endColumn":2},{"ruleId":"475","replacedBy":"510"},{"ruleId":"477","replacedBy":"511"},{"ruleId":"475","replacedBy":"512"},{"ruleId":"477","replacedBy":"513"},{"ruleId":"479","severity":1,"message":"514","line":1,"column":10,"nodeType":"481","messageId":"482","endLine":1,"endColumn":14},{"ruleId":"475","replacedBy":"515"},{"ruleId":"477","replacedBy":"516"},{"ruleId":"475","replacedBy":"517"},{"ruleId":"477","replacedBy":"518"},{"ruleId":"519","severity":1,"message":"520","line":86,"column":38,"nodeType":"521","messageId":"522","endLine":86,"endColumn":40},{"ruleId":"467","severity":1,"message":"523","line":109,"column":41,"nodeType":"469","messageId":"470","endLine":109,"endColumn":43},{"ruleId":"467","severity":1,"message":"523","line":119,"column":48,"nodeType":"469","messageId":"470","endLine":119,"endColumn":50},{"ruleId":"479","severity":1,"message":"524","line":130,"column":24,"nodeType":"481","messageId":"482","endLine":130,"endColumn":34},{"ruleId":"467","severity":1,"message":"468","line":176,"column":48,"nodeType":"469","messageId":"470","endLine":176,"endColumn":50},{"ruleId":"479","severity":1,"message":"525","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":25},{"ruleId":"479","severity":1,"message":"526","line":1,"column":28,"nodeType":"481","messageId":"482","endLine":1,"endColumn":37},{"ruleId":"479","severity":1,"message":"527","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":22},{"ruleId":"479","severity":1,"message":"528","line":2,"column":49,"nodeType":"481","messageId":"482","endLine":2,"endColumn":61},{"ruleId":"479","severity":1,"message":"529","line":2,"column":63,"nodeType":"481","messageId":"482","endLine":2,"endColumn":74},{"ruleId":"479","severity":1,"message":"530","line":2,"column":76,"nodeType":"481","messageId":"482","endLine":2,"endColumn":88},{"ruleId":"479","severity":1,"message":"531","line":2,"column":90,"nodeType":"481","messageId":"482","endLine":2,"endColumn":101},{"ruleId":"479","severity":1,"message":"532","line":2,"column":103,"nodeType":"481","messageId":"482","endLine":2,"endColumn":116},{"ruleId":"479","severity":1,"message":"533","line":2,"column":118,"nodeType":"481","messageId":"482","endLine":2,"endColumn":125},{"ruleId":"479","severity":1,"message":"534","line":2,"column":127,"nodeType":"481","messageId":"482","endLine":2,"endColumn":137},{"ruleId":"479","severity":1,"message":"535","line":2,"column":140,"nodeType":"481","messageId":"482","endLine":2,"endColumn":148},{"ruleId":"479","severity":1,"message":"536","line":2,"column":150,"nodeType":"481","messageId":"482","endLine":2,"endColumn":161},{"ruleId":"479","severity":1,"message":"537","line":2,"column":163,"nodeType":"481","messageId":"482","endLine":2,"endColumn":179},{"ruleId":"479","severity":1,"message":"538","line":2,"column":181,"nodeType":"481","messageId":"482","endLine":2,"endColumn":196},{"ruleId":"479","severity":1,"message":"539","line":2,"column":198,"nodeType":"481","messageId":"482","endLine":2,"endColumn":204},{"ruleId":"519","severity":1,"message":"540","line":17,"column":42,"nodeType":"521","messageId":"541","endLine":17,"endColumn":44},{"ruleId":"467","severity":1,"message":"468","line":19,"column":42,"nodeType":"469","messageId":"470","endLine":19,"endColumn":44},{"ruleId":"467","severity":1,"message":"468","line":19,"column":69,"nodeType":"469","messageId":"470","endLine":19,"endColumn":71},{"ruleId":"519","severity":1,"message":"540","line":32,"column":46,"nodeType":"521","messageId":"541","endLine":32,"endColumn":48},{"ruleId":"479","severity":1,"message":"526","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":26},{"ruleId":"479","severity":1,"message":"542","line":2,"column":19,"nodeType":"481","messageId":"482","endLine":2,"endColumn":23},{"ruleId":"479","severity":1,"message":"505","line":3,"column":9,"nodeType":"481","messageId":"482","endLine":3,"endColumn":20},{"ruleId":"479","severity":1,"message":"543","line":3,"column":23,"nodeType":"481","messageId":"482","endLine":3,"endColumn":34},{"ruleId":"479","severity":1,"message":"544","line":5,"column":10,"nodeType":"481","messageId":"482","endLine":5,"endColumn":21},{"ruleId":"479","severity":1,"message":"545","line":20,"column":13,"nodeType":"481","messageId":"482","endLine":20,"endColumn":23},{"ruleId":"479","severity":1,"message":"546","line":93,"column":12,"nodeType":"481","messageId":"482","endLine":93,"endColumn":17},{"ruleId":"479","severity":1,"message":"547","line":93,"column":19,"nodeType":"481","messageId":"482","endLine":93,"endColumn":27},{"ruleId":"479","severity":1,"message":"548","line":103,"column":11,"nodeType":"481","messageId":"482","endLine":103,"endColumn":24},{"ruleId":"475","replacedBy":"549"},{"ruleId":"477","replacedBy":"550"},{"ruleId":"479","severity":1,"message":"525","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":25},{"ruleId":"479","severity":1,"message":"551","line":31,"column":9,"nodeType":"481","messageId":"482","endLine":31,"endColumn":24},{"ruleId":"479","severity":1,"message":"552","line":70,"column":14,"nodeType":"481","messageId":"482","endLine":70,"endColumn":29},{"ruleId":"479","severity":1,"message":"553","line":63,"column":13,"nodeType":"481","messageId":"482","endLine":63,"endColumn":18},{"ruleId":"479","severity":1,"message":"554","line":4,"column":8,"nodeType":"481","messageId":"482","endLine":4,"endColumn":15},{"ruleId":"519","severity":1,"message":"520","line":77,"column":27,"nodeType":"521","messageId":"522","endLine":77,"endColumn":29},{"ruleId":"519","severity":1,"message":"520","line":84,"column":27,"nodeType":"521","messageId":"522","endLine":84,"endColumn":29},{"ruleId":"519","severity":1,"message":"520","line":90,"column":27,"nodeType":"521","messageId":"522","endLine":90,"endColumn":29},{"ruleId":"475","replacedBy":"555"},{"ruleId":"477","replacedBy":"556"},{"ruleId":"479","severity":1,"message":"535","line":1,"column":63,"nodeType":"481","messageId":"482","endLine":1,"endColumn":71},{"ruleId":"489","severity":1,"message":"490","line":4,"column":1,"nodeType":"491","endLine":122,"endColumn":2},{"ruleId":"479","severity":1,"message":"527","line":2,"column":195,"nodeType":"481","messageId":"482","endLine":2,"endColumn":207},{"ruleId":"479","severity":1,"message":"557","line":4,"column":33,"nodeType":"481","messageId":"482","endLine":4,"endColumn":39},{"ruleId":"479","severity":1,"message":"503","line":4,"column":42,"nodeType":"481","messageId":"482","endLine":4,"endColumn":47},{"ruleId":"479","severity":1,"message":"558","line":6,"column":8,"nodeType":"481","messageId":"482","endLine":6,"endColumn":17},{"ruleId":"479","severity":1,"message":"559","line":2,"column":8,"nodeType":"481","messageId":"482","endLine":2,"endColumn":13},{"ruleId":"489","severity":1,"message":"560","line":4,"column":1,"nodeType":"491","endLine":29,"endColumn":2},{"ruleId":"489","severity":1,"message":"561","line":1,"column":1,"nodeType":"491","endLine":5,"endColumn":2},{"ruleId":"479","severity":1,"message":"506","line":12,"column":8,"nodeType":"481","messageId":"482","endLine":12,"endColumn":12},{"ruleId":"479","severity":1,"message":"562","line":2,"column":8,"nodeType":"481","messageId":"482","endLine":2,"endColumn":22},{"ruleId":"479","severity":1,"message":"563","line":5,"column":9,"nodeType":"481","messageId":"482","endLine":5,"endColumn":24},{"ruleId":"479","severity":1,"message":"564","line":9,"column":9,"nodeType":"481","messageId":"482","endLine":9,"endColumn":17},{"ruleId":"479","severity":1,"message":"565","line":9,"column":18,"nodeType":"481","messageId":"482","endLine":9,"endColumn":30},{"ruleId":"479","severity":1,"message":"566","line":9,"column":31,"nodeType":"481","messageId":"482","endLine":9,"endColumn":43},{"ruleId":"479","severity":1,"message":"567","line":16,"column":7,"nodeType":"481","messageId":"482","endLine":16,"endColumn":15},{"ruleId":"471","severity":1,"message":"568","line":33,"column":16,"nodeType":"521","endLine":44,"endColumn":6},{"ruleId":"471","severity":1,"message":"569","line":44,"column":7,"nodeType":"473","endLine":44,"endColumn":9,"suggestions":"570"},{"ruleId":"571","severity":1,"message":"572","line":304,"column":21,"nodeType":"573","endLine":304,"endColumn":79},{"ruleId":"475","replacedBy":"574"},{"ruleId":"477","replacedBy":"575"},{"ruleId":"489","severity":1,"message":"490","line":6,"column":1,"nodeType":"491","endLine":43,"endColumn":2},{"ruleId":"479","severity":1,"message":"576","line":1,"column":8,"nodeType":"481","messageId":"482","endLine":1,"endColumn":14},{"ruleId":"479","severity":1,"message":"577","line":18,"column":9,"nodeType":"481","messageId":"482","endLine":18,"endColumn":13},{"ruleId":"479","severity":1,"message":"578","line":4,"column":5,"nodeType":"481","messageId":"482","endLine":4,"endColumn":11},{"ruleId":"479","severity":1,"message":"579","line":5,"column":5,"nodeType":"481","messageId":"482","endLine":5,"endColumn":11},{"ruleId":"479","severity":1,"message":"528","line":7,"column":5,"nodeType":"481","messageId":"482","endLine":7,"endColumn":17},{"ruleId":"479","severity":1,"message":"529","line":8,"column":5,"nodeType":"481","messageId":"482","endLine":8,"endColumn":16},{"ruleId":"479","severity":1,"message":"530","line":9,"column":5,"nodeType":"481","messageId":"482","endLine":9,"endColumn":17},{"ruleId":"479","severity":1,"message":"531","line":10,"column":5,"nodeType":"481","messageId":"482","endLine":10,"endColumn":16},{"ruleId":"479","severity":1,"message":"532","line":11,"column":5,"nodeType":"481","messageId":"482","endLine":11,"endColumn":18},{"ruleId":"479","severity":1,"message":"534","line":12,"column":5,"nodeType":"481","messageId":"482","endLine":12,"endColumn":15},{"ruleId":"479","severity":1,"message":"536","line":13,"column":5,"nodeType":"481","messageId":"482","endLine":13,"endColumn":16},{"ruleId":"479","severity":1,"message":"537","line":14,"column":5,"nodeType":"481","messageId":"482","endLine":14,"endColumn":21},{"ruleId":"479","severity":1,"message":"538","line":15,"column":5,"nodeType":"481","messageId":"482","endLine":15,"endColumn":20},{"ruleId":"479","severity":1,"message":"527","line":18,"column":5,"nodeType":"481","messageId":"482","endLine":18,"endColumn":17},{"ruleId":"479","severity":1,"message":"580","line":23,"column":5,"nodeType":"481","messageId":"482","endLine":23,"endColumn":16},{"ruleId":"479","severity":1,"message":"581","line":24,"column":5,"nodeType":"481","messageId":"482","endLine":24,"endColumn":17},{"ruleId":"479","severity":1,"message":"582","line":38,"column":33,"nodeType":"481","messageId":"482","endLine":38,"endColumn":56},{"ruleId":"479","severity":1,"message":"583","line":46,"column":9,"nodeType":"481","messageId":"482","endLine":46,"endColumn":23},{"ruleId":"479","severity":1,"message":"584","line":65,"column":12,"nodeType":"481","messageId":"482","endLine":65,"endColumn":28},{"ruleId":"479","severity":1,"message":"585","line":65,"column":31,"nodeType":"481","messageId":"482","endLine":65,"endColumn":50},{"ruleId":"479","severity":1,"message":"586","line":67,"column":12,"nodeType":"481","messageId":"482","endLine":67,"endColumn":29},{"ruleId":"479","severity":1,"message":"587","line":67,"column":32,"nodeType":"481","messageId":"482","endLine":67,"endColumn":52},{"ruleId":"471","severity":1,"message":"588","line":86,"column":7,"nodeType":"473","endLine":86,"endColumn":20,"suggestions":"589"},{"ruleId":"590","severity":1,"message":"591","line":195,"column":41,"nodeType":"573","endLine":195,"endColumn":44},{"ruleId":"475","replacedBy":"592"},{"ruleId":"477","replacedBy":"593"},{"ruleId":"479","severity":1,"message":"526","line":1,"column":16,"nodeType":"481","messageId":"482","endLine":1,"endColumn":25},{"ruleId":"479","severity":1,"message":"594","line":7,"column":10,"nodeType":"481","messageId":"482","endLine":7,"endColumn":19},{"ruleId":"479","severity":1,"message":"595","line":22,"column":10,"nodeType":"481","messageId":"482","endLine":22,"endColumn":28},{"ruleId":"479","severity":1,"message":"596","line":22,"column":31,"nodeType":"481","messageId":"482","endLine":22,"endColumn":51},{"ruleId":"479","severity":1,"message":"597","line":127,"column":9,"nodeType":"481","messageId":"482","endLine":127,"endColumn":14},{"ruleId":"571","severity":1,"message":"572","line":169,"column":21,"nodeType":"573","endLine":169,"endColumn":75},{"ruleId":"475","replacedBy":"598"},{"ruleId":"477","replacedBy":"599"},{"ruleId":"479","severity":1,"message":"526","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":26},{"ruleId":"479","severity":1,"message":"600","line":6,"column":9,"nodeType":"481","messageId":"482","endLine":6,"endColumn":28},{"ruleId":"571","severity":1,"message":"572","line":15,"column":27,"nodeType":"573","endLine":15,"endColumn":160},{"ruleId":"479","severity":1,"message":"546","line":38,"column":12,"nodeType":"481","messageId":"482","endLine":38,"endColumn":17},{"ruleId":"479","severity":1,"message":"547","line":38,"column":19,"nodeType":"481","messageId":"482","endLine":38,"endColumn":27},{"ruleId":"479","severity":1,"message":"601","line":39,"column":11,"nodeType":"481","messageId":"482","endLine":39,"endColumn":23},{"ruleId":"479","severity":1,"message":"548","line":45,"column":11,"nodeType":"481","messageId":"482","endLine":45,"endColumn":24},{"ruleId":"479","severity":1,"message":"525","line":1,"column":15,"nodeType":"481","messageId":"482","endLine":1,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":8,"column":1,"nodeType":"491","endLine":238,"endColumn":2},{"ruleId":"479","severity":1,"message":"602","line":26,"column":14,"nodeType":"481","messageId":"482","endLine":26,"endColumn":21},{"ruleId":"519","severity":1,"message":"520","line":42,"column":29,"nodeType":"521","messageId":"522","endLine":42,"endColumn":31},{"ruleId":"467","severity":1,"message":"523","line":45,"column":25,"nodeType":"469","messageId":"470","endLine":45,"endColumn":27},{"ruleId":"479","severity":1,"message":"603","line":8,"column":10,"nodeType":"481","messageId":"482","endLine":8,"endColumn":20},{"ruleId":"489","severity":1,"message":"490","line":12,"column":1,"nodeType":"491","endLine":65,"endColumn":2},{"ruleId":"604","severity":1,"message":"605","line":15,"column":55,"nodeType":"606","endLine":15,"endColumn":67},{"ruleId":"475","replacedBy":"607"},{"ruleId":"477","replacedBy":"608"},{"ruleId":"609","severity":1,"message":"610","line":8,"column":20,"nodeType":"611","messageId":"612","endLine":8,"endColumn":34,"fix":"613"},{"ruleId":"479","severity":1,"message":"505","line":2,"column":9,"nodeType":"481","messageId":"482","endLine":2,"endColumn":20},{"ruleId":"475","replacedBy":"614"},{"ruleId":"477","replacedBy":"615"},{"ruleId":"479","severity":1,"message":"542","line":2,"column":19,"nodeType":"481","messageId":"482","endLine":2,"endColumn":23},{"ruleId":"479","severity":1,"message":"544","line":5,"column":10,"nodeType":"481","messageId":"482","endLine":5,"endColumn":21},{"ruleId":"471","severity":1,"message":"493","line":16,"column":9,"nodeType":"473","endLine":16,"endColumn":11,"suggestions":"616"},{"ruleId":"479","severity":1,"message":"545","line":29,"column":13,"nodeType":"481","messageId":"482","endLine":29,"endColumn":23},{"ruleId":"571","severity":1,"message":"572","line":36,"column":27,"nodeType":"573","endLine":36,"endColumn":105},{"ruleId":"479","severity":1,"message":"546","line":75,"column":12,"nodeType":"481","messageId":"482","endLine":75,"endColumn":17},{"ruleId":"479","severity":1,"message":"547","line":75,"column":19,"nodeType":"481","messageId":"482","endLine":75,"endColumn":27},{"ruleId":"479","severity":1,"message":"548","line":85,"column":11,"nodeType":"481","messageId":"482","endLine":85,"endColumn":24},{"ruleId":"590","severity":1,"message":"591","line":13,"column":15,"nodeType":"573","endLine":13,"endColumn":49},{"ruleId":"590","severity":1,"message":"591","line":17,"column":15,"nodeType":"573","endLine":17,"endColumn":36},{"ruleId":"590","severity":1,"message":"591","line":21,"column":15,"nodeType":"573","endLine":21,"endColumn":39},{"ruleId":"590","severity":1,"message":"591","line":25,"column":15,"nodeType":"573","endLine":25,"endColumn":36},{"ruleId":"590","severity":1,"message":"591","line":29,"column":15,"nodeType":"573","endLine":29,"endColumn":37},{"ruleId":"590","severity":1,"message":"591","line":33,"column":15,"nodeType":"573","endLine":33,"endColumn":37},{"ruleId":"590","severity":1,"message":"591","line":43,"column":11,"nodeType":"573","endLine":43,"endColumn":60},{"ruleId":"479","severity":1,"message":"487","line":1,"column":8,"nodeType":"481","messageId":"482","endLine":1,"endColumn":24},{"ruleId":"489","severity":1,"message":"490","line":7,"column":1,"nodeType":"491","endLine":55,"endColumn":2},{"ruleId":"479","severity":1,"message":"617","line":58,"column":9,"nodeType":"481","messageId":"482","endLine":58,"endColumn":19},{"ruleId":"479","severity":1,"message":"618","line":95,"column":9,"nodeType":"481","messageId":"482","endLine":95,"endColumn":19},{"ruleId":"479","severity":1,"message":"619","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":25},{"ruleId":"479","severity":1,"message":"620","line":4,"column":10,"nodeType":"481","messageId":"482","endLine":4,"endColumn":20},{"ruleId":"479","severity":1,"message":"621","line":12,"column":9,"nodeType":"481","messageId":"482","endLine":12,"endColumn":25},{"ruleId":"519","severity":1,"message":"622","line":169,"column":70,"nodeType":"521","messageId":"522","endLine":169,"endColumn":72},{"ruleId":"479","severity":1,"message":"623","line":313,"column":49,"nodeType":"481","messageId":"482","endLine":313,"endColumn":53},{"ruleId":"519","severity":1,"message":"540","line":377,"column":64,"nodeType":"521","messageId":"541","endLine":377,"endColumn":66},{"ruleId":"624","severity":1,"message":"625","line":386,"column":49,"nodeType":"573","endLine":386,"endColumn":153},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.","ArrayExpression",["626"],"no-native-reassign",["627"],"no-negated-in-lhs",["628"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Accordion' is defined but never used.","'Button' is defined but never used.","'updateListOrders' is defined but never used.","'orderscontroller' is defined but never used.","'retornoDeProdutos' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'setIsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["629"],["627"],["628"],"'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'Figure' is defined but never used.","'NavDropdown' is defined but never used.","'SplitButton' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'BrowserRouter' is defined but never used.","'useDispatch' is defined but never used.","'Swal' is defined but never used.","'changeAuthenticated' is defined but never used.","'MdStoreMallDirectory' is defined but never used.","Unexpected default export of anonymous function",["627"],["628"],["627"],["628"],"'expr' is defined but never used.",["627"],["628"],["627"],["628"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","'formValues' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'MDBContainer' is defined but never used.","'MDBCardImage' is defined but never used.","'MDBCardBody' is defined but never used.","'MDBCardTitle' is defined but never used.","'MDBCardText' is defined but never used.","'MDBCardFooter' is defined but never used.","'MDBIcon' is defined but never used.","'MDBTooltip' is defined but never used.","'MDBBadge' is defined but never used.","'MDBCarousel' is defined but never used.","'MDBCarouselInner' is defined but never used.","'MDBCarouselItem' is defined but never used.","'MDBBtn' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Form' is defined but never used.","'useSelector' is defined but never used.","'getAllSales' is defined but never used.","'testeClick' is assigned a value but never used.","'thing' is assigned a value but never used.","'setThing' is assigned a value but never used.","'filteredItems' is assigned a value but never used.",["627"],["628"],"'PropagateLoader' is defined but never used.","'showHideLoading' is defined but never used.","'subiu' is assigned a value but never used.","'product' is defined but never used.",["627"],["628"],"'Router' is defined but never used.","'ModalPage' is defined but never used.","'axios' is defined but never used.","Unexpected default export of anonymous class","Assign object to a variable before exporting as module default","'noFoundPicture' is defined but never used.","'changeViewModal' is defined but never used.","'MDBTable' is defined but never used.","'MDBTableHead' is defined but never used.","'MDBTableBody' is defined but never used.","'dispatch' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'props.match.params.idcategory'. Either include it or remove the dependency array.",["630"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["627"],["628"],"'Navbar' is defined but never used.","'user' is assigned a value but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'MDBBtnGroup' is defined but never used.","'MDBCloseIcon' is defined but never used.","'updateProductsOnTheCart' is defined but never used.","'productsOnCart' is assigned a value but never used.","'showProductModal' is assigned a value but never used.","'setShowProductModal' is assigned a value but never used.","'showShoppingCarts' is assigned a value but never used.","'setShowShoppingCarts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ProductController' and 'idcategory'. Either include them or remove the dependency array.",["631"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["627"],["628"],"'ListGroup' is defined but never used.","'totalValueProducts' is assigned a value but never used.","'setTotalValueProduts' is assigned a value but never used.","'total' is assigned a value but never used.",["627"],["628"],"'FaRegMehRollingEyes' is defined but never used.","'handleAction' is assigned a value but never used.","'isEmpty' is defined but never used.","'changeText' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["627"],["628"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"632","text":"633"},["627"],["628"],["634"],"'handleSkip' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'transpileModule' is defined but never used.","'makeStyles' is defined but never used.","'FiMoreHorizontal' is defined but never used.","Array.prototype.filter() expects a return value from arrow function.","'cont' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"635","fix":"636"},"no-global-assign","no-unsafe-negation",{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},[277,277],"()",{"desc":"637","fix":"643"},"Update the dependencies array to be: [chart]",{"range":"644","text":"645"},"Update the dependencies array to be: [dispatch]",{"range":"646","text":"647"},"Update the dependencies array to be: [props.match.params.idcategory]",{"range":"648","text":"649"},"Update the dependencies array to be: [ProductController, currentPage, idcategory]",{"range":"650","text":"651"},{"range":"652","text":"647"},[1492,1494],"[chart]",[1167,1169],"[dispatch]",[1551,1553],"[props.match.params.idcategory]",[2390,2403],"[ProductController, currentPage, idcategory]",[526,528]]