[{"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\reportWebVitals.js":"1","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Navbar.js":"2","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\CadastrarFornecedores.js":"3","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutosViaNota.js":"4","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\CategoryController.js":"5","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProductController.js":"6","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\CadastrarProdutos.js":"7","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\ListProducts.js":"8","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Home.js":"9","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutos.js":"10","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\index.js":"11","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\SaidaDeProdutos.js":"12","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\ListarFornecedores.js":"13","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProviderController.js":"14","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\SizeClothesController.js":"15","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\App.js":"16","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\clients\\cadastroClients.js":"17","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ClientController.js":"18","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\services\\serviceCep.js":"19","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\clients\\listClients.js":"20","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\orders\\addNewOrder.js":"21","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\OrdersController.js":"22","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\saleman\\cadastrarVendedores.js":"23","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\saleman\\listarVendedores.js":"24","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\config\\index.js":"25"},{"size":362,"mtime":1606175593111,"results":"26","hashOfConfig":"27"},{"size":6186,"mtime":1610418957909,"results":"28","hashOfConfig":"27"},{"size":7188,"mtime":1607266090664,"results":"29","hashOfConfig":"27"},{"size":10292,"mtime":1607284239792,"results":"30","hashOfConfig":"27"},{"size":319,"mtime":1607149887255,"results":"31","hashOfConfig":"27"},{"size":4344,"mtime":1608598363949,"results":"32","hashOfConfig":"27"},{"size":27561,"mtime":1608532962633,"results":"33","hashOfConfig":"27"},{"size":21479,"mtime":1608599848964,"results":"34","hashOfConfig":"27"},{"size":2859,"mtime":1610417673113,"results":"35","hashOfConfig":"27"},{"size":8249,"mtime":1607220320373,"results":"36","hashOfConfig":"27"},{"size":500,"mtime":1606175593111,"results":"37","hashOfConfig":"27"},{"size":10634,"mtime":1607220404506,"results":"38","hashOfConfig":"27"},{"size":2806,"mtime":1607261929807,"results":"39","hashOfConfig":"27"},{"size":805,"mtime":1607227479692,"results":"40","hashOfConfig":"27"},{"size":314,"mtime":1607149466256,"results":"41","hashOfConfig":"27"},{"size":2496,"mtime":1610418997159,"results":"42","hashOfConfig":"27"},{"size":8221,"mtime":1609286694524,"results":"43","hashOfConfig":"27"},{"size":2532,"mtime":1609480704566,"results":"44","hashOfConfig":"27"},{"size":375,"mtime":1609283754302,"results":"45","hashOfConfig":"27"},{"size":4629,"mtime":1609481259350,"results":"46","hashOfConfig":"27"},{"size":15299,"mtime":1610412183582,"results":"47","hashOfConfig":"27"},{"size":615,"mtime":1609708840700,"results":"48","hashOfConfig":"27"},{"size":3547,"mtime":1610410968455,"results":"49","hashOfConfig":"27"},{"size":645,"mtime":1609807586726,"results":"50","hashOfConfig":"27"},{"size":2708,"mtime":1610420520800,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1x2mrmt",{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\reportWebVitals.js",[],["115","116"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Navbar.js",["117","118","119","120","121"],"import React from \"react\";\r\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem , Button} from 'react-bootstrap';\r\nimport {Link , BrowserRouter as Router} from \"react-router-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./indexComponents.css\"\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\n\r\nfunction entradaViaNota()\r\n{\r\n    \r\n    Swal.mixin({\r\n        input: 'text',\r\n        confirmButtonText: 'Proximo &rarr;',\r\n        showCancelButton: true,\r\n        progressSteps: ['1', '2', '3']\r\n      }).queue([\r\n        {\r\n          title: 'Dados Da Nota',\r\n          text: 'Por favor Informe o Numero da Nota Fiscal'\r\n        },\r\n        {\r\n            title: 'Dados Da Nota',\r\n            text: 'Por favor a quantidade de Produtos da Nota Fiscal'\r\n          },\r\n          {\r\n            title: 'Dados Da Nota',\r\n            text: 'Por favor Informe o Fornecedor da Nota Fiscal'\r\n          },\r\n      ]).then((result) => {\r\n        if (result.value) {\r\n          const answers = JSON.stringify(result.value)\r\n          Swal.fire({\r\n            title: 'Tudo certo, estamos te Redirecionando...',\r\n            timer : 1500,\r\n            icon : \"success\",\r\n            willClose : ()=>{\r\n                window.location.href=\"/lancamentoDeProdutosViaNota/\" + result.value[0] +\"/\" + result.value[1] +\"/\" + result.value[2]\r\n            },\r\n            showConfirmButton : false\r\n          })\r\n        }\r\n      })\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ()=>{\r\n    return(\r\n            <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand><Link to=\"/\" className=\"whiteTextMrsGringa\">Mrs.Gringa</Link></Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n                <NavDropdown title=\" Produtos\"className=\"linkToButton\" id=\"collasible-nav-dropdown\">\r\n                    <NavDropdown.Item ><Link className=\"linkToButton black\" to=\"/cadastrarProduto\">Cadastrar Produtos</Link></NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\" className=\"linkToButton black\"><Link className=\"linkToButton black\" to=\"/entradaDeProdutos\">Entrada em Produtos</Link></NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item ><Link className=\"linkToButton black\" to=\"/listarProdutos\">Listar Produtos</Link></NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item onClick={entradaViaNota} >Entrada de Produtos Via Nota</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Notas\" id=\"collasible-nav-dropdown\" className=\"linkToButton\">\r\n                    <NavDropdown.Item href=\"#action/3.1\" className=\"linkToButton black\">Cadastrar Notas</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\" className=\"linkToButton black\">Entrada em Notas</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\" className=\"linkToButton black\">Listar Notas</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Fornecedores\" id=\"collasible-nav-dropdown\" className=\"linkToButton\">\r\n                    <NavDropdown.Item className=\"linkToButton black\"><Link className=\"linkToButton black\" to=\"/cadastrarFornecedor\">Cadastrar Fornecedores</Link></NavDropdown.Item>\r\n                    <NavDropdown.Item ><Link className=\"linkToButton black\" to=\"/listarFornecedores\">Listar Fornecedores</Link></NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Clientes\" id=\"collasible-nav-dropdown\" className=\"linkToButton\">\r\n                <NavDropdown.Item ><Link className=\"linkToButton black\" to=\"/cadastrarCliente\">Cadastrar Clientes</Link></NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item ><Link className=\"linkToButton black\" to=\"/listarClientes\">Listar Clientes</Link></NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Pedidos\" id=\"collasible-nav-dropdown\" className=\"linkToButton\">\r\n                    <NavDropdown.Item href=\"#action/3.1\" className=\"linkToButton black\">Listar Pedidos</NavDropdown.Item>\r\n                    <NavDropdown.Item ><Link className=\"linkToButton black\" to=\"/lancamentoPedido\">Entrada Manual de Pedidos</Link></NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Relatorios\" id=\"collasible-nav-dropdown\" className=\"linkToButton\">\r\n                    <NavDropdown.Item href=\"#action/3.1\" className=\"linkToButton black\">Relatório de Notas</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.2\" className=\"linkToButton black\">Relatório de Pedidos</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.3\" className=\"linkToButton black\">Relatório de Vendas</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.4\" className=\"linkToButton black\">Relatório de Fornecedores</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.5\" className=\"linkToButton black\">Relatorio de Estoque</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Vendedores\" id=\"collasible-nav-dropdown\" className=\"linkToButton\">\r\n                    <NavDropdown.Item className=\"linkToButton black\"><Link className=\"linkToButton black\" to=\"/cadastrarVendedores\">Cadastrar Vendedores</Link></NavDropdown.Item>\r\n                    <NavDropdown.Item className=\"linkToButton black\"><Link className=\"linkToButton black\" to=\"/listarVendedores\">Listar Vendedores</Link></NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\" className=\"linkToButton black\">Cadastrar Cupom</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"#action/3.4\" className=\"linkToButton black\">Listar Cupons</NavDropdown.Item>\r\n                </NavDropdown>\r\n            </Nav>\r\n            <Nav>\r\n            <Link className=\"linkToButton black\" to=\"/main/config/tabs\"><Button id=\"botaoConfiguracoes\"></Button></Link>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\CadastrarFornecedores.js",[],["122","123"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutosViaNota.js",["124","125","126","127"],"import React from 'react'\r\nimport {Table, Button} from 'react-bootstrap'\r\nimport \"./Products.css\"\r\nimport product from \"../../../Controller/ProductController\"\r\nimport sizeclothes from \"../../../Controller/SizeClothesController\"\r\nimport provider from \"../../../Controller/ProviderController\"\r\nimport category from \"../../../Controller/CategoryController\"\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst SizeClothes = new sizeclothes()\r\nconst Provider = new provider()\r\nconst Category = new category()\r\n\r\nlet Tamanhos = '<option value=\"default\" >Selecione</option>'\r\nlet Fornecedores = '<option value=\"default\" >Selecione</option>'\r\nlet Categorias = '<option value=\"default\" >Selecione</option>'\r\nvar tr = ''\r\nexport default class EntradaDeProdutosViaNota extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            params : {\r\n                numeroDaNota : this.props.match.params.numeroNota,\r\n                quantidadeDeProdutos : this.props.match.params.quantidadeProdutos,\r\n                fornecedor : this.props.match.params.fornecedor,\r\n            },\r\n            fornecedores : [],\r\n            categorias : [],\r\n            tamanho : []\r\n        }\r\n        this.handleSend = this.handleSend.bind(this)\r\n        this.verifyFieldsForLaunch = this.verifyFieldsForLaunch.bind(this)\r\n    }\r\n\r\n\r\n    handleSend(event)\r\n    {\r\n        if(this.verifyFieldsForLaunch())\r\n        {\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    verifyFieldsForLaunch()\r\n    {\r\n       var quantidadeProdutos = this.state.params.quantidadeDeProdutos\r\n\r\n       for(var i = 0 ; i <= quantidadeProdutos ; i++)\r\n       {\r\n           if(i>0)\r\n           {\r\n                if(document.getElementById('nomeProduto'+i).value === \"\"){return Swal.fire({title:\"ERRO\" , text: \"Preencha o Nome do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('descricaoProduto'+i).value === \"\"){return  Swal.fire({title:\"ERRO\" , text: \"Preencha o Descrição do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('referencia'+i).value === \"\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha a Referência do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('sizeClothes'+i).value === \"\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha o Tamanho do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('corProduto'+i).value === \"\" || document.getElementById('corProduto'+i).value === \"default\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha a Cor do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('category'+i).value === \"\" || document.getElementById('category'+i).value === \"defeault\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha a Categoria do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('precoCompra'+i).value === \"\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha o Preço de Compra do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('precoVenda'+i).value === \"\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha o Preço de Venda do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('forncedor'+i).value === \"\" || document.getElementById('forncedor'+i).value === \"defeault\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha o Fornecedor do Produto\" + i , icon : \"error\"})}\r\n                if(document.getElementById('quantidade'+i).value === \"\"){ return Swal.fire({title:\"ERRO\" , text: \"Preencha a Quantidade do Produto\" + i , icon : \"error\"})}\r\n                else{return true}\r\n            }\r\n       }\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n\r\n        await Provider.listAllProviders().then(res => {\r\n            this.setState({fornecedores : res})\r\n\r\n            res.map(index => {\r\n                Fornecedores += \"<option value=\"+index.idprovider+\">\"+index.idprovider+\" - \"+index.name+\"</option>\"\r\n            })\r\n        })\r\n        SizeClothes.listAllSizeClothes().then(res => {\r\n            this.setState({tamanho : res})\r\n\r\n            res.map(index => {\r\n                Tamanhos += \"<option value=\"+index.idsizeclothes+\">\"+index.size+\"</option>\"\r\n            })\r\n        })\r\n        await Category.listAllCategories().then(res => {\r\n            this.setState({categorias : res})\r\n            res.map(index => {\r\n                Categorias += \"<option value=\"+index.idcategory+\">\"+index.idcategory+\" - \"+index.name+\"</option>\"\r\n            })\r\n\r\n\r\n        })\r\n\r\n        await this.montagemDaTabela(Fornecedores , Tamanhos , Categorias)\r\n\r\n    }\r\n\r\n\r\n    async montagemDaTabela(Fornecedores , Tamanhos , Categorias) {\r\n        if(this.state.params.quantidadeDeProdutos > 0)\r\n        {\r\n            for(var i = 0 ; i <= this.state.params.quantidadeDeProdutos ; i++)\r\n            {\r\n                if(i > 0)\r\n                {\r\n                    var tr = \"<tr key='linhaProduto\"+i+\"' id='linhaProduto\"+i+\"'>\" +\r\n                    \"<td><input type='text' class='form-control' id='nomeProduto\"+i+\"'/></td>\"+\r\n                    \"<td><input type='text' class='form-control' id='descricaoProduto\"+i+\"'/></td>\"+\r\n                    \"<td><input type='text' class='form-control' id='referencia\"+i+\"'/></td>\"+\r\n                    \"<td><select class='form-control' id='corProduto\"+i+\"'>\"+\r\n                            \"<option value='default'>Selecione</option>\"+\r\n                            \"<option>Preto</option>\"+\r\n                            \"<option>Branco</option>\"+\r\n                            \"<option>Bege</option>\"+\r\n                            \"<option>Sem Cores</option>\"+\r\n                            \"<option>Amarelo</option>\"+\r\n                            \"<option>Azul</option>\"+\r\n                            \"<option>Roxo</option>\"+\r\n                    \"</select></td>\"+\r\n                    \"<td><select class='form-control' id='sizeClothes\"+i+\"'>\"+\r\n                        Tamanhos +\r\n                    \"</select></td>\"+\r\n                    \"<td><select class='form-control' id='category\"+i+\"'>\"+\r\n                        Categorias +\r\n                    \"</select></td>\"+\r\n                    \"<td><input type='number' class='form-control' id='precoCompra\"+i+\"'/></td>\"+\r\n                    \"<td><input type='number' class='form-control' id='precoVenda\"+i+\"'/></td>\"+\r\n                    \"<td><select type='text' class='form-control' id='forncedor\"+i+\"'>\"+\r\n                    Fornecedores + \r\n                    \"</select></td>\"+\r\n                    \"<td><input type='number' class='form-control' id='quantidade\"+i+\"'/></td>\"+\r\n                \"</tr>\"\r\n                    document.getElementById('corpoLancamentos').innerHTML += tr\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"containerParametros\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\"></div>\r\n                        <div className=\"col-md-4\">\r\n                            <h2>\r\n                                Informações da Nota\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\"></div>\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-md-4\">\r\n                            <label>Numero da Nota</label>\r\n                            <input className=\"form-control\" readOnly={true} value={this.state.params.numeroDaNota} />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <label>Quantidade de Produtos da Nota</label>\r\n                            <input className=\"form-control\" readOnly={true} value={this.state.params.quantidadeDeProdutos} />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <label>Fornecedor da Nota</label>\r\n                            <input className=\"form-control\" readOnly={true} value={this.state.params.fornecedor} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"tabelaDeLançamentos\">\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-md-4\"></div>\r\n                        <div className=\"col-md-4\">\r\n                            <h2>\r\n                                Lançamentos\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"col-md-4\"></div>\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <Table bordered hover size=\"sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Nome</th>\r\n                                    <th>Descrição</th>\r\n                                    <th>Referencia</th>\r\n                                    <th className=\"colunasSelectEntradaViaNota\">Cor</th>\r\n                                    <th className=\"colunasSelectEntradaViaNota\">Tamanho</th>\r\n                                    <th className=\"colunasSelectEntradaViaNota\">Categoria</th>\r\n                                    <th>Preço de Compra</th>\r\n                                    <th>Preço de Venda</th>\r\n                                    <th className=\"colunasSelectEntradaViaNota\">Fornecedor</th>\r\n                                    <th>Quantidade</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"corpoLancamentos\">\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-md-6\">\r\n                            <Button onClick={this.handleSend}  variant=\"outline-success\">Lançar ✓</Button>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Button variant=\"outline-danger\">Cancelar X </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}",["128","129"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\CategoryController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProductController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\CadastrarProdutos.js",["130"],"import {React , Component} from \"react\";\r\nimport {Form,Button} from \"react-bootstrap\"\r\nimport \"./Products.css\"\r\nimport sizeclothes from  \"../../../Controller/SizeClothesController\"\r\nimport category from  \"../../../Controller/CategoryController\"\r\nimport provider from  \"../../../Controller/ProviderController\"\r\nimport product from  \"../../../Controller/ProductController\"\r\nimport Swal from \"sweetalert2\";\r\nimport noImagePng from \"../../../images/no-photo.png\"\r\n\r\nconst Category = new category()\r\nconst SizeClothes = new sizeclothes()\r\nconst Provider = new provider()\r\nconst Product = new product()\r\n\r\n\r\nexport default class CadastrarProdutos extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            newProduct: {\r\n                name : \"\",\r\n                description : \"\",\r\n                reference : \"\",\r\n                color : \"\",\r\n                idsizeclothes : 0,\r\n                idcategory : 0,\r\n                buyvalue : 0,\r\n                sellvalue : 0,\r\n                idprovider : 0,\r\n                quantity : 0\r\n            },\r\n            images : {\r\n                image1 : noImagePng,\r\n                image2 : noImagePng,\r\n                image3 : noImagePng,\r\n                image4 : noImagePng,\r\n                image5 : noImagePng,\r\n            },\r\n            providers : [],\r\n            sizeclothes : [],\r\n            categories : []\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleImageChange = this.handleImageChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        SizeClothes.listAllSizeClothes().then(res => {this.setState({sizeclothes : res})})\r\n        Category.listAllCategories().then(res => {this.setState({categories : res})})\r\n        Provider.listAllProviders().then(res => {this.setState({providers : res})})\r\n    }\r\n\r\n\r\n\r\n    handleImageChange(event) {\r\n\r\n        let subiu = 0;\r\n\r\n        let timerInterval;\r\n            Swal.fire({\r\n            title: 'Carregando Imagem ...',\r\n            timer: 12000,\r\n            timerProgressBar: true,\r\n            didOpen: () => {\r\n\r\n                Swal.showLoading()\r\n                   Product.PostProductImage(event.target.files[0])\r\n                   .then(data => {\r\n                        if(event.target.id === \"fotoProdutoCapa\")\r\n                        {\r\n                            if(data.data.error)\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image1 = noImagePng\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Erro\",\r\n                                    icon : \"error\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<p>Erro de Upload Tente Novamente mais tarde</p>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n                            else\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image1 = data.data.link\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Sucesso ! \",\r\n                                    icon : \"success\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<h5>Upload Realizado com Sucesso !</h5>\",\r\n                                    timer : 1500\r\n                                })\r\n                                \r\n                            }\r\n                        }\r\n                        else if(event.target.id === \"fotoProduto2\")\r\n                        {\r\n                            if(data.data.error)\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image2 = noImagePng\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Erro\",\r\n                                    icon : \"error\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<p>Erro de Upload Tente Novamente mais tarde</p>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n                            else\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image2 = data.data.link\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Sucesso ! \",\r\n                                    icon : \"success\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<h5>Upload Realizado com Sucesso !</h5>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n                        }\r\n                        else if(event.target.id === \"fotoProduto3\")\r\n                        {\r\n                            if(data.data.error)\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image3 = noImagePng\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Erro\",\r\n                                    icon : \"error\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<p>Erro de Upload Tente Novamente mais tarde</p>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n                            else\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image3 = data.data.link\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Sucesso ! \",\r\n                                    icon : \"success\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<h5>Upload Realizado com Sucesso !</h5>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n                        }\r\n                        else if(event.target.id === \"fotoProduto4\")\r\n                        {\r\n                            if(data.data.error)\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image4 = noImagePng\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Erro\",\r\n                                    icon : \"error\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<p>Erro de Upload Tente Novamente mais tarde</p>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n                            else\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image4 = data.data.link\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Sucesso ! \",\r\n                                    icon : \"success\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<h5>Upload Realizado com Sucesso !</h5>\",\r\n                                    timer : 1500\r\n                                })\r\n                                \r\n                            }\r\n                        }\r\n                        else if(event.target.id === \"fotoProduto5\")\r\n                        {\r\n                            if(data.data.error)\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image5 = noImagePng\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Erro\",\r\n                                    icon : \"error\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<p>Erro de Upload Tente Novamente mais tarde</p>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n                            else\r\n                            {\r\n                                Swal.close()\r\n                                let state = this.state\r\n                                state.images.image5 = data.data.link\r\n                                this.setState(state)\r\n                                Swal.fire({\r\n                                    title : \"Sucesso ! \",\r\n                                    icon : \"success\",\r\n                                    showConfirmButton : false,\r\n                                    html : \"<h5>Upload Realizado com Sucesso !</h5>\",\r\n                                    timer : 1500\r\n                                })\r\n                            }\r\n\r\n                        }\r\n                   })\r\n                   .catch(err=>{\r\n                       alert(err)\r\n                   })\r\n            },\r\n            willClose: () => {\r\n                clearInterval(timerInterval)\r\n            }\r\n            })\r\n\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n\r\n        let products = this.state.newProduct\r\n\r\n        if(event.target.id === \"formGroupnameProduct\"){products.name = event.target.value}\r\n        if(event.target.id === \"formGroupDescriptionProduct\"){products.description = event.target.value}\r\n        if(event.target.id === \"formGroupReference\"){products.reference = event.target.value}\r\n        if(event.target.id === \"formColorProduct\"){products.color = event.target.value}\r\n        if(event.target.id === \"formSizeProduct\"){products.idsizeclothes = event.target.value}\r\n        if(event.target.id === \"formCategoryProduct\"){products.idcategory = event.target.value}\r\n        if(event.target.id === \"formGroupBuyValue\"){products.buyvalue = event.target.value}\r\n        if(event.target.id === \"formGroupSellValue\"){products.sellvalue = event.target.value}\r\n        if(event.target.id === \"formProviderProduct\"){products.idprovider = event.target.value}\r\n        if(event.target.id === \"formGroupQuantityValue\"){products.quantity = event.target.value}\r\n\r\n        this.setState({newProduct : products})\r\n      }\r\n\r\n    handleSubmit(event) {\r\n    \r\n\r\n        if(this.verifyForm())\r\n        {\r\n            Product.RegisterNewProduct(this.state.newProduct , this.state.images)\r\n            .then(res => {\r\n                if(res.success)\r\n                {\r\n                    Swal.fire({\r\n                        title : \"Sucesso : \",\r\n                        text : \"Produto Cadastrado com Sucesso\",\r\n                        icon: \"success\",\r\n                        showConfirmButton:  false,\r\n                        timer : 2000,\r\n                        willClose : ()=>{\r\n                            window.location.href = \"/listarProdutos\"\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        event.preventDefault();\r\n      }\r\n\r\n\r\n      verifyForm = ()=>\r\n      {\r\n          const {newProduct , images} = this.state;\r\n\r\n        if(newProduct.name === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Nome\" , icon : \"error\"})\r\n        else if(newProduct.description === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Descrição\" , icon : \"error\"})\r\n        else if(this.state.newProduct.reference === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Referencia\" , icon : \"error\"})\r\n        else if(newProduct.color === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Cor\" , icon : \"error\"})\r\n        else if(newProduct.idsizeclothes === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Tamanho\" , icon : \"error\"})\r\n        else if(newProduct.idcategory === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Categoria\" , icon : \"error\"})\r\n        else if(newProduct.buyvalue === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Preço de Compra\" , icon : \"error\"})\r\n        else if(newProduct.sellvalue === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Preço de Venda\" , icon : \"error\"})\r\n        else if(newProduct.idprovider === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Fornecedor\" , icon : \"error\"})\r\n        else if(newProduct.quantity === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Quantidade\" , icon : \"error\"})\r\n        else if(images.image1 === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Selecione a Imagem de Capa\" , icon : \"error\"})\r\n        else if(images.image2 === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Selecione a Imagem 2\" , icon : \"error\"})\r\n        else if(images.image3 === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Selecione a Imagem 3\" , icon : \"error\"})\r\n        else if(images.image4 === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Selecione a Imagem 4\" , icon : \"error\"})\r\n        else if(images.image5 === \"\")return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Selecione a Imagem 5\" , icon : \"error\"})\r\n        else{return true}\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupnameProduct\">\r\n                                <Form.Label>Nome do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.name} onChange={this.handleChange} type=\"text\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupDescriptionProduct\">\r\n                                <Form.Label>Descrição do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.description} onChange={this.handleChange} type=\"text\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupReference\">\r\n                                <Form.Label>Referencia do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.reference} onChange={this.handleChange} type=\"text\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group className=\"alignCenter\" controlId=\"formColorProduct\">\r\n                                <Form.Label>Cor do Produto</Form.Label>\r\n                                <Form.Control  value={this.state.newProduct.color} onChange={this.handleChange} as=\"select\" defaultValue=\"Choose...\">\r\n                                    <option>Selecione a Cor Do Produto</option>\r\n                                    <option>Preto</option>\r\n                                    <option>Branco</option>\r\n                                    <option>Bege</option>\r\n                                    <option>Sem Cores</option>\r\n                                    <option>Amarelo</option>\r\n                                    <option>Azul</option>\r\n                                    <option>Roxo</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3\">\r\n                                <Form.Group className=\"alignCenter\" controlId=\"formSizeProduct\">\r\n                                    <Form.Label>Tamanho do Produto/Peça</Form.Label>\r\n                                    <Form.Control value={this.state.newProduct.idsizeclothes} onChange={this.handleChange}  as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Selecione o Tamanho da Peça</option>\r\n                                        {\r\n                                        this.state.sizeclothes.map((index)=>{\r\n                                            return (\r\n                                            <option key={index.idsizeclothes} value={index.idsizeclothes}>{index.idsizeclothes}-{index.description}</option>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                                <Form.Group className=\"alignCenter\" controlId=\"formCategoryProduct\">\r\n                                    <Form.Label>Categoria do Produto</Form.Label>\r\n                                    <Form.Control value={this.state.newProduct.idcategory} onChange={this.handleChange}  as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Selecione a Categoria do Produto/Peça</option>\r\n                                        {\r\n                                            this.state.categories.map(index => {\r\n                                                return(\r\n                                                <option key={index.idcategory} value={index.idcategory}>{index.idcategory} - {index.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupBuyValue\">\r\n                                <Form.Label>Preço de COMPRA do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.buyvalue} onChange={this.handleChange} type=\"number\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupSellValue\">\r\n                                <Form.Label>Preço de VENDA do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.sellvalue} onChange={this.handleChange} type=\"number\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3\">\r\n                                <Form.Group className=\"alignCenter\" controlId=\"formProviderProduct\">\r\n                                    <Form.Label>Fornecedor</Form.Label>\r\n                                    <Form.Control value={this.state.newProduct.idprovider} onChange={this.handleChange}  as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Selecione o Fornecedor de compra do produto/peça</option>\r\n                                        {\r\n                                            this.state.providers.map(index => {\r\n                                                return (\r\n                                                    <option key={index.idprovider} value={index.idprovider}>{index.idprovider} - {index.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupQuantityValue\">\r\n                                <Form.Label>Quantidade</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.quantity} onChange={this.handleChange} type=\"number\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\" style={{padding : \"20px\" , border : \"solid 1px lightgray\" , borderRadius : \"5px\" , display:\"flex\" , justifyContent:\"space-between\"}}>\r\n                    {/* <Form.Group>\r\n                        <Form.File id=\"imagem1Produto\" onChange={this.handleImageChange} label=\"1\" />\r\n                        <img width=\"200px\" height=\"200px\" src=\"https://i.imgur.com//pu1YkGx.jpg\"></img>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.File id=\"imagem2Produto\" onChange={this.handleImageChange} label=\"2\" />\r\n                        <img width=\"200px\" height=\"200px\" src=\"https://i.imgur.com//pu1YkGx.jpg\"></img>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.File id=\"imagem3Produto\" onChange={this.handleImageChange} label=\"3\" />\r\n                        <img width=\"200px\" height=\"200px\" src=\"https://i.imgur.com//pu1YkGx.jpg\"></img>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.File id=\"imagem4Produto\" onChange={this.handleImageChange} label=\"4\" />\r\n                        <img width=\"200px\" height=\"200px\" src=\"https://i.imgur.com//pu1YkGx.jpg\"></img>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.File id=\"imagem5Produto\" onChange={this.handleImageChange} label=\"5\" />\r\n                        <img width=\"200px\" height=\"200px\" src=\"https://i.imgur.com//pu1YkGx.jpg\"></img>\r\n                    </Form.Group> */}\r\n                        <div className=\"multiple_upload\">\r\n                            <input type=\"file\" onChange={this.handleImageChange} id=\"fotoProdutoCapa\"  className=\"uploadChange\" />\r\n                            <div className=\"message\"><span>Selecionar Foto da Capa</span></div>\r\n                            <input type=\"button\" className=\"botao\" value=\"Upload\" />\r\n                            <div className=\"lista\">\r\n                                <img src={this.state.images.image1} alt=\"ImagemProduto1\" width=\"290px\" height=\"250px\"></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple_upload\">\r\n                            <input type=\"file\" onChange={this.handleImageChange} id=\"fotoProduto2\"  className=\"uploadChange\" />\r\n                            <div className=\"message\"><span>Selecionar Foto 2</span></div>\r\n                            <input type=\"button\" className=\"botao\" value=\"Upload\" />\r\n                            <div className=\"lista\">\r\n                                <img src={this.state.images.image2} alt=\"ImagemProduto2\" width=\"290px\" height=\"250px\"></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple_upload\">\r\n                            <input type=\"file\" onChange={this.handleImageChange} id=\"fotoProduto3\"  className=\"uploadChange\" />\r\n                            <div className=\"message\"><span>Selecionar Foto 3</span></div>\r\n                            <input type=\"button\" className=\"botao\" value=\"Upload\" />\r\n                            <div className=\"lista\">\r\n                                <img src={this.state.images.image3} alt=\"ImagemProduto3\" width=\"290px\" height=\"250px\"></img>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\" style={{padding : \"20px\" , border : \"solid 1px lightgray\" , borderRadius : \"5px\" , display:\"flex\" , justifyContent:\"center\"}}>\r\n                        <div className=\"multiple_upload\">\r\n                            <input type=\"file\" onChange={this.handleImageChange} id=\"fotoProduto4\"  className=\"uploadChange\" />\r\n                            <div className=\"message\"><span>Selecionar Foto 4</span></div>\r\n                            <input type=\"button\" className=\"botao\" value=\"Upload\" />\r\n                            <div className=\"lista\">\r\n                                <img src={this.state.images.image4} alt=\"ImagemProduto4\" width=\"290px\" height=\"250px\"></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple_upload\">\r\n                            <input type=\"file\" onChange={this.handleImageChange} id=\"fotoProduto5\"  className=\"uploadChange\" />\r\n                            <div className=\"message\"><span>Selecionar Foto 5</span></div>\r\n                            <input type=\"button\" className=\"botao\" value=\"Upload\" />\r\n                            <div className=\"lista\">\r\n                                <img src={this.state.images.image5} alt=\"ImagemProduto5\" width=\"290px\" height=\"250px\"></img>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"row col-md-12 caixadeBotoes\">\r\n                        <div className=\"col-md-3\">\r\n                            <Button type=\"submit\" size=\"lg\" className=\"btn btn-success\">Cadastrar ✓</Button>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Button size=\"lg\" className=\"btn btn-danger\">Cancelar X</Button>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Button size=\"lg\" className=\"btn btn-warning\">Limpar</Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n",["131","132"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\ListProducts.js",["133","134","135","136","137"],"import React, { Component } from \"react\";\r\nimport {Table , Button} from \"react-bootstrap\"\r\nimport Product from \"../../../Controller/ProductController\"\r\nimport Swal from 'sweetalert2'\r\nimport \"./Products.css\"\r\n//Bootstrap and jQuery libraries\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\n\r\nimport $ from 'jquery'\r\n\r\n\r\nexport default class ListProduct extends Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n            products : []\r\n        }\r\n\r\n    }\r\n\r\n    product = new Product()\r\n\r\n    montaDatataBle()\r\n    {\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let timerInterval\r\n        Swal.fire({\r\n        title: 'Carregando Conteudo',\r\n        html: 'Listando Produtos, Aguarde...',\r\n        timer: 12000,\r\n        timerProgressBar: true,\r\n        showConfirmButton : false,\r\n        willOpen: () => {\r\n            Swal.showLoading()\r\n            timerInterval = setInterval(() => {\r\n            const content = Swal.getContent()\r\n            if (content) {\r\n                const b = content.querySelector('b')\r\n                if (b) {\r\n                b.textContent = Swal.getTimerLeft()\r\n                }\r\n            }\r\n            }, 100)\r\n            this.product.ListProductAll()\r\n            .then(data => {\r\n                this.setState({products:data})\r\n                Swal.close();\r\n            })\r\n        },\r\n        willClose: () => {\r\n            clearInterval(timerInterval)\r\n        }\r\n        }).then((result) => {\r\n        /* Read more about handling dismissals below */\r\n        if (result.dismiss === Swal.DismissReason.timer) {\r\n            \r\n        }\r\n        })\r\n    }\r\n\r\n    async painelDeControle(element , operacao){\r\n        var idProduto = element\r\n        var produtosState = this.state.products\r\n        if(operacao === \"entrada\")\r\n        {\r\n            this.state.products.map( async (index)=>{\r\n\r\n                if(index.idproduct === idProduto)\r\n                {\r\n                    await Swal.fire({\r\n                        title: 'Entrada em Produto Existente',\r\n                        html:\r\n                            \"<div>\"+\r\n                                \"<div>\"+\r\n                                    \"<div class='row col-md-12'>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Referência</label>' + \r\n                                            '<input id=\"referenciaProduto\" value='+index.reference+' readonly class=\"swal2-input\">' +\r\n                                            '<input id=\"idProduct\" type=\"hidden\" value='+index.idproduct+'>' +\r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Nome</label>' + \r\n                                            '<input id=\"nomeProduto\" value='+index.name+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Cor</label>' + \r\n                                            '<input id=\"corProduto\" value='+index.color+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                    '</div>' + \r\n                                    \"<div class='row col-md-12'>\" + \r\n                                        \"<div class='col-md-6'>\" + \r\n                                            '<label>Tamanho</label>' + \r\n                                            '<input id=\"tamanhoProduto\" value='+index.idsizeclothes+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-6'>\" + \r\n                                            '<label>Categoria</label>' + \r\n                                            '<input id=\"categoriaProduto\" value='+index.idcategory+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                    '</div>'+\r\n                                    \"<div class='row col-md-12'>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Preço de Compra</label>' + \r\n                                            '<input id=\"precoCompra\" value='+index.buyvalue+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Preço de Venda</label>' + \r\n                                            '<input id=\"precoVenda\" value='+index.sellvalue+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Quantidade em Estoque</label>' + \r\n                                            '<input id=\"quantidadeProduto\" value='+index.quantity+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                    '</div>'+\r\n                                    '<hr>'+\r\n                                \"</div>\"+\r\n                                \"<div class='col-md-12' style='background-color : 'lightgray''>\"+\r\n                                        \"<div class='col-md-4'>\"+\r\n                                            '<label><strong>Quantidade a se Adicionar</strong></label>' +\r\n                                            '<input type=\"number\" id=\"quantidadeASeAdd\" class=\"swal2-input\">'+\r\n                                        \"</div>\"+\r\n                                \"</div>\"+\r\n                            \"</div>\",\r\n                        focusConfirm: false,\r\n                        confirmButtonText: 'Entrada →',\r\n                        customClass :{\r\n                            div : \"row\",\r\n                        },\r\n                        width : \"950px\",\r\n                        preConfirm: () => {\r\n                            if (document.getElementById(\"quantidadeASeAdd\").value === \"\") {\r\n                                Swal.fire({\r\n                                        title : \"Erro \",\r\n                                        text : \"Preencha o Campo Quantidade a se Adicionar Corretamente\",\r\n                                        icon:\"error\"\r\n                                    })\r\n                              }\r\n                              else{\r\n                                  var quantidadeProdutos = parseInt(document.getElementById(\"quantidadeASeAdd\").value)\r\n                                  var idProduct = parseInt(document.getElementById(\"idProduct\").value)\r\n                                  var quantidadeDeItensEmEstoque = parseInt(document.getElementById(\"quantidadeProduto\").value)\r\n\r\n                                this.product.EnterProductQuantity(idProduct, quantidadeProdutos , quantidadeDeItensEmEstoque)\r\n                                .then(res => {\r\n                                    console.log(res)\r\n                                    if(res.success){\r\n                                        Swal.fire({\r\n                                            position: 'top-center',\r\n                                            icon: 'success',\r\n                                            title: 'Entrada Realizada com Sucesso !',\r\n                                            showConfirmButton: false,\r\n                                            timer: 1500\r\n                                          })\r\n                                        var cont = 0\r\n                                        produtosState.map(index => {\r\n                                            if(index.idproduct === idProduct)\r\n                                            {\r\n                                                let quantidadeTotal = Number(quantidadeProdutos + quantidadeDeItensEmEstoque)\r\n                                                produtosState[cont].quantity = quantidadeTotal\r\n                                                this.setState({products : produtosState})\r\n                                            }\r\n                                            cont++\r\n                                        })\r\n                                    }\r\n                                })\r\n                              }\r\n                        }\r\n                      })\r\n                }\r\n\r\n\r\n            })\r\n\r\n        }\r\n        if(operacao === \"saida\")\r\n        {\r\n            window.location.href = \"/saidaDeProduto/\"+idProduto\r\n        }\r\n        if(operacao === \"editar\")\r\n        {\r\n\r\n            \r\n            this.state.products.map( async (index)=>{\r\n\r\n                if(index.idproduct === idProduto)\r\n                {\r\n                    await Swal.fire({\r\n                        title: 'Entrada em Produto Existente',\r\n                        html:\r\n                            \"<div>\"+\r\n                                \"<div>\"+\r\n                                    \"<div class='row col-md-12'>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Referência</label>' + \r\n                                            '<input id=\"referenciaProduto\" value='+index.reference+'  class=\"swal2-input\">' +\r\n                                            '<input id=\"idProduct\" type=\"hidden\" value='+index.idproduct+'>' +\r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Nome</label>' + \r\n                                            '<input id=\"nomeProduto\" value='+index.name+'  class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Cor</label>' + \r\n                                            '<input id=\"corProduto\" value='+index.color+'  class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                    '</div>' + \r\n                                    \"<div class='row col-md-12'>\" + \r\n                                        \"<div class='col-md-6'>\" + \r\n                                            '<label>Tamanho</label>' + \r\n                                            '<input id=\"tamanhoProduto\" value='+index.idsizeclothes+'  class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-6'>\" + \r\n                                            '<label>Categoria</label>' + \r\n                                            '<input id=\"categoriaProduto\" value='+index.idcategory+'  class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                    '</div>'+\r\n                                    \"<div class='row col-md-12'>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Preço de Compra</label>' + \r\n                                            '<input id=\"precoCompra\" value='+index.buyvalue+'  class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Preço de Venda</label>' + \r\n                                            '<input id=\"precoVenda\" value='+index.sellvalue+'  class=\"swal2-input\">' + \r\n                                        \"</div>\" +\r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Quantidade em Estoque</label>' + \r\n                                            '<input id=\"quantidadeProduto\" value='+index.quantity+'  class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                    '</div>'+\r\n                                    \"<div class='row col-md-12'>\" + \r\n                                    \"<div class='col-md-4'>\" + \r\n                                            '<label>Quantidade em Estoque</label>' + \r\n                                            '<input id=\"fornecedorProduto\" value='+index.idprovider+'  class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                    '</div>'+\r\n                                    '<hr>'+\r\n                                \"</div>\"+\r\n                                \"<div class='col-md-12' style='background-color : lightgray;display: flex;justify-content:space-between;padding : 10px;border-radius : 10px'>\"+\r\n                                        \"<div class='col-md-4'><input type='file' /><img  width='200px'  height='200px' src=\"+index.image1+\"><input type='hidden' value=\"+index.image1+\"  id='image1'></img></div>\"+\r\n                                        \"<div class='col-md-4'><input type='file' /><img  width='200px'  height='200px' src=\"+index.image2+\"> <input type='hidden' value=\"+index.image2+\" id='image2'> </img></div>\"+\r\n                                        \"<div class='col-md-4'><input type='file' /><img  width='200px'  height='200px' src=\"+index.image3+\"> <input type='hidden' value=\"+index.image3+\" id='image3'> </img></div>\"+\r\n                                \"</div>\"+\r\n                                \"<div class='col-md-12' style='background-color : lightgray;display: flex;justify-content:center;padding : 10px;border-radius : 10px'>\"+\r\n                                        \"<div class='col-md-4'><input type='file' /><img  width='200px'  height='200px' src=\"+index.image4+\"> <input type='hidden' value=\"+index.image4+\" id='image4'> </img></div>\"+\r\n                                        \"<div class='col-md-4'><input type='file' /><img  width='200px'  height='200px' src=\"+index.image5+\"> <input type='hidden' value=\"+index.image5+\" id='image5'> </img></div>\"+\r\n                                \"</div>\"+\r\n                            \"</div>\",\r\n                        focusConfirm: false,\r\n                        confirmButtonText: 'Editar →',\r\n                        customClass :{\r\n                            div : \"row\",\r\n                        },\r\n                        width : \"100%\",\r\n                        preConfirm: () => {\r\n\r\n                                    let product = \r\n                                    {\r\n                                        idproduct : document.getElementById('idProduct').value,\r\n                                        name : document.getElementById('nomeProduto').value,\r\n                                        reference : document.getElementById('referenciaProduto').value,\r\n                                        color : document.getElementById('corProduto').value,\r\n                                        idsizeclothes : document.getElementById('tamanhoProduto').value,\r\n                                        idcategory : document.getElementById('categoriaProduto').value,\r\n                                        buyvalue : document.getElementById('precoCompra').value,\r\n                                        sellvalue : document.getElementById('precoVenda').value,\r\n                                        idprovider : document.getElementById('fornecedorProduto').value,\r\n                                        quantity : document.getElementById('quantidadeProduto').value,\r\n                                        image1 : document.getElementById('image1').value,\r\n                                        image2 : document.getElementById('image2').value,\r\n                                        image3 : document.getElementById('image3').value,\r\n                                        image4 : document.getElementById('image4').value,\r\n                                        image5 : document.getElementById('image5').value,\r\n                                    }\r\n\r\n                                    this.product.UpdateProduct(product).then(res => {\r\n                                        console.log(res)\r\n                                        if(res.success)\r\n                                        {\r\n                                            var productsState = this.state.products\r\n\r\n                                            Swal.fire({\r\n                                                title: \"Sucesso ! \",\r\n                                                icon : \"success\",\r\n                                                html:\"<p>Produto Editado com Sucesso !</p>\",\r\n                                                timer : 2000,\r\n                                                showConfirmButton : false\r\n                                            })\r\n                                            var cont = 0\r\n                                            \r\n                                            var indice = productsState.findIndex(index => index.idproduct === parseInt(product.idproduct))\r\n                                            console.log(indice)\r\n\r\n                                            productsState[indice] = product\r\n\r\n                                            this.setState({products : productsState})\r\n                                        }\r\n                                        else{\r\n                                            Swal.fire({\r\n                                                title: \"Erro : \",\r\n                                                icon : \"error\",\r\n                                                html:\"<p>Produto não foi Editado !!</p>\",\r\n                                                timer : 2000,\r\n                                                showConfirmButton : false\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    .catch(err => {console.log(err)})\r\n                        }\r\n                      })\r\n                }\r\n\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n            <div className=\"titlePageListProducts\">\r\n                <h4>Listagem de Produtos</h4>\r\n            </div>\r\n            <div>\r\n                <Table id=\"tabelaProdutos\" bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Imagem</th>\r\n                            <th>Referência</th>\r\n                            <th>Nome</th>\r\n                            <th>Cor</th>\r\n                            <th>Tamanho</th>\r\n                            <th>Categoria</th>\r\n                            <th>Preço de Compra</th>\r\n                            <th>Preço de Venda</th>\r\n                            <th>Quantidade</th>\r\n                            <th>Painel de Controle</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                                this.state.products.map((index)=>{\r\n                                var buyvalue = parseFloat(index.buyvalue)\r\n                                var sellvalue = parseFloat(index.sellvalue)\r\n\r\n\r\n                                if(parseInt(index.quantity) > 0)\r\n                                {\r\n                                    return (\r\n                                        <tr key={index.reference}>\r\n                                            <td><img src={index.image1} width=\"166px\" height=\"74px\" style={{borderRadius : \"5px\"}} alt={\"Image Product\"}></img></td>\r\n                                            <td>{index.reference}</td>\r\n                                            <td>{index.name}</td>\r\n                                            <td>{index.color}</td>\r\n                                            <td>{index.idsizeclothes}</td>\r\n                                            <td>{index.idcategory}</td>\r\n                                            <td>{buyvalue.toLocaleString('pt-br' , {minimumFractionDigits : 2})}</td>\r\n                                            <td>{sellvalue.toLocaleString('pt-br' , {minimumFractionDigits : 2})}</td>\r\n                                            <td>{index.quantity}</td>\r\n                                            <td><Button onClick={()=>{this.painelDeControle(index.idproduct , \"entrada\")}} variant=\"outline-dark botaoTabela\">Entrada</Button>\r\n                                            <Button onClick={()=>{this.painelDeControle(index.idproduct , \"saida\")}} variant=\"outline-dark botaoTabela\">Saida</Button>\r\n                                            <Button onClick={()=>{this.painelDeControle(index.idproduct , \"editar\")}} variant=\"outline-dark botaoTabela\">Editar</Button></td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n\r\n\r\n                            })\r\n                            }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Home.js",["138"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutos.js",["139"],"import { expr } from 'jquery'\r\nimport React from 'react'\r\nimport {Form , Button , Table} from \"react-bootstrap\"\r\nimport product from '../../../Controller/ProductController'\r\nimport \"./Products.css\"\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst Product = new product();\r\n\r\n\r\n\r\nexport default class EntradaDeProduto extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            product: {},\r\n            idProduct : 0,\r\n            quantidadeASeAdd : 0\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.handleSubmitAddQuantity = this.handleSubmitAddQuantity.bind(this);\r\n    }\r\n\r\n\r\n    async componentDidMount(){}\r\n\r\n\r\n    handleQuantity(event){\r\n        this.setState({quantidadeASeAdd : event.target.value})\r\n    }\r\n\r\n\r\n    handleSubmitAddQuantity(event)\r\n    {\r\n        var stateProduct = this.state.product\r\n        Product.EnterProductQuantity(stateProduct.idproduct , parseInt(this.state.quantidadeASeAdd) , stateProduct.quantity)\r\n        .then(res => {\r\n            if(res.success){\r\n                Swal.fire({\r\n                    title:  \"Sucesso ! \",\r\n                    text : \"Quantidade Adicionada com Sucesso ! \",\r\n                    icon : \"success\",\r\n                    timer : 1500,\r\n                    showConfirmButton : false,\r\n                    willClose : ()=>{\r\n                        window.location.href = \"/listarProdutos\"\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                Swal.fire({\r\n                    title:  \"ERRO : \",\r\n                    text : \"Quantidade Adicionada com Sucesso ! \",\r\n                    icon : \"success\",\r\n                    showConfirmButton:  false,\r\n                    timer : 1500,\r\n                    willClose : ()=>{\r\n                        window.location.href = \"/listarProdutos\"\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            Swal.fire({\r\n                title : \"ERRO : \" , \r\n                text : err,\r\n                icon : \"error\",\r\n                willClose : ()=>{\r\n                    window.location.href = \"/listarProdutos\"\r\n                }\r\n            })\r\n        })\r\n        this.setState({product : stateProduct})\r\n    }\r\n\r\n    handleSubmit(event){\r\n\r\n\r\n        if(this.state.idProduct === 0 || this.state.idProduct === null || this.state.idProduct === undefined)\r\n        {\r\n            Swal.fire({\r\n                title: \"Erro\" , \r\n                text : \"Preencha o campo De Pesquisa\",\r\n                icon : \"error\",\r\n                timer : 1500\r\n            })\r\n            return\r\n        }\r\n\r\n        let timerInterval\r\n        Swal.fire({\r\n        title: 'Carregando Conteudo',\r\n        html: 'Listando Produto, Aguarde...',\r\n        timer: 12000,\r\n        timerProgressBar: true,\r\n        showConfirmButton : false,\r\n        willOpen: () => {\r\n            Swal.showLoading()\r\n            timerInterval = setInterval(() => {\r\n            const content = Swal.getContent()\r\n            if (content) {\r\n                const b = content.querySelector('b')\r\n                if (b) {\r\n                b.textContent = Swal.getTimerLeft()\r\n                }\r\n            }\r\n            }, 100)\r\n            Product.ListProductForId(this.state.idProduct)\r\n            .then(res => {\r\n                document.getElementById('produtoPesquisado').innerHTML = \"\"\r\n                console.log(res)\r\n                this.setState({product : res[0]})\r\n                Swal.close()\r\n\r\n\r\n                let linhaProduto = \r\n                \"<tr>\"+\r\n                    \"<td><input name='idProdutoSelecionado' readonly class='form-control' value=\"+res[0].idproduct+\" /></td>\"+\r\n                    \"<td><input name='nomeProdutoSelecionado' readonly class='form-control' value=\"+res[0].name+\" /></td>\"+\r\n                    \"<td><input name='referenciaProdutoSelecionado' readonly class='form-control' value=\"+res[0].reference+\" /></td>\"+\r\n                    \"<td><input name='corProdutoSelecionado' readonly class='form-control' value=\"+res[0].color+\" /></td>\"+\r\n                    \"<td><input name='quantidadeProdutoSelecionado' readonly class='form-control' value=\"+res[0].quantity+\" /></td>\"+\r\n                \"</tr>\"\r\n                document.getElementById('produtoPesquisado').innerHTML += linhaProduto\r\n            })\r\n        },\r\n        willClose: () => {\r\n            clearInterval(timerInterval)\r\n        }\r\n        }).then((result) => {\r\n        /* Read more about handling dismissals below */\r\n        if (result.dismiss === Swal.DismissReason.timer) {\r\n            \r\n        }\r\n        })\r\n    }\r\n\r\n\r\n    handleChange(event){\r\n        this.setState({idProduct : event.target.value})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <Form>  \r\n                <div className=\"row\">\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3 mb-1 PainelDePesquisa\">\r\n                            <label>Pesquise por ID</label>\r\n                            <Form.Control onChange={this.handleChange} value={this.state.idProduct} type=\"text\" id=\"idOrReference\" placeholder=\"\" />\r\n                            {/* <Form.Check \r\n                                name=\"radiopesquisa\"\r\n                                type=\"radio\"\r\n                                id=\"radioId\"\r\n                                value=\"id\"\r\n                                onChange={this.handleChange}\r\n                                label=\"Pesquisa por ID\"\r\n                            />\r\n                            <Form.Check \r\n                                name=\"radiopesquisa\"\r\n                                type=\"radio\"\r\n                                value=\"reference\"\r\n                                onChange={this.handleChange}\r\n                                id=\"radioReference\"\r\n                                label=\"Pesquisa por Referência\"\r\n                            /> */}\r\n                            <Button variant=\"outline-dark\" onClick={this.handleSubmit} className=\"mt-2\">Pesquisar</Button>\r\n                        </div>\r\n                        <h2>Produto Pesquisado</h2>\r\n                        <div className=\"col-md-2 mt-4\"></div>\r\n                        <div className=\"col-md-4\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"><hr></hr></div>\r\n                <div className=\"row\">\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-6 mt-4\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12 mt-4\">\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>Código</td>\r\n                                    <td>Nome</td>\r\n                                    <td>Referencia</td>\r\n                                    <td>Cor</td>\r\n                                    <td>Quantidade</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"produtoPesquisado\">\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <div className=\"row col-md-12 mt-4\">\r\n                        <div className=\"col-md-4\"></div>\r\n                        <div className=\"col-md-4 painelAddQuantity\">\r\n                            <label>Quantidade a Se Adicionar</label>\r\n                            <Form.Control onChange={this.handleQuantity} value={this.state.quantidadeASeAdd}  />\r\n                            <Button variant=\"outline-dark\" onClick={this.handleSubmitAddQuantity}>Adicionar ✓</Button>\r\n                        </div>\r\n                        <div className=\"col-md-4 mt-4\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n        )\r\n    }\r\n\r\n }","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\index.js",[],["140","141"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\SaidaDeProdutos.js",["142"],"import React from 'react'\r\nimport {Form , Button} from 'react-bootstrap'\r\nimport \"./Products.css\"\r\nimport product from \"../../../Controller/ProductController\"\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst Product = new product();\r\n\r\n\r\nexport default class SaidaDeProduto extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            product : {},\r\n            idProduct : this.props.match.params.id,\r\n            report : {\r\n                motivo : \"\",\r\n                descMotivo : \"\",\r\n                quantidadeARetirar : 0,\r\n                dataHoje : new Date().toISOString()\r\n            }\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n\r\n    \r\n    handleChange(event) {\r\n\r\n        let newReport = this.state.report\r\n\r\n        if(event.target.id === \"motivoSaida\"){newReport.motivo = event.target.value}\r\n        if(event.target.id === \"motivoSaidaDesc\"){newReport.descMotivo = event.target.value}\r\n        if(event.target.id === \"quantidadeARetirar\"){newReport.quantidadeARetirar = event.target.value}\r\n\r\n\r\n        newReport.dataHoje = new Date().toISOString()\r\n        this.setState({report : newReport})\r\n      }\r\n\r\n\r\n    handleSubmit(event) {\r\n        \r\n\r\n        if(this.state.report.quantidadeARetirar > this.state.product.quantity)\r\n        {\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                title: 'Quantidade Inválida',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              })\r\n              return\r\n        }\r\n        \r\n        Product.SaidaEmProduto(this.state.idProduct , this.state.product.quantity ,this.state.report)\r\n        .then(res =>{\r\n            console.log(res)\r\n            if(res.success)\r\n            {\r\n                Swal.fire({\r\n                    title : \"Sucesso\",\r\n                    text : \"Saida executada com Sucesso\",\r\n                    icon : \"success\",\r\n                    showConfirmButton:  false,\r\n                    timer : 1500,\r\n                    willClose : ()=>{\r\n                        window.location.href = \"/listarProdutos\"\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                Swal.fire({\r\n                    title : \"Erro\",\r\n                    text : \"Ocorreu Algum erro Durante o Processo\",\r\n                    icon : \"error\",\r\n                    timer : 1500,\r\n                    willClose : ()=>{\r\n                        window.location.href = \"/listarProdutos\"\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            window.location.href = \"/listarProdutos\"\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n\r\n        let timerInterval\r\n        Swal.fire({\r\n        title: 'Carregando Conteudo',\r\n        html: 'Listando Produto, Aguarde...',\r\n        timer: 12000,\r\n        timerProgressBar: true,\r\n        showConfirmButton : false,\r\n        willOpen: () => {\r\n            Swal.showLoading()\r\n            timerInterval = setInterval(() => {\r\n            const content = Swal.getContent()\r\n            if (content) {\r\n                const b = content.querySelector('b')\r\n                if (b) {\r\n                b.textContent = Swal.getTimerLeft()\r\n                }\r\n            }\r\n            }, 100)\r\n            Product.ListProductForId(this.state.idProduct)\r\n            .then(res => {\r\n                if(res.length != 0)\r\n                {\r\n                    this.setState({product : res[0]})\r\n                    Swal.close()\r\n                }\r\n                else\r\n                {\r\n                    Swal.close()\r\n                    Swal.fire({title:\"Erro\" , text : \"Produto não Encontrado\" , icon : \"error\"})\r\n                }\r\n            })\r\n        },\r\n        willClose: () => {\r\n            clearInterval(timerInterval)\r\n        }\r\n        }).then((result) => {\r\n        /* Read more about handling dismissals below */\r\n        if (result.dismiss === Swal.DismissReason.timer) {\r\n            \r\n        }\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <Form onSubmit={this.handleSubmit}>\r\n            <div id=\"produtoAntigo\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\"></div>\r\n                        <div className=\"col-md-6\">\r\n                            <h2>Produto à Liberar Saida</h2>\r\n                        </div>\r\n                        <div className=\"col-md-3\"></div>\r\n                    </div>\r\n                    <div className=\"row mt-2\">\r\n                                <div className=\"col-md-3\">\r\n                                    <label>Nome</label>\r\n                                    <Form.Control value={this.state.product.name} id=\"nameProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <label>Descrição</label>\r\n                                    <Form.Control value={this.state.product.description} id=\"descriptionProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <label>Referência</label>\r\n                                    <Form.Control value={this.state.product.reference} id=\"referenceProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-2\">\r\n                                    <label>Cor</label>\r\n                                    <Form.Control value={this.state.product.color} id=\"colorProductForm\" readOnly={true} />\r\n                                </div>\r\n                    </div>\r\n                    <div className=\"row mt-2\">\r\n                                <div className=\"col-md-2 \">\r\n                                    <label>Tamanho</label>\r\n                                    <Form.Control value={this.state.product.idsizeclothes} id=\"sizeClothesProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-3 \">\r\n                                    <label>Preço de Compra</label>\r\n                                    <Form.Control value={this.state.product.buyvalue} id=\"buyValueProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-3 \">\r\n                                    <label>Preço de Venda</label>\r\n                                    <Form.Control value={this.state.product.sellvalue} id=\"sellValueProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-3 \">\r\n                                    <label>Cor</label>\r\n                                    <Form.Control value={this.state.product.color} id=\"colorProductForm\" readOnly={true} />\r\n                                </div>\r\n                    </div>\r\n                    <div className=\"row mt-2\">\r\n                            <div className=\"col-md-4 \">\r\n                                    <label>Fornecedor</label>\r\n                                    <Form.Control value={this.state.product.idprovider} id=\"providerProductForm\" readOnly={true} />\r\n                            </div>\r\n                            <div className=\"col-md-2 \">\r\n                                    <label>Quantidade em Estoque</label>\r\n                                    <Form.Control value={this.state.product.quantity} id=\"quantityProductForm\" readOnly={true} />\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"row mt-2\"></div>\r\n                    <hr></hr>\r\n                    <div className=\"row mt-2\" id=\"pareceresSobreSaida\">\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Motivos da Saída</h2>\r\n                            </div>\r\n                            <div className=\"row col-md-12\">\r\n                                <div className=\"col-md-4 mb-4 mt-4\">\r\n                                    <label>Motivo da Saída</label>\r\n                                    <Form.Control onChange={this.handleChange} id=\"motivoSaida\" as=\"select\">\r\n                                        <option value=\"default\">Selecione o Motivo</option>\r\n                                        <option value=\"produtoquebradomaluso\">Produto Quebrado ( Mal Uso )</option>\r\n                                        <option value=\"produtoquebradodefeito\">Produto Quebrado ( Defeito )</option>\r\n                                        <option value=\"saidaporvenda\">Saida Por Venda</option>\r\n                                        <option value=\"promocao\">Promoção</option>\r\n                                    </Form.Control>\r\n                                </div>\r\n                                <div className=\"col-md-5 mb-4 mt-4\">\r\n                                    <Form.Label>Descreva o Motivo da Saida</Form.Label>\r\n                                    <Form.Control onChange={this.handleChange} id=\"motivoSaidaDesc\" as=\"textarea\" rows={3} />\r\n                                </div>\r\n                                <div className=\"col-md-3 mb-4 mt-4\">\r\n                                    <Form.Label>Quantidade a Se retirar do Estoque</Form.Label>\r\n                                    <Form.Control  onChange={this.handleChange} id=\"quantidadeARetirar\" type=\"number\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row col-md-12\">\r\n                                <div className=\"col-md-4 mb-4 mt-4\">\r\n                                    <Button type=\"submit\" variant=\"outline-dark botaoTabela\">Confirmar ✓</Button>\r\n                                </div>\r\n                                <div className=\"col-md-4 mb-4 mt-4\">\r\n                                    <Button variant=\"outline-dark botaoTabela\">Limpar</Button>\r\n                                </div>\r\n                                <div className=\"col-md-4 mb-4 mt-4\">\r\n                                    <Button variant=\"outline-dark botaoTabela\">Cancelar X</Button>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                    </div>\r\n            </div>\r\n\r\n        </Form>\r\n        )\r\n    }\r\n\r\n\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\ListarFornecedores.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProviderController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\SizeClothesController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\App.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\clients\\cadastroClients.js",["143"],"import React from 'react'\r\nimport {Form, Row , Col ,Button} from \"react-bootstrap\"\r\nimport Swal from 'sweetalert2'\r\nimport clientController from '../../../Controller/ClientController'\r\nimport servicecep from '../../../services/serviceCep'\r\n\r\n\r\nconst ServiceCep = new servicecep\r\n\r\n\r\nconst ClientController = new clientController()\r\n\r\nexport default class CadastroDeClientes extends React.Component\r\n{\r\n    \r\n    constructor(props)\r\n    {\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n            newClient : {\r\n                name : \"\",\r\n                lastname : \"\",\r\n                cpf : \"\",\r\n                rg : \"\",\r\n                registerdate : new Date().toLocaleDateString(),\r\n                tel1 : \"\",\r\n                tel2 : \"\",\r\n                email : \"\",\r\n                adress : \"\",\r\n                cep : \"\",\r\n                bairro : \"\",\r\n                cidade : \"\",\r\n                estado : \"\",\r\n                complemento : \"\",\r\n                numero : \"\",\r\n            }\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleBlur = this.handleBlur.bind(this)\r\n    }\r\n\r\n    handleSubmit(event){\r\n\r\n        event.preventDefault()\r\n        ClientController.addClient(this.state.newClient)\r\n        .then(response => {\r\n            if(!response.success)\r\n            {\r\n                Swal.fire({\r\n                    title : \"Erro ao Cadastrar Cliente\",\r\n                    html : response.msg,\r\n                    icon : \"error\"\r\n                })\r\n            }\r\n            else{\r\n                Swal.fire({\r\n                    title : \"Cliente Cadastrado com Sucesso !\",\r\n                    icon : \"success\",\r\n                    timer : 2000,\r\n                    showConfirmButton : false,\r\n                    onClose : ()=>{\r\n                        window.location.href = \"/\"\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    handleBlur(event){\r\n        ServiceCep.consultaCEP(event.target.value)\r\n        .then(response=>{\r\n\r\n            if(response.cep === undefined)\r\n            {\r\n                Swal.fire({\r\n                    title : \"Erro : \",\r\n                    html : \"<p>CEP INVÁLIDO</p>\",\r\n                    icon : \"error\"\r\n                })\r\n                let State = this.state.newClient\r\n\r\n                State.cep = \"\"\r\n                this.setState({newClient : State})\r\n                return\r\n            }\r\n            let estadoAplicacao = this.state.newClient\r\n            estadoAplicacao.adress = response.logradouro\r\n            estadoAplicacao.bairro = response.bairro\r\n            estadoAplicacao.cidade = response.localidade\r\n            estadoAplicacao.estado = response.uf\r\n\r\n            this.setState({newClient : estadoAplicacao})\r\n        })\r\n        .catch(err =>{\r\n            Swal.fire({\r\n                title : \"Erro : \",\r\n                html : \"<p>CEP INVÁLIDO</p>\",\r\n                icon : \"error\"\r\n            })\r\n        })\r\n    }\r\n    \r\n\r\n    handleChange(event)\r\n    {\r\n        var newClient = this.state.newClient\r\n        newClient[event.target.name] = event.target.value\r\n        this.setState({newClient : newClient});\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col>\r\n                        <h4>Cadastro de Clientes</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Row className=\"mt-4\">\r\n                        <Col>\r\n                            <label>Nome</label>\r\n                            <Form.Control name=\"name\" value={this.state.newClient.name} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>Sobrenome</label>\r\n                            <Form.Control name=\"lastname\" value={this.state.newClient.lastname}  onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>CPF</label>\r\n                            <Form.Control name=\"cpf\" value={this.state.newClient.cpf} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>RG</label>\r\n                            <Form.Control name=\"rg\" value={this.state.newClient.rg} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <Row className=\"mt-4\">\r\n                        <Col>\r\n                            <label>Telefone 1</label>\r\n                            <Form.Control name=\"tel1\" value={this.state.newClient.tel1} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>Telefone 2</label>\r\n                            <Form.Control name=\"tel2\" value={this.state.newClient.tel2} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>Email</label>\r\n                            <Form.Control name=\"email\" value={this.state.newClient.email} onChange={this.handleChange} type=\"email\" placeholder=\"\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <Row className=\"mt-4\">\r\n                        <Col md=\"2\">\r\n                            <label>CEP</label>\r\n                            <Form.Control name=\"cep\" onBlur={this.handleBlur} value={this.state.newClient.cep} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                        <Col md=\"7\">\r\n                            <label>Rua</label>\r\n                            <Form.Control name=\"adress\" value={this.state.newClient.adress} onChange={this.handleChange}   readOnly placeholder=\"\" />\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                            <label>Bairro</label>\r\n                            <Form.Control name=\"bairro\" value={this.state.newClient.bairro} onChange={this.handleChange}   readOnly placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>Nº</label>\r\n                            <Form.Control name=\"numero\" value={this.state.newClient.numero} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-4\">\r\n                        <Col>\r\n                            <label>Cidade</label>\r\n                            <Form.Control name=\"cidade\" value={this.state.newClient.cidade} onChange={this.handleChange} readOnly placeholder=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <label>Estado</label>\r\n                            <Form.Control name=\"estado\" value={this.state.newClient.estado} onChange={this.handleChange} readOnly placeholder=\"\" />\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                            <label>Complemento</label>\r\n                            <Form.Control name=\"complemento\" value={this.state.newClient.complemento} onChange={this.handleChange} placeholder=\"\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mt-4\">\r\n                        \r\n                    </Row>\r\n                    <Row className=\"mt-4\" style={{justifyContent : \"space-between\"}}>\r\n                        <Col md=\"4\">\r\n                            <Button type=\"submit\" variant=\"outline-success\">Cadastrar ✓</Button>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <Button type=\"submit\" variant=\"outline-danger\">Cancelar Cadastro X</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ClientController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\services\\serviceCep.js",["144","145"],"export default class servicecep{\r\n\r\n\r\n\r\n    consultaCEP = async (cep)=>{\r\n        if(cep == \"\" || cep == undefined || cep == null)\r\n        return false\r\n        return fetch('http://viacep.com.br/ws/'+cep+'/json/' , {\r\n            method : \"GET\",\r\n        })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => err)\r\n    }\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\clients\\listClients.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\orders\\addNewOrder.js",["146","147","148","149","150"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\OrdersController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\saleman\\cadastrarVendedores.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\saleman\\listarVendedores.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\config\\index.js",["151","152","153"],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":2,"column":23,"nodeType":"160","messageId":"161","endLine":2,"endColumn":30},{"ruleId":"158","severity":1,"message":"162","line":2,"column":45,"nodeType":"160","messageId":"161","endLine":2,"endColumn":53},{"ruleId":"158","severity":1,"message":"163","line":3,"column":33,"nodeType":"160","messageId":"161","endLine":3,"endColumn":39},{"ruleId":"158","severity":1,"message":"164","line":34,"column":17,"nodeType":"160","messageId":"161","endLine":34,"endColumn":24},{"ruleId":"165","severity":1,"message":"166","line":53,"column":1,"nodeType":"167","endLine":106,"endColumn":2},{"ruleId":"154","replacedBy":"168"},{"ruleId":"156","replacedBy":"169"},{"ruleId":"158","severity":1,"message":"170","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":77,"column":27,"nodeType":"173","messageId":"174","endLine":77,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":84,"column":27,"nodeType":"173","messageId":"174","endLine":84,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":90,"column":27,"nodeType":"173","messageId":"174","endLine":90,"endColumn":29},{"ruleId":"154","replacedBy":"175"},{"ruleId":"156","replacedBy":"176"},{"ruleId":"158","severity":1,"message":"177","line":61,"column":13,"nodeType":"160","messageId":"161","endLine":61,"endColumn":18},{"ruleId":"154","replacedBy":"178"},{"ruleId":"156","replacedBy":"179"},{"ruleId":"158","severity":1,"message":"180","line":13,"column":8,"nodeType":"160","messageId":"161","endLine":13,"endColumn":9},{"ruleId":"171","severity":1,"message":"172","line":164,"column":65,"nodeType":"173","messageId":"174","endLine":164,"endColumn":67},{"ruleId":"158","severity":1,"message":"181","line":298,"column":49,"nodeType":"160","messageId":"161","endLine":298,"endColumn":53},{"ruleId":"171","severity":1,"message":"182","line":353,"column":64,"nodeType":"173","messageId":"183","endLine":353,"endColumn":66},{"ruleId":"184","severity":1,"message":"185","line":362,"column":49,"nodeType":"186","endLine":362,"endColumn":154},{"ruleId":"158","severity":1,"message":"187","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":18},{"ruleId":"158","severity":1,"message":"188","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":14},{"ruleId":"154","replacedBy":"189"},{"ruleId":"156","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":126,"column":31,"nodeType":"193","messageId":"194","endLine":126,"endColumn":33},{"ruleId":"195","severity":1,"message":"196","line":8,"column":20,"nodeType":"197","messageId":"198","endLine":8,"endColumn":34,"fix":"199"},{"ruleId":"191","severity":1,"message":"200","line":6,"column":16,"nodeType":"193","messageId":"194","endLine":6,"endColumn":18},{"ruleId":"191","severity":1,"message":"200","line":6,"column":29,"nodeType":"193","messageId":"194","endLine":6,"endColumn":31},{"ruleId":"171","severity":1,"message":"172","line":86,"column":38,"nodeType":"173","messageId":"174","endLine":86,"endColumn":40},{"ruleId":"191","severity":1,"message":"200","line":109,"column":41,"nodeType":"193","messageId":"194","endLine":109,"endColumn":43},{"ruleId":"191","severity":1,"message":"200","line":119,"column":48,"nodeType":"193","messageId":"194","endLine":119,"endColumn":50},{"ruleId":"158","severity":1,"message":"201","line":130,"column":24,"nodeType":"160","messageId":"161","endLine":130,"endColumn":34},{"ruleId":"191","severity":1,"message":"192","line":176,"column":48,"nodeType":"193","messageId":"194","endLine":176,"endColumn":50},{"ruleId":"158","severity":1,"message":"202","line":8,"column":10,"nodeType":"160","messageId":"161","endLine":8,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":12,"column":1,"nodeType":"167","endLine":65,"endColumn":2},{"ruleId":"203","severity":1,"message":"204","line":15,"column":55,"nodeType":"205","endLine":15,"endColumn":67},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'NavItem' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'Router' is defined but never used.","'answers' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["206"],["207"],"'product' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["206"],["207"],"'subiu' is assigned a value but never used.",["206"],["207"],"'$' is defined but never used.","'cont' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Jumbotron' is defined but never used.","'expr' is defined but never used.",["206"],["207"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"208","text":"209"},"Expected '===' and instead saw '=='.","'formValues' is assigned a value but never used.","'changeText' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",[277,277],"()"]