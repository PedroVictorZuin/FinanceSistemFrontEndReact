[{"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\App.js":"1","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Navbar.js":"2","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\reportWebVitals.js":"3","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Router.js":"4","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\ListProducts.js":"5","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Home.js":"6","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProductController.js":"7","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\index.js":"8","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\CadastrarProdutos.js":"9","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\SizeClothesController.js":"10","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProviderController.js":"11","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\CategoryController.js":"12","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\SaidaDeProdutos.js":"13","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutos.js":"14","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\CadastrarFornecedores.js":"15","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\ListarFornecedores.js":"16","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutosViaNota.js":"17"},{"size":1589,"mtime":1607268187544,"results":"18","hashOfConfig":"19"},{"size":5192,"mtime":1607267386015,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1606175593111,"results":"21","hashOfConfig":"19"},{"size":0,"mtime":1606433061964,"results":"22","hashOfConfig":"19"},{"size":11826,"mtime":1607209120302,"results":"23","hashOfConfig":"19"},{"size":949,"mtime":1607136259355,"results":"24","hashOfConfig":"19"},{"size":3241,"mtime":1607220113520,"results":"25","hashOfConfig":"19"},{"size":500,"mtime":1606175593111,"results":"26","hashOfConfig":"19"},{"size":13129,"mtime":1607214802154,"results":"27","hashOfConfig":"19"},{"size":314,"mtime":1607149466256,"results":"28","hashOfConfig":"19"},{"size":805,"mtime":1607227479692,"results":"29","hashOfConfig":"19"},{"size":319,"mtime":1607149887255,"results":"30","hashOfConfig":"19"},{"size":10634,"mtime":1607220404506,"results":"31","hashOfConfig":"19"},{"size":8249,"mtime":1607220320373,"results":"32","hashOfConfig":"19"},{"size":7188,"mtime":1607266090664,"results":"33","hashOfConfig":"19"},{"size":2806,"mtime":1607261929807,"results":"34","hashOfConfig":"19"},{"size":10292,"mtime":1607284239792,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x2mrmt",{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\App.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Navbar.js",["77","78","79","80","81","82"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\reportWebVitals.js",[],["83","84"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\Router.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\ListProducts.js",["85","86"],"import React, { Component } from \"react\";\r\nimport {Table , Button} from \"react-bootstrap\"\r\nimport Product from \"../../../Controller/ProductController\"\r\nimport Swal from 'sweetalert2'\r\nimport \"./Products.css\"\r\n//Bootstrap and jQuery libraries\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\n\r\nimport $ from 'jquery'\r\n\r\n\r\nexport default class ListProduct extends Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n            products : []\r\n        }\r\n\r\n    }\r\n\r\n    product = new Product()\r\n\r\n    montaDatataBle()\r\n    {\r\n        $('#tabelaProdutos').DataTable();\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let timerInterval\r\n        Swal.fire({\r\n        title: 'Carregando Conteudo',\r\n        html: 'Listando Produtos, Aguarde...',\r\n        timer: 12000,\r\n        timerProgressBar: true,\r\n        showConfirmButton : false,\r\n        willOpen: () => {\r\n            Swal.showLoading()\r\n            timerInterval = setInterval(() => {\r\n            const content = Swal.getContent()\r\n            if (content) {\r\n                const b = content.querySelector('b')\r\n                if (b) {\r\n                b.textContent = Swal.getTimerLeft()\r\n                }\r\n            }\r\n            }, 100)\r\n            this.product.ListProductAll()\r\n            .then(data => {\r\n                this.setState({products:data})\r\n                Swal.close();\r\n            })\r\n        },\r\n        willClose: () => {\r\n            clearInterval(timerInterval)\r\n        }\r\n        }).then((result) => {\r\n        /* Read more about handling dismissals below */\r\n        if (result.dismiss === Swal.DismissReason.timer) {\r\n            \r\n        }\r\n        })\r\n    }\r\n\r\n    async painelDeControle(element , operacao){\r\n        var idProduto = element\r\n        var produtosState = this.state.products\r\n        if(operacao === \"entrada\")\r\n        {\r\n            this.state.products.map( async (index)=>{\r\n\r\n                if(index.idproduct === idProduto)\r\n                {\r\n                    await Swal.fire({\r\n                        title: 'Entrada em Produto Existente',\r\n                        html:\r\n                            \"<div>\"+\r\n                                \"<div>\"+\r\n                                    \"<div class='row col-md-12'>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>ReferÃªncia</label>' + \r\n                                            '<input id=\"referenciaProduto\" value='+index.reference+' readonly class=\"swal2-input\">' +\r\n                                            '<input id=\"idProduct\" type=\"hidden\" value='+index.idproduct+'>' +\r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Nome</label>' + \r\n                                            '<input id=\"nomeProduto\" value='+index.name+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Cor</label>' + \r\n                                            '<input id=\"corProduto\" value='+index.color+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                    '</div>' + \r\n                                    \"<div class='row col-md-12'>\" + \r\n                                        \"<div class='col-md-6'>\" + \r\n                                            '<label>Tamanho</label>' + \r\n                                            '<input id=\"tamanhoProduto\" value='+index.idsizeclothes+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-6'>\" + \r\n                                            '<label>Categoria</label>' + \r\n                                            '<input id=\"categoriaProduto\" value='+index.idcategory+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                    '</div>'+\r\n                                    \"<div class='row col-md-12'>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>PreÃ§o de Compra</label>' + \r\n                                            '<input id=\"precoCompra\" value='+index.buyvalue+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>PreÃ§o de Venda</label>' + \r\n                                            '<input id=\"precoVenda\" value='+index.sellvalue+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                        \"<div class='col-md-4'>\" + \r\n                                            '<label>Quantidade em Estoque</label>' + \r\n                                            '<input id=\"quantidadeProduto\" value='+index.quantity+' readonly class=\"swal2-input\">' + \r\n                                        \"</div>\" + \r\n                                    '</div>'+\r\n                                    '<hr>'+\r\n                                \"</div>\"+\r\n                                \"<div class='col-md-12' style='background-color : 'lightgray''>\"+\r\n                                        \"<div class='col-md-4'>\"+\r\n                                            '<label><strong>Quantidade a se Adicionar</strong></label>' +\r\n                                            '<input type=\"number\" id=\"quantidadeASeAdd\" class=\"swal2-input\">'+\r\n                                        \"</div>\"+\r\n                                \"</div>\"+\r\n                            \"</div>\",\r\n                        focusConfirm: false,\r\n                        confirmButtonText: 'Entrada â',\r\n                        customClass :{\r\n                            div : \"row\",\r\n                        },\r\n                        width : \"950px\",\r\n                        preConfirm: () => {\r\n                            if (document.getElementById(\"quantidadeASeAdd\").value === \"\") {\r\n                                Swal.fire({\r\n                                        title : \"Erro \",\r\n                                        text : \"Preencha o Campo Quantidade a se Adicionar Corretamente\",\r\n                                        icon:\"error\"\r\n                                    })\r\n                              }\r\n                              else{\r\n                                  var quantidadeProdutos = parseInt(document.getElementById(\"quantidadeASeAdd\").value)\r\n                                  var idProduct = parseInt(document.getElementById(\"idProduct\").value)\r\n                                  var quantidadeDeItensEmEstoque = parseInt(document.getElementById(\"quantidadeProduto\").value)\r\n\r\n                                this.product.EnterProductQuantity(idProduct, quantidadeProdutos , quantidadeDeItensEmEstoque)\r\n                                .then(res => {\r\n                                    console.log(res)\r\n                                    if(res.success){\r\n                                        Swal.fire({\r\n                                            position: 'top-center',\r\n                                            icon: 'success',\r\n                                            title: 'Entrada Realizada com Sucesso !',\r\n                                            showConfirmButton: false,\r\n                                            timer: 1500\r\n                                          })\r\n                                        var cont = 0\r\n                                        produtosState.map(index => {\r\n                                            if(index.idproduct === idProduct)\r\n                                            {\r\n                                                let quantidadeTotal = Number(quantidadeProdutos + quantidadeDeItensEmEstoque)\r\n                                                produtosState[cont].quantity = quantidadeTotal\r\n                                                this.setState({products : produtosState})\r\n                                            }\r\n                                            cont++\r\n                                        })\r\n                                    }\r\n                                })\r\n                              }\r\n                        }\r\n                      })\r\n                }\r\n\r\n\r\n            })\r\n\r\n        }\r\n        if(operacao === \"saida\")\r\n        {\r\n            window.location.href = \"/saidaDeProduto/\"+idProduto\r\n        }\r\n        if(operacao === \"editar\"){}\r\n    }\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n            <div className=\"titlePageListProducts\">\r\n                <h4>Listagem de Produtos</h4>\r\n            </div>\r\n            <div>\r\n                <Table id=\"tabelaProdutos\" bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ReferÃªncia</th>\r\n                            <th>Nome</th>\r\n                            <th>Cor</th>\r\n                            <th>Tamanho</th>\r\n                            <th>Categoria</th>\r\n                            <th>PreÃ§o de Compra</th>\r\n                            <th>PreÃ§o de Venda</th>\r\n                            <th>Quantidade</th>\r\n                            <th>Painel de Controle</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                                this.state.products.map((index)=>{\r\n                                var buyvalue = parseFloat(index.buyvalue)\r\n                                var sellvalue = parseFloat(index.sellvalue)\r\n\r\n\r\n                                if(parseInt(index.quantity) > 0)\r\n                                {\r\n                                    return (\r\n                                        <tr key={index.reference}>\r\n                                            <td>{index.reference}</td>\r\n                                            <td>{index.name}</td>\r\n                                            <td>{index.color}</td>\r\n                                            <td>{index.idsizeclothes}</td>\r\n                                            <td>{index.idcategory}</td>\r\n                                            <td>{buyvalue.toLocaleString('pt-br' , {minimumFractionDigits : 2})}</td>\r\n                                            <td>{sellvalue.toLocaleString('pt-br' , {minimumFractionDigits : 2})}</td>\r\n                                            <td>{index.quantity}</td>\r\n                                            <td><Button onClick={()=>{this.painelDeControle(index.idproduct , \"entrada\")}} variant=\"outline-dark botaoTabela\">Entrada</Button>\r\n                                            <Button onClick={()=>{this.painelDeControle(index.idproduct , \"saida\")}} variant=\"outline-dark botaoTabela\">Saida</Button>\r\n                                            <Button onClick={()=>{this.painelDeControle(index.idproduct , \"editar\")}} variant=\"outline-dark botaoTabela\">Editar</Button></td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n\r\n\r\n                            })\r\n                            }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\Home.js",[],["87","88"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProductController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\index.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\CadastrarProdutos.js",["89"],"import {React , Component} from \"react\";\r\nimport {Form,Button} from \"react-bootstrap\"\r\nimport \"./Products.css\"\r\nimport sizeclothes from  \"../../../Controller/SizeClothesController\"\r\nimport category from  \"../../../Controller/CategoryController\"\r\nimport provider from  \"../../../Controller/ProviderController\"\r\nimport product from  \"../../../Controller/ProductController\"\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Category = new category()\r\nconst SizeClothes = new sizeclothes()\r\nconst Provider = new provider()\r\nconst Product = new product()\r\n\r\n\r\nexport default class CadastrarProdutos extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            newProduct: {\r\n                name : \"\",\r\n                description : \"\",\r\n                reference : \"\",\r\n                color : \"\",\r\n                idsizeclothes : 0,\r\n                idcategory : 0,\r\n                buyvalue : 0,\r\n                sellvalue : 0,\r\n                idprovider : 0,\r\n                quantity : 0\r\n            },\r\n            providers : [],\r\n            sizeclothes : [],\r\n            categories : []\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        SizeClothes.listAllSizeClothes().then(res => {this.setState({sizeclothes : res})})\r\n        Category.listAllCategories().then(res => {this.setState({categories : res})})\r\n        Provider.listAllProviders().then(res => {this.setState({providers : res})})\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n\r\n        let products = this.state.newProduct\r\n\r\n        if(event.target.id === \"formGroupnameProduct\"){products.name = event.target.value}\r\n        if(event.target.id === \"formGroupDescriptionProduct\"){products.description = event.target.value}\r\n        if(event.target.id === \"formGroupReference\"){products.reference = event.target.value}\r\n        if(event.target.id === \"formColorProduct\"){products.color = event.target.value}\r\n        if(event.target.id === \"formSizeProduct\"){products.idsizeclothes = event.target.value}\r\n        if(event.target.id === \"formCategoryProduct\"){products.idcategory = event.target.value}\r\n        if(event.target.id === \"formGroupBuyValue\"){products.buyvalue = event.target.value}\r\n        if(event.target.id === \"formGroupSellValue\"){products.sellvalue = event.target.value}\r\n        if(event.target.id === \"formProviderProduct\"){products.idprovider = event.target.value}\r\n        if(event.target.id === \"formGroupQuantityValue\"){products.quantity = event.target.value}\r\n\r\n        this.setState({newProduct : products})\r\n      }\r\n\r\n    handleSubmit(event) {\r\n    \r\n\r\n        if(this.verifyForm())\r\n        {\r\n            Product.RegisterNewProduct(this.state.newProduct)\r\n            .then(res => {\r\n                if(res.success)\r\n                {\r\n                    Swal.fire({\r\n                        title : \"Sucesso : \",\r\n                        text : \"Produto Cadastrado com Sucesso\",\r\n                        icon: \"success\",\r\n                        showConfirmButton:  false,\r\n                        timer : 2000,\r\n                        willClose : ()=>{\r\n                            window.location.href = \"/listarProdutos\"\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        event.preventDefault();\r\n      }\r\n\r\n\r\n      verifyForm = ()=>{\r\n        if(this.state.newProduct.name === \"\"){return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Nome\" , icon : \"error\"})}\r\n        else if(this.state.newProduct.description === \"\"){return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo DescriÃ§Ã£o\" , icon : \"error\"})}\r\n        else if(this.state.newProduct.reference === \"\"){return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Referencia\" , icon : \"error\"})}\r\n        else if(this.state.newProduct.color === \"\"){return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Cor\" , icon : \"error\"})}\r\n        else if(this.state.newProduct.idsizeclothes === \"\"){return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Tamanho\" , icon : \"error\"})}\r\n        else if(this.state.newProduct.idcategory === \"\"){return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Categoria\" , icon : \"error\"})}\r\n        else if(this.state.newProduct.buyvalue === \"\"){return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo PreÃ§o de Compra\" , icon : \"error\"})}\r\n        else if(this.state.newProduct.sellvalue === \"\"){return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo PreÃ§o de Venda\" , icon : \"error\"})}\r\n        else if(this.state.newProduct.idprovider === \"\"){return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Fornecedor\" , icon : \"error\"})}\r\n        else if(this.state.newProduct.quantity === \"\"){return Swal.fire({title : \"Erro de Preenchimento\" , text : \"Prrencha o campo Quantidade\" , icon : \"error\"})}\r\n        else{return true}\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupnameProduct\">\r\n                                <Form.Label>Nome do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.name} onChange={this.handleChange} type=\"text\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupDescriptionProduct\">\r\n                                <Form.Label>DescriÃ§Ã£o do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.description} onChange={this.handleChange} type=\"text\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupReference\">\r\n                                <Form.Label>Referencia do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.reference} onChange={this.handleChange} type=\"text\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group className=\"alignCenter\" controlId=\"formColorProduct\">\r\n                                <Form.Label>Cor do Produto</Form.Label>\r\n                                <Form.Control  value={this.state.newProduct.color} onChange={this.handleChange} as=\"select\" defaultValue=\"Choose...\">\r\n                                    <option>Selecione a Cor Do Produto</option>\r\n                                    <option>Preto</option>\r\n                                    <option>Branco</option>\r\n                                    <option>Bege</option>\r\n                                    <option>Sem Cores</option>\r\n                                    <option>Amarelo</option>\r\n                                    <option>Azul</option>\r\n                                    <option>Roxo</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3\">\r\n                                <Form.Group className=\"alignCenter\" controlId=\"formSizeProduct\">\r\n                                    <Form.Label>Tamanho do Produto/PeÃ§a</Form.Label>\r\n                                    <Form.Control value={this.state.newProduct.idsizeclothes} onChange={this.handleChange}  as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Selecione o Tamanho da PeÃ§a</option>\r\n                                        {\r\n                                        this.state.sizeclothes.map((index)=>{\r\n                                            return (\r\n                                            <option key={index.idsizeclothes} value={index.idsizeclothes}>{index.idsizeclothes}-{index.description}</option>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                                <Form.Group className=\"alignCenter\" controlId=\"formCategoryProduct\">\r\n                                    <Form.Label>Categoria do Produto</Form.Label>\r\n                                    <Form.Control value={this.state.newProduct.idcategory} onChange={this.handleChange}  as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Selecione a Categoria do Produto/PeÃ§a</option>\r\n                                        {\r\n                                            this.state.categories.map(index => {\r\n                                                return(\r\n                                                <option key={index.idcategory} value={index.idcategory}>{index.idcategory} - {index.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupBuyValue\">\r\n                                <Form.Label>PreÃ§o de COMPRA do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.buyvalue} onChange={this.handleChange} type=\"number\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupSellValue\">\r\n                                <Form.Label>PreÃ§o de VENDA do Produto</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.sellvalue} onChange={this.handleChange} type=\"number\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3\">\r\n                                <Form.Group className=\"alignCenter\" controlId=\"formProviderProduct\">\r\n                                    <Form.Label>Fornecedor</Form.Label>\r\n                                    <Form.Control value={this.state.newProduct.idprovider} onChange={this.handleChange}  as=\"select\" defaultValue=\"Choose...\">\r\n                                        <option>Selecione o Fornecedor de compra do produto/peÃ§a</option>\r\n                                        {\r\n                                            this.state.providers.map(index => {\r\n                                                return (\r\n                                                <option key={index.idprovider} value={index.idprovider}>{index.idprovider} - {index.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Group controlId=\"formGroupQuantityValue\">\r\n                                <Form.Label>Quantidade</Form.Label>\r\n                                <Form.Control value={this.state.newProduct.quantity} onChange={this.handleChange} type=\"number\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12 caixadeBotoes\">\r\n                        <div className=\"col-md-3\">\r\n                            <Button type=\"submit\" size=\"lg\" className=\"btn btn-success\">Cadastrar â</Button>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Button size=\"lg\" className=\"btn btn-danger\">Cancelar X</Button>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Button size=\"lg\" className=\"btn btn-warning\">Limpar</Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n",["90","91"],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\SizeClothesController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\ProviderController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\Controller\\CategoryController.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\SaidaDeProdutos.js",["92"],"import React from 'react'\r\nimport {Form , Button} from 'react-bootstrap'\r\nimport \"./Products.css\"\r\nimport product from \"../../../Controller/ProductController\"\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst Product = new product();\r\n\r\n\r\nexport default class SaidaDeProduto extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            product : {},\r\n            idProduct : this.props.match.params.id,\r\n            report : {\r\n                motivo : \"\",\r\n                descMotivo : \"\",\r\n                quantidadeARetirar : 0,\r\n                dataHoje : new Date().toISOString()\r\n            }\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n\r\n    \r\n    handleChange(event) {\r\n\r\n        let newReport = this.state.report\r\n\r\n        if(event.target.id === \"motivoSaida\"){newReport.motivo = event.target.value}\r\n        if(event.target.id === \"motivoSaidaDesc\"){newReport.descMotivo = event.target.value}\r\n        if(event.target.id === \"quantidadeARetirar\"){newReport.quantidadeARetirar = event.target.value}\r\n\r\n\r\n        newReport.dataHoje = new Date().toISOString()\r\n        this.setState({report : newReport})\r\n      }\r\n\r\n\r\n    handleSubmit(event) {\r\n        \r\n\r\n        if(this.state.report.quantidadeARetirar > this.state.product.quantity)\r\n        {\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                title: 'Quantidade InvÃ¡lida',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              })\r\n              return\r\n        }\r\n        \r\n        Product.SaidaEmProduto(this.state.idProduct , this.state.product.quantity ,this.state.report)\r\n        .then(res =>{\r\n            console.log(res)\r\n            if(res.success)\r\n            {\r\n                Swal.fire({\r\n                    title : \"Sucesso\",\r\n                    text : \"Saida executada com Sucesso\",\r\n                    icon : \"success\",\r\n                    showConfirmButton:  false,\r\n                    timer : 1500,\r\n                    willClose : ()=>{\r\n                        window.location.href = \"/listarProdutos\"\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                Swal.fire({\r\n                    title : \"Erro\",\r\n                    text : \"Ocorreu Algum erro Durante o Processo\",\r\n                    icon : \"error\",\r\n                    timer : 1500,\r\n                    willClose : ()=>{\r\n                        window.location.href = \"/listarProdutos\"\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            window.location.href = \"/listarProdutos\"\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n\r\n        let timerInterval\r\n        Swal.fire({\r\n        title: 'Carregando Conteudo',\r\n        html: 'Listando Produto, Aguarde...',\r\n        timer: 12000,\r\n        timerProgressBar: true,\r\n        showConfirmButton : false,\r\n        willOpen: () => {\r\n            Swal.showLoading()\r\n            timerInterval = setInterval(() => {\r\n            const content = Swal.getContent()\r\n            if (content) {\r\n                const b = content.querySelector('b')\r\n                if (b) {\r\n                b.textContent = Swal.getTimerLeft()\r\n                }\r\n            }\r\n            }, 100)\r\n            Product.ListProductForId(this.state.idProduct)\r\n            .then(res => {\r\n                if(res.length != 0)\r\n                {\r\n                    this.setState({product : res[0]})\r\n                    Swal.close()\r\n                }\r\n                else\r\n                {\r\n                    Swal.close()\r\n                    Swal.fire({title:\"Erro\" , text : \"Produto nÃ£o Encontrado\" , icon : \"error\"})\r\n                }\r\n            })\r\n        },\r\n        willClose: () => {\r\n            clearInterval(timerInterval)\r\n        }\r\n        }).then((result) => {\r\n        /* Read more about handling dismissals below */\r\n        if (result.dismiss === Swal.DismissReason.timer) {\r\n            \r\n        }\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <Form onSubmit={this.handleSubmit}>\r\n            <div id=\"produtoAntigo\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\"></div>\r\n                        <div className=\"col-md-6\">\r\n                            <h2>Produto Ã  Liberar Saida</h2>\r\n                        </div>\r\n                        <div className=\"col-md-3\"></div>\r\n                    </div>\r\n                    <div className=\"row mt-2\">\r\n                                <div className=\"col-md-3\">\r\n                                    <label>Nome</label>\r\n                                    <Form.Control value={this.state.product.name} id=\"nameProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <label>DescriÃ§Ã£o</label>\r\n                                    <Form.Control value={this.state.product.description} id=\"descriptionProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <label>ReferÃªncia</label>\r\n                                    <Form.Control value={this.state.product.reference} id=\"referenceProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-2\">\r\n                                    <label>Cor</label>\r\n                                    <Form.Control value={this.state.product.color} id=\"colorProductForm\" readOnly={true} />\r\n                                </div>\r\n                    </div>\r\n                    <div className=\"row mt-2\">\r\n                                <div className=\"col-md-2 \">\r\n                                    <label>Tamanho</label>\r\n                                    <Form.Control value={this.state.product.idsizeclothes} id=\"sizeClothesProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-3 \">\r\n                                    <label>PreÃ§o de Compra</label>\r\n                                    <Form.Control value={this.state.product.buyvalue} id=\"buyValueProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-3 \">\r\n                                    <label>PreÃ§o de Venda</label>\r\n                                    <Form.Control value={this.state.product.sellvalue} id=\"sellValueProductForm\" readOnly={true} />\r\n                                </div>\r\n                                <div className=\"col-md-3 \">\r\n                                    <label>Cor</label>\r\n                                    <Form.Control value={this.state.product.color} id=\"colorProductForm\" readOnly={true} />\r\n                                </div>\r\n                    </div>\r\n                    <div className=\"row mt-2\">\r\n                            <div className=\"col-md-4 \">\r\n                                    <label>Fornecedor</label>\r\n                                    <Form.Control value={this.state.product.idprovider} id=\"providerProductForm\" readOnly={true} />\r\n                            </div>\r\n                            <div className=\"col-md-2 \">\r\n                                    <label>Quantidade em Estoque</label>\r\n                                    <Form.Control value={this.state.product.quantity} id=\"quantityProductForm\" readOnly={true} />\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"row mt-2\"></div>\r\n                    <hr></hr>\r\n                    <div className=\"row mt-2\" id=\"pareceresSobreSaida\">\r\n                            <div className=\"col-md-12\">\r\n                                <h2>Motivos da SaÃ­da</h2>\r\n                            </div>\r\n                            <div className=\"row col-md-12\">\r\n                                <div className=\"col-md-4 mb-4 mt-4\">\r\n                                    <label>Motivo da SaÃ­da</label>\r\n                                    <Form.Control onChange={this.handleChange} id=\"motivoSaida\" as=\"select\">\r\n                                        <option value=\"default\">Selecione o Motivo</option>\r\n                                        <option value=\"produtoquebradomaluso\">Produto Quebrado ( Mal Uso )</option>\r\n                                        <option value=\"produtoquebradodefeito\">Produto Quebrado ( Defeito )</option>\r\n                                        <option value=\"saidaporvenda\">Saida Por Venda</option>\r\n                                        <option value=\"promocao\">PromoÃ§Ã£o</option>\r\n                                    </Form.Control>\r\n                                </div>\r\n                                <div className=\"col-md-5 mb-4 mt-4\">\r\n                                    <Form.Label>Descreva o Motivo da Saida</Form.Label>\r\n                                    <Form.Control onChange={this.handleChange} id=\"motivoSaidaDesc\" as=\"textarea\" rows={3} />\r\n                                </div>\r\n                                <div className=\"col-md-3 mb-4 mt-4\">\r\n                                    <Form.Label>Quantidade a Se retirar do Estoque</Form.Label>\r\n                                    <Form.Control  onChange={this.handleChange} id=\"quantidadeARetirar\" type=\"number\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row col-md-12\">\r\n                                <div className=\"col-md-4 mb-4 mt-4\">\r\n                                    <Button type=\"submit\" variant=\"outline-dark botaoTabela\">Confirmar â</Button>\r\n                                </div>\r\n                                <div className=\"col-md-4 mb-4 mt-4\">\r\n                                    <Button variant=\"outline-dark botaoTabela\">Limpar</Button>\r\n                                </div>\r\n                                <div className=\"col-md-4 mb-4 mt-4\">\r\n                                    <Button variant=\"outline-dark botaoTabela\">Cancelar X</Button>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                    </div>\r\n            </div>\r\n\r\n        </Form>\r\n        )\r\n    }\r\n\r\n\r\n}","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutos.js",["93"],"import { expr } from 'jquery'\r\nimport React from 'react'\r\nimport {Form , Button , Table} from \"react-bootstrap\"\r\nimport product from '../../../Controller/ProductController'\r\nimport \"./Products.css\"\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst Product = new product();\r\n\r\n\r\n\r\nexport default class EntradaDeProduto extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            product: {},\r\n            idProduct : 0,\r\n            quantidadeASeAdd : 0\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.handleSubmitAddQuantity = this.handleSubmitAddQuantity.bind(this);\r\n    }\r\n\r\n\r\n    async componentDidMount(){}\r\n\r\n\r\n    handleQuantity(event){\r\n        this.setState({quantidadeASeAdd : event.target.value})\r\n    }\r\n\r\n\r\n    handleSubmitAddQuantity(event)\r\n    {\r\n        var stateProduct = this.state.product\r\n        Product.EnterProductQuantity(stateProduct.idproduct , parseInt(this.state.quantidadeASeAdd) , stateProduct.quantity)\r\n        .then(res => {\r\n            if(res.success){\r\n                Swal.fire({\r\n                    title:  \"Sucesso ! \",\r\n                    text : \"Quantidade Adicionada com Sucesso ! \",\r\n                    icon : \"success\",\r\n                    timer : 1500,\r\n                    showConfirmButton : false,\r\n                    willClose : ()=>{\r\n                        window.location.href = \"/listarProdutos\"\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                Swal.fire({\r\n                    title:  \"ERRO : \",\r\n                    text : \"Quantidade Adicionada com Sucesso ! \",\r\n                    icon : \"success\",\r\n                    showConfirmButton:  false,\r\n                    timer : 1500,\r\n                    willClose : ()=>{\r\n                        window.location.href = \"/listarProdutos\"\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        .catch(err => {\r\n            Swal.fire({\r\n                title : \"ERRO : \" , \r\n                text : err,\r\n                icon : \"error\",\r\n                willClose : ()=>{\r\n                    window.location.href = \"/listarProdutos\"\r\n                }\r\n            })\r\n        })\r\n        this.setState({product : stateProduct})\r\n    }\r\n\r\n    handleSubmit(event){\r\n\r\n\r\n        if(this.state.idProduct === 0 || this.state.idProduct === null || this.state.idProduct === undefined)\r\n        {\r\n            Swal.fire({\r\n                title: \"Erro\" , \r\n                text : \"Preencha o campo De Pesquisa\",\r\n                icon : \"error\",\r\n                timer : 1500\r\n            })\r\n            return\r\n        }\r\n\r\n        let timerInterval\r\n        Swal.fire({\r\n        title: 'Carregando Conteudo',\r\n        html: 'Listando Produto, Aguarde...',\r\n        timer: 12000,\r\n        timerProgressBar: true,\r\n        showConfirmButton : false,\r\n        willOpen: () => {\r\n            Swal.showLoading()\r\n            timerInterval = setInterval(() => {\r\n            const content = Swal.getContent()\r\n            if (content) {\r\n                const b = content.querySelector('b')\r\n                if (b) {\r\n                b.textContent = Swal.getTimerLeft()\r\n                }\r\n            }\r\n            }, 100)\r\n            Product.ListProductForId(this.state.idProduct)\r\n            .then(res => {\r\n                document.getElementById('produtoPesquisado').innerHTML = \"\"\r\n                console.log(res)\r\n                this.setState({product : res[0]})\r\n                Swal.close()\r\n\r\n\r\n                let linhaProduto = \r\n                \"<tr>\"+\r\n                    \"<td><input name='idProdutoSelecionado' readonly class='form-control' value=\"+res[0].idproduct+\" /></td>\"+\r\n                    \"<td><input name='nomeProdutoSelecionado' readonly class='form-control' value=\"+res[0].name+\" /></td>\"+\r\n                    \"<td><input name='referenciaProdutoSelecionado' readonly class='form-control' value=\"+res[0].reference+\" /></td>\"+\r\n                    \"<td><input name='corProdutoSelecionado' readonly class='form-control' value=\"+res[0].color+\" /></td>\"+\r\n                    \"<td><input name='quantidadeProdutoSelecionado' readonly class='form-control' value=\"+res[0].quantity+\" /></td>\"+\r\n                \"</tr>\"\r\n                document.getElementById('produtoPesquisado').innerHTML += linhaProduto\r\n            })\r\n        },\r\n        willClose: () => {\r\n            clearInterval(timerInterval)\r\n        }\r\n        }).then((result) => {\r\n        /* Read more about handling dismissals below */\r\n        if (result.dismiss === Swal.DismissReason.timer) {\r\n            \r\n        }\r\n        })\r\n    }\r\n\r\n\r\n    handleChange(event){\r\n        this.setState({idProduct : event.target.value})\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <Form>  \r\n                <div className=\"row\">\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-3 mb-1 PainelDePesquisa\">\r\n                            <label>Pesquise por ID</label>\r\n                            <Form.Control onChange={this.handleChange} value={this.state.idProduct} type=\"text\" id=\"idOrReference\" placeholder=\"\" />\r\n                            {/* <Form.Check \r\n                                name=\"radiopesquisa\"\r\n                                type=\"radio\"\r\n                                id=\"radioId\"\r\n                                value=\"id\"\r\n                                onChange={this.handleChange}\r\n                                label=\"Pesquisa por ID\"\r\n                            />\r\n                            <Form.Check \r\n                                name=\"radiopesquisa\"\r\n                                type=\"radio\"\r\n                                value=\"reference\"\r\n                                onChange={this.handleChange}\r\n                                id=\"radioReference\"\r\n                                label=\"Pesquisa por ReferÃªncia\"\r\n                            /> */}\r\n                            <Button variant=\"outline-dark\" onClick={this.handleSubmit} className=\"mt-2\">Pesquisar</Button>\r\n                        </div>\r\n                        <h2>Produto Pesquisado</h2>\r\n                        <div className=\"col-md-2 mt-4\"></div>\r\n                        <div className=\"col-md-4\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\"><hr></hr></div>\r\n                <div className=\"row\">\r\n                    <div className=\"row col-md-12\">\r\n                        <div className=\"col-md-6 mt-4\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row col-md-12 mt-4\">\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>CÃ³digo</td>\r\n                                    <td>Nome</td>\r\n                                    <td>Referencia</td>\r\n                                    <td>Cor</td>\r\n                                    <td>Quantidade</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"produtoPesquisado\">\r\n                                \r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <div className=\"row col-md-12 mt-4\">\r\n                        <div className=\"col-md-4\"></div>\r\n                        <div className=\"col-md-4 painelAddQuantity\">\r\n                            <label>Quantidade a Se Adicionar</label>\r\n                            <Form.Control onChange={this.handleQuantity} value={this.state.quantidadeASeAdd}  />\r\n                            <Button variant=\"outline-dark\" onClick={this.handleSubmitAddQuantity}>Adicionar â</Button>\r\n                        </div>\r\n                        <div className=\"col-md-4 mt-4\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n        )\r\n    }\r\n\r\n }","D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\CadastrarFornecedores.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\providers\\ListarFornecedores.js",[],"D:\\Mrs.Gringa\\FinanceSistemFrontEndReact\\src\\components\\principal\\products\\EntradaDeProdutosViaNota.js",["94","95","96","97"],{"ruleId":"98","severity":1,"message":"99","line":2,"column":23,"nodeType":"100","messageId":"101","endLine":2,"endColumn":30},{"ruleId":"98","severity":1,"message":"102","line":2,"column":45,"nodeType":"100","messageId":"101","endLine":2,"endColumn":53},{"ruleId":"98","severity":1,"message":"103","line":2,"column":56,"nodeType":"100","messageId":"101","endLine":2,"endColumn":62},{"ruleId":"98","severity":1,"message":"104","line":3,"column":33,"nodeType":"100","messageId":"101","endLine":3,"endColumn":39},{"ruleId":"98","severity":1,"message":"105","line":34,"column":17,"nodeType":"100","messageId":"101","endLine":34,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":53,"column":1,"nodeType":"108","endLine":96,"endColumn":2},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":165,"column":65,"nodeType":"115","messageId":"116","endLine":165,"endColumn":67},{"ruleId":"113","severity":1,"message":"117","line":217,"column":64,"nodeType":"115","messageId":"118","endLine":217,"endColumn":66},{"ruleId":"109","replacedBy":"119"},{"ruleId":"111","replacedBy":"120"},{"ruleId":"98","severity":1,"message":"121","line":9,"column":10,"nodeType":"100","messageId":"101","endLine":9,"endColumn":20},{"ruleId":"109","replacedBy":"122"},{"ruleId":"111","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":125,"column":31,"nodeType":"126","messageId":"127","endLine":125,"endColumn":33},{"ruleId":"98","severity":1,"message":"128","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":14},{"ruleId":"98","severity":1,"message":"129","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":77,"column":27,"nodeType":"115","messageId":"116","endLine":77,"endColumn":29},{"ruleId":"113","severity":1,"message":"114","line":84,"column":27,"nodeType":"115","messageId":"116","endLine":84,"endColumn":29},{"ruleId":"113","severity":1,"message":"114","line":90,"column":27,"nodeType":"115","messageId":"116","endLine":90,"endColumn":29},"no-unused-vars","'NavItem' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'Button' is defined but never used.","'Router' is defined but never used.","'answers' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["130"],["131"],"'useHistory' is defined but never used.",["130"],["131"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'expr' is defined but never used.","'product' is defined but never used.","no-global-assign","no-unsafe-negation"]